<Window x:Class="ReadiMon.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"
		Title="{Binding MainWindowTitle}"
		Icon="/Resources/icon.ico"
		MinHeight="600"
		MinWidth="800"
		WindowState="Normal"
		WindowStartupLocation="CenterScreen"
		SizeChanged="Window_SizeChanged"
		StateChanged="Window_StateChanged">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Styles/AccordionStyle.xaml" />
				<ResourceDictionary Source="Resources/Resources.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="LinkButton"
				   TargetType="Button"
				   BasedOn="{StaticResource ResourceKey={x:Type Button}}">

				<Setter Property="Width"
						Value="Auto" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<ContentPresenter Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding  ContentTemplate}"
											  VerticalAlignment="Center">
								<ContentPresenter.Resources>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="TextDecorations"
												Value="Underline" />
									</Style>
								</ContentPresenter.Resources>
							</ContentPresenter>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground"
						Value="DarkRed" />
				<Setter Property="Cursor"
						Value="Hand" />
				<Setter Property="VerticalAlignment"
						Value="Center" />
				<Setter Property="VerticalContentAlignment"
						Value="Center" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver"
							 Value="true">
						<Setter Property="Foreground"
								Value="#55AAFF" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="20" />
			<RowDefinition Height="30" />
			<RowDefinition Height="*" />
			<RowDefinition Height="25" />
		</Grid.RowDefinitions>

		<Menu Grid.Row="0"
			  IsMainMenu="True">
			<MenuItem Header="_File">
				<MenuItem Header="E_xit"
						  Command="{Binding ExitCommand}" />
			</MenuItem>
			<MenuItem Header="_Tools">
				<MenuItem Header="_Sql Server..."
						  Command="{Binding SqlServerCommand}" />
				<MenuItem Header="_Redis Server..."
						  Command="{Binding RedisServerCommand}" />
				<Separator></Separator>
				<MenuItem Header="_Options..."
						  Command="{Binding OptionsCommand}" />
			</MenuItem>
			<MenuItem Header="_Help">
				<MenuItem Header="_Check for updates..."
						  Command="{Binding CheckForUpdateCommand}" />
				<MenuItem Header="_Auto update"
						  IsCheckable="True"
						  IsChecked="{Binding AutoUpdate, Mode=TwoWay}" />
				<Separator></Separator>
				<MenuItem Header="_About..."
						  Command="{Binding AboutCommand}" />
			</MenuItem>
		</Menu>

		<ToolBarTray Grid.Row="1"
					 IsLocked="True">
			<ToolBar BandIndex="1"
					 ItemsSource="{Binding ToolbarItems}"
					 Loaded="ToolBar_Loaded">

			</ToolBar>
		</ToolBarTray>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"
								  MinWidth="150"
								  MaxWidth="300" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="3*" />
			</Grid.ColumnDefinitions>

			<layoutToolkit:Accordion VerticalAlignment="Stretch"
									 HorizontalContentAlignment="Stretch"
									 HorizontalAlignment="Stretch"
									 Grid.Column="0"
									 SelectionSequence="Simultaneous"
									 x:Name="Accordion"
									 ItemsSource="{Binding SectionsView.View}"
									 SelectedItem="{Binding SelectedSection, Mode=TwoWay}"
									 SelectionMode="ZeroOrOne">
				<layoutToolkit:Accordion.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding Name}"
								   Foreground="Black"
								   FontWeight="Medium"></TextBlock>
					</DataTemplate>
				</layoutToolkit:Accordion.ItemTemplate>
				<layoutToolkit:Accordion.ContentTemplate>
					<DataTemplate>
						<Grid HorizontalAlignment="Stretch"
							  VerticalAlignment="Stretch"
							  Background="Transparent">
							<ListView ItemsSource="{Binding EntriesView.View}"
									  SelectedItem="{Binding SelectedEntry, Mode=TwoWay}">
								<ListView.Resources>
									<Style TargetType="ListViewItem">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ListViewItem">
													<Border Name="Border"
															Padding="2"
															SnapsToDevicePixels="true"
															Background="Transparent">
														<TextBlock Text="{Binding Name, Mode=OneTime}" />
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsSelected"
																 Value="true">
															<Setter TargetName="Border"
																	Property="Background"
																	Value="#7CEAC2" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ListView.Resources>
							</ListView>
						</Grid>
					</DataTemplate>
				</layoutToolkit:Accordion.ContentTemplate>
			</layoutToolkit:Accordion>

			<GridSplitter Grid.Column="1"
						  HorizontalAlignment="Center"
						  VerticalAlignment="Stretch"
						  Background="DarkGray"
						  Width="3" />

			<Grid Grid.Column="2" Grid.Row="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
				</Grid.RowDefinitions>

				<Border Grid.Row="0" Grid.Column="0" Height="0">
					<Border.Style>
						<Style>
							<Style.Triggers>
								<DataTrigger Binding="{Binding UpdateAvailable}" Value="True">
									<DataTrigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.5" From="0" To="20" />
											</Storyboard>
										</BeginStoryboard>
									</DataTrigger.EnterActions>
								</DataTrigger>
								<DataTrigger Binding="{Binding UpdateAvailableClose}" Value="True">
									<DataTrigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetProperty="Height" Duration="0:0:0.5" From="20" To="0" />
											</Storyboard>
										</BeginStoryboard>
									</DataTrigger.EnterActions>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Border.Style>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Content="Update available" FontWeight="Bold"
						Style="{StaticResource LinkButton}"
						Margin="0 0 20 0"
						Command="{Binding CheckForUpdateCommand}" />
						<Image Source="pack://application:,,,/ReadiMon;component/Resources/close.png" Height="16" Width="16" Margin="0 0 10 0" Cursor="Hand" ToolTip="Close">
							<Image.InputBindings>
								<MouseBinding Gesture="LeftClick" Command="{Binding CloseUpdateAvailable, Mode=OneWay}" />
							</Image.InputBindings>
						</Image>
					</StackPanel>
					
				</Border>
				<ContentControl Grid.Column="0" Grid.Row="1" Content="{Binding SelectedSection.SelectedEntry.UserInterface}" />
			</Grid>
		</Grid>

		<StatusBar Grid.Row="3">
			<StatusBar.ItemsPanel>
				<ItemsPanelTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
					</Grid>
				</ItemsPanelTemplate>
			</StatusBar.ItemsPanel>

			<StatusBarItem BorderThickness="1"
						   BorderBrush="DarkGray">
				<TextBlock x:Name="StatusControl"
						   Text="{Binding StatusText, Mode=OneWay}" />
			</StatusBarItem>
		</StatusBar>
	</Grid>
</Window>
