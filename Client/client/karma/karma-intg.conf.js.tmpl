
module.exports = function (config) {
    config.set({

        basePath: './',
        frameworks: ['jasmine'],
        plugins: [
            'karma-teamcity-reporter',
            'karma-jasmine',
            'karma-coverage',
            'karma-chrome-launcher',
            'karma-firefox-launcher',
            'karma-ie-launcher',
            'karma-junit-reporter'
        ],


        files: [
			'testSupport/googleApi.js',
<%
        var isDEV = grunt.config('DEV');
        if (!isDEV) {
            print("			'../js/libs.min.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_components.min.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_app.min.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_app2.min.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_builders.min.js',\n");

        } else {
            print("			'../js/libs.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_components.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_app.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_app2.js',\n");
            print("			'../js/" + grunt.config.get('pkg.name') + "_builders.js',\n");
        }
%>
			'lib/angular/angular-mocks.js',
			'testSupport/spapi*.js',
			'testSupport/intgTestSupport.js',
			'testSupport/testSupport.js',
			'src/**/*.intg.js'
        ],

        exclude: [
            'src/**/*.spec.js'
        ],

        /**
         * How to report, by default.
         * Enable the following line to output to the results file
         * Otherwise comment out to see results in console
         */
        reporters: [
            'teamcity',
            'progress',
            'junit',
            'dots',
            'coverage'
        ],

        junitReporter: {
            outputFile: '../testOut/integration.xml',
            suite: 'integration'
        },

        /**
         * On which port should the browser connect, on which port is the test runner
         * operating, and what is the URL path for the browser to use.
         */
        port: 9018,
        runnerPort: 9100,
        urlRoot: '/',

        /**
         * Defaults...
         */
        logLevel: config.LOG_INFO,
        autoWatch: false,
        singleRun: true,
        captureTimeout: 60000,
   		browserNoActivityTimeout: 90000,
   		browserDisconnectTimeout: 20000,

   		client: {
   		    captureConsole: true,
   		    useIframe: true,
   		},

        /**
         * The list of browsers to launch to test on. This includes only "Firefox" by
         * default, but other browser names include:
         * Chrome, ChromeCanary, Firefox, Opera, Safari, PhantomJS
         *
         * Note that you can also use the executable name of the browser, like "chromium"
         * or "firefox", but that these vary based on your operating system.
         *
         * You may also leave this blank and manually navigate your browser to
         * http://localhost:9018/ when you're running tests. The window/tab can be left
         * open and the tests will automatically occur there during the build. This has
         * the aesthetic advantage of not launching a browser every time you save.
         */
        customLaunchers: {
            Chrome1: {
                base: 'Chrome',
                flags: ['--window-size=800,600']
            }
        },
        browsers: [
          'Chrome1'
        ]
    });
};
