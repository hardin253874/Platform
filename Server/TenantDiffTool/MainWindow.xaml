<Window x:Class="TenantDiffTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:TenantDiffTool.Controls"
        xmlns:core="clr-namespace:TenantDiffTool.Core"
        xmlns:wpfx="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Tenant/Application Diff" Height="800" Width="700" WindowStartupLocation="CenterScreen"
        core:WindowAttachedProperties.CloseWindow="{Binding CloseWindow}">

	<Window.Resources>
		<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
		<SolidColorBrush x:Key="NormalBrush" Color="#888" />
		<SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
		<SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
		<SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<!-- Heading row -->
			<RowDefinition Height="Auto" />

			<!-- Main Diff row -->
			<RowDefinition Height="*" />

			<!-- Buttons row -->
			<RowDefinition Height="Auto" />

		</Grid.RowDefinitions>

		<Grid Grid.Row="0" Background="AliceBlue">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<Image Grid.Row="0"
			       Grid.Column="0"
			       Width="75"
			       Height="60"
			       Margin="20,5,10,5"
			       HorizontalAlignment="Left"
			       Source="pack://application:,,,/Resources/Header.png"
			       Stretch="Uniform" />

			<StackPanel Grid.Row="0"
			            Grid.Column="1"
			            VerticalAlignment="Center"
			            Orientation="Vertical">

				<TextBlock FontSize="11"
				           FontWeight="Bold"
				           Text="SoftwarePlatform.com" />
				<TextBlock Margin="0,-5,0,0"
				           FontSize="18"
				           FontWeight="ExtraBold"
				           Text="Tenant/Application Diff" />

			</StackPanel>

			<StackPanel Grid.Row="0"
			            Grid.Column="2"
			            Margin="10"
			            VerticalAlignment="Center"
			            Orientation="Vertical">

				<controls:SearchTextBox Width="150"
				                        Height="21" Cursor="IBeam" IsEnabled="{Binding SearchEnabled, Mode=OneWay}"
				                        SearchCommand="{Binding SearchCommand}"
				                        SearchEventTimeDelay="00:00:00.20"
				                        SearchMode="Instant" />


			</StackPanel>

			<ToolBar Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" AllowDrop="False" ToolBarTray.IsLocked="True">
				<ToggleButton ToolTip="Only Show Differences" IsChecked="{Binding OnlyShowDifferences, Mode=TwoWay}">
					<Image Source="pack://application:,,,/Resources/outer_join.png" />
				</ToggleButton>
				<ToggleButton ToolTip="Exclude Relationship Instances"
				              IsChecked="{Binding ExcludeRelationshipInstances, Mode=TwoWay}">
					<Image Source="pack://application:,,,/Resources/delete.png" />
				</ToggleButton>
				<ToggleButton ToolTip="Ignore Xml Whitespace"
				              IsChecked="{Binding IgnoreXmlWhitespace, Mode=TwoWay}">
					<Image Source="pack://application:,,,/Resources/whitespace.png" />
				</ToggleButton>
				<Separator></Separator>
				<Button ToolTip="Next Difference" Command="{Binding NextDifference, Mode=TwoWay}">
					<Image Source="pack://application:,,,/Resources/arrow_down.png" />
				</Button>
				<Button ToolTip="Previous Difference" Command="{Binding PreviousDifference, Mode=TwoWay}">
					<Image Source="pack://application:,,,/Resources/arrow_up.png" />
				</Button>
			</ToolBar>

		</Grid>

		<!-- Main Diff row -->
		<Grid Grid.Row="1">
			<Grid.RowDefinitions>

				<!-- Details row -->
				<RowDefinition Height="Auto" />

				<!-- Diff row -->
				<RowDefinition Height="5*" />

				<!-- Splitter row -->
				<RowDefinition Height="5" />

				<!-- Text row -->
				<RowDefinition Height="*" />

				<!-- Count row -->
				<RowDefinition Height="Auto" />

			</Grid.RowDefinitions>

			<Grid.ColumnDefinitions>

				<!-- Left -->
				<ColumnDefinition Width="*" />

				<!-- Splitter -->
				<ColumnDefinition Width="5" />

				<!-- Right -->
				<ColumnDefinition Width="*" />

			</Grid.ColumnDefinitions>

			<!-- Left details -->
			<Grid Grid.Column="0" Grid.Row="0">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Label Content="Left Source:" Grid.Column="0" VerticalAlignment="Center" Margin="5,5,0,5" FontSize="10"></Label>

				<TextBox Grid.Column="1" Margin="5,5,0,5" IsReadOnly="True" FontSize="10" Height="20" VerticalAlignment="Center"
				         Text="{Binding LeftSource.SourceString, Mode=OneWay}">
				</TextBox>

				<Button Content="..." Grid.Column="2" Width="20" Height="20" VerticalAlignment="Center" Margin="5,5,5,5"
				        Command="{Binding LeftSourceSelectCommand, Mode=OneWay}">
					<ToolTipService.ToolTip>
						<ToolTip Content="Select Left Source" />
					</ToolTipService.ToolTip>
				</Button>

			</Grid>

			<!-- Right details -->
			<Grid Grid.Column="2" Grid.Row="0">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Label Content="Right Source:" Grid.Column="0" VerticalAlignment="Center" FontSize="10" Margin="5,5,0,5"></Label>

				<TextBox Grid.Column="1" Margin="5,5,0,5" IsReadOnly="True" FontSize="10" Height="20" VerticalAlignment="Center"
				         Text="{Binding RightSource.SourceString, Mode=OneWay}">
				</TextBox>

				<Button Content="..." Grid.Column="2" Width="20" Height="20" VerticalAlignment="Center" Margin="5,5,5,5"
				        Command="{Binding RightSourceSelectCommand, Mode=OneWay}">
					<ToolTipService.ToolTip>
						<ToolTip Content="Select Right Source" />
					</ToolTipService.ToolTip>
				</Button>

			</Grid>

			<!-- Left -->
			<DataGrid Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,5,0,5"
			          CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="True"
			          CanUserSortColumns="False" SelectionMode="Single" SelectionUnit="FullRow"
			          GridLinesVisibility="None" AutoGenerateColumns="False" RowHeight="15" IsReadOnly="True"
			          CanUserResizeRows="False"
			          FontSize="10" ItemsSource="{Binding LeftDiff, Mode=OneWay}"
			          SelectedIndex="{Binding LeftSelectedIndex, Mode=TwoWay}"
			          core:Commands.DataGridDoubleClickCommand="{Binding LeftDoubleClick, Mode=OneWay}"
			          core:DataGridBehavior.AutoScrollIntoView="True">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Type" Width="Auto" Binding="{Binding Type}"></DataGridTextColumn>
					<DataGridTextColumn Header="Data" Width="*" Binding="{Binding Data}"></DataGridTextColumn>
				</DataGrid.Columns>
				<DataGrid.RowStyle>
					<Style TargetType="DataGridRow">
						<Setter Property="ToolTip">
							<Setter.Value>
								<TextBlock Text="{Binding ToolTip}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background" Value="{Binding RowBackground}" />
					</Style>
				</DataGrid.RowStyle>
				<DataGrid.CellStyle>
					<Style TargetType="DataGridCell">
						<Setter Property="BorderThickness" Value="0" />
					</Style>
				</DataGrid.CellStyle>
				<DataGrid.Resources>
					<Style TargetType="ScrollViewer">
						<Setter Property="controls:ScrollSynchronizer.ScrollGroup" Value="Group1" />
					</Style>
					<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
					<LinearGradientBrush x:Key="ListBoxBackgroundBrush"
					                     StartPoint="0,0" EndPoint="1,0.001">
						<GradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="White" Offset="0.0" />
								<GradientStop Color="White" Offset="0.6" />
								<GradientStop Color="#DDDDDD" Offset="1.2" />
							</GradientStopCollection>
						</GradientBrush.GradientStops>
					</LinearGradientBrush>
					<LinearGradientBrush x:Key="StandardBrush"
					                     StartPoint="0,0" EndPoint="0,1">
						<GradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="#FFF" Offset="0.0" />
								<GradientStop Color="#CCC" Offset="1.0" />
							</GradientStopCollection>
						</GradientBrush.GradientStops>
					</LinearGradientBrush>
					<SolidColorBrush x:Key="GlyphBrush" Color="#444" />
					<LinearGradientBrush x:Key="PressedBrush"
					                     StartPoint="0,0" EndPoint="0,1">
						<GradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="#BBB" Offset="0.0" />
								<GradientStop Color="#EEE" Offset="0.1" />
								<GradientStop Color="#EEE" Offset="0.9" />
								<GradientStop Color="#FFF" Offset="1.0" />
							</GradientStopCollection>
						</GradientBrush.GradientStops>
					</LinearGradientBrush>

					<!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
					<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Setter Property="Focusable" Value="false" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<Border
										Name="Border"
										Margin="1"
										CornerRadius="2"
										Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
										BorderBrush="{StaticResource NormalBorderBrush}"
										BorderThickness="1">
										<Path
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Fill="{StaticResource GlyphBrush}"
											Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsPressed" Value="true">
											<Setter TargetName="Border" Property="Background"
											        Value="{StaticResource PressedBrush}" />
										</Trigger>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Foreground"
											        Value="{StaticResource DisabledForegroundBrush}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
					<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Setter Property="IsTabStop" Value="false" />
						<Setter Property="Focusable" Value="false" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<Border Background="Transparent" />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
					<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Setter Property="IsTabStop" Value="false" />
						<Setter Property="Focusable" Value="false" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Thumb}">
									<Border
										CornerRadius="2"
										Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="1" />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<ControlTemplate x:Key="VerticalScrollBar"
					                 TargetType="{x:Type ScrollBar}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="18" />
								<RowDefinition Height="0.00001*" />
								<RowDefinition MaxHeight="18" />
							</Grid.RowDefinitions>
							<Border
								Grid.RowSpan="3"
								CornerRadius="2"
								Background="#F0F0F0" />
							<Image Source="{Binding MapImageLeft, Mode=OneWay}" HorizontalAlignment="Stretch" Width="50"
							       VerticalAlignment="Stretch"
							       Grid.Column="0" Grid.Row="1" Stretch="Fill" StretchDirection="Both" Cursor="Hand" Margin="5" />
							<RepeatButton
								Grid.Row="0"
								Style="{StaticResource ScrollBarLineButton}"
								Height="18"
								Command="ScrollBar.LineUpCommand"
								Content="M 0 4 L 8 4 L 4 0 Z" />

							<Track
								Name="PART_Track"
								Grid.Row="1"
								IsDirectionReversed="true">
								<Track.DecreaseRepeatButton>
									<RepeatButton
										Style="{StaticResource ScrollBarPageButton}"
										Command="ScrollBar.PageUpCommand" />
								</Track.DecreaseRepeatButton>
								<Track.Thumb>
									<Thumb
										Style="{StaticResource ScrollBarThumb}"
										Margin="1,0,1,0"
										Background="{StaticResource HorizontalNormalBrush}"
										BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton
										Style="{StaticResource ScrollBarPageButton}"
										Command="ScrollBar.PageDownCommand" />
								</Track.IncreaseRepeatButton>
							</Track>
							<RepeatButton
								Grid.Row="3"
								Style="{StaticResource ScrollBarLineButton}"
								Height="18"
								Command="ScrollBar.LineDownCommand"
								Content="M 0 0 L 4 4 L 8 0 Z" />
						</Grid>
					</ControlTemplate>
					<!-- Style for overall  ScrollBar -->
					<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Style.Triggers>
							<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="Width" Value="18" />
								<Setter Property="Height" Value="Auto" />
								<Setter Property="Template"
								        Value="{StaticResource VerticalScrollBar}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</DataGrid.Resources>
			</DataGrid>

			<Grid Grid.Row="4" Grid.Column="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding LeftCountString, Mode=OneWay}" Margin="5,0,5,0"
				           FontSize="10">
				</TextBlock>
			</Grid>


			<GridSplitter Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" HorizontalAlignment="Stretch"></GridSplitter>

			<!-- Right -->
			<DataGrid Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,5,5,5"
			          CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="True"
			          CanUserSortColumns="False" SelectionMode="Single" SelectionUnit="FullRow" CanUserResizeRows="False"
			          GridLinesVisibility="None" AutoGenerateColumns="False" RowHeight="15" IsReadOnly="True"
			          FontSize="10" ItemsSource="{Binding RightDiff, Mode=OneWay}"
			          SelectedIndex="{Binding RightSelectedIndex, Mode=TwoWay}"
			          core:Commands.DataGridDoubleClickCommand="{Binding RightDoubleClick, Mode=OneWay}"
			          core:DataGridBehavior.AutoScrollIntoView="True">
				<DataGrid.Columns>
					<DataGridTextColumn Header="Type" Width="Auto" Binding="{Binding Type}"></DataGridTextColumn>
					<DataGridTextColumn Header="Data" Width="*" Binding="{Binding Data}"></DataGridTextColumn>
				</DataGrid.Columns>
				<DataGrid.RowStyle>
					<Style TargetType="DataGridRow">
						<Setter Property="ToolTip">
							<Setter.Value>
								<TextBlock Text="{Binding ToolTip}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background" Value="{Binding RowBackground}" />
					</Style>
				</DataGrid.RowStyle>
				<DataGrid.CellStyle>
					<Style TargetType="DataGridCell">
						<Setter Property="BorderThickness" Value="0" />
					</Style>
				</DataGrid.CellStyle>
				<DataGrid.Resources>
					<Style TargetType="ScrollViewer">
						<Setter Property="controls:ScrollSynchronizer.ScrollGroup" Value="Group1" />
					</Style>
					<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
					<LinearGradientBrush x:Key="ListBoxBackgroundBrush"
					                     StartPoint="0,0" EndPoint="1,0.001">
						<GradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="White" Offset="0.0" />
								<GradientStop Color="White" Offset="0.6" />
								<GradientStop Color="#DDDDDD" Offset="1.2" />
							</GradientStopCollection>
						</GradientBrush.GradientStops>
					</LinearGradientBrush>
					<LinearGradientBrush x:Key="StandardBrush"
					                     StartPoint="0,0" EndPoint="0,1">
						<GradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="#FFF" Offset="0.0" />
								<GradientStop Color="#CCC" Offset="1.0" />
							</GradientStopCollection>
						</GradientBrush.GradientStops>
					</LinearGradientBrush>
					<SolidColorBrush x:Key="GlyphBrush" Color="#444" />
					<LinearGradientBrush x:Key="PressedBrush"
					                     StartPoint="0,0" EndPoint="0,1">
						<GradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="#BBB" Offset="0.0" />
								<GradientStop Color="#EEE" Offset="0.1" />
								<GradientStop Color="#EEE" Offset="0.9" />
								<GradientStop Color="#FFF" Offset="1.0" />
							</GradientStopCollection>
						</GradientBrush.GradientStops>
					</LinearGradientBrush>

					<!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
					<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Setter Property="Focusable" Value="false" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<Border
										Name="Border"
										Margin="1"
										CornerRadius="2"
										Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
										BorderBrush="{StaticResource NormalBorderBrush}"
										BorderThickness="1">
										<Path
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Fill="{StaticResource GlyphBrush}"
											Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsPressed" Value="true">
											<Setter TargetName="Border" Property="Background"
											        Value="{StaticResource PressedBrush}" />
										</Trigger>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Foreground"
											        Value="{StaticResource DisabledForegroundBrush}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
					<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Setter Property="IsTabStop" Value="false" />
						<Setter Property="Focusable" Value="false" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RepeatButton}">
									<Border Background="Transparent" />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
					<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Setter Property="IsTabStop" Value="false" />
						<Setter Property="Focusable" Value="false" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Thumb}">
									<Border
										CornerRadius="2"
										Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="1" />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>

					<ControlTemplate x:Key="VerticalScrollBar"
					                 TargetType="{x:Type ScrollBar}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="18" />
								<RowDefinition Height="0.00001*" />
								<RowDefinition MaxHeight="18" />
							</Grid.RowDefinitions>
							<Border
								Grid.RowSpan="3"
								CornerRadius="2"
								Background="#F0F0F0" />
							<Image Source="{Binding MapImageRight, Mode=OneWay}" HorizontalAlignment="Stretch" Width="50"
							       VerticalAlignment="Stretch"
							       Grid.Column="0" Grid.Row="1" Stretch="Fill" StretchDirection="Both" Cursor="Hand" Margin="5" />
							<RepeatButton
								Grid.Row="0"
								Style="{StaticResource ScrollBarLineButton}"
								Height="18"
								Command="ScrollBar.LineUpCommand"
								Content="M 0 4 L 8 4 L 4 0 Z" />
							<Track
								Name="PART_Track"
								Grid.Row="1"
								IsDirectionReversed="true">
								<Track.DecreaseRepeatButton>
									<RepeatButton
										Style="{StaticResource ScrollBarPageButton}"
										Command="ScrollBar.PageUpCommand" />
								</Track.DecreaseRepeatButton>
								<Track.Thumb>
									<Thumb
										Style="{StaticResource ScrollBarThumb}"
										Margin="1,0,1,0"
										Background="{StaticResource HorizontalNormalBrush}"
										BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton
										Style="{StaticResource ScrollBarPageButton}"
										Command="ScrollBar.PageDownCommand" />
								</Track.IncreaseRepeatButton>
							</Track>
							<RepeatButton
								Grid.Row="3"
								Style="{StaticResource ScrollBarLineButton}"
								Height="18"
								Command="ScrollBar.LineDownCommand"
								Content="M 0 0 L 4 4 L 8 0 Z" />
						</Grid>
					</ControlTemplate>
					<!-- Style for overall  ScrollBar -->
					<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
						<Setter Property="SnapsToDevicePixels" Value="True" />
						<Setter Property="OverridesDefaultStyle" Value="true" />
						<Style.Triggers>
							<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="Width" Value="18" />
								<Setter Property="Height" Value="Auto" />
								<Setter Property="Template"
								        Value="{StaticResource VerticalScrollBar}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</DataGrid.Resources>
			</DataGrid>

			<GridSplitter Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" Grid.ColumnSpan="3" ResizeDirection="Rows"></GridSplitter>

			<RichTextBox Grid.Row="3" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
			             IsReadOnly="True" core:RichTextBoxHelper.DocumentXaml="{Binding LeftDocument, Mode=OneWay}"
			             HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" />
			<RichTextBox Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
			             IsReadOnly="True" core:RichTextBoxHelper.DocumentXaml="{Binding RightDocument, Mode=OneWay}"
			             HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" />

			<Grid Grid.Row="4" Grid.Column="2">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding RightCountString, Mode=OneWay}" Margin="5,0,5,0"
				           FontSize="10">
				</TextBlock>
			</Grid>
		</Grid>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
				<Button Content="Generate Diff File" Margin="10" Width="150" Command="{Binding GenDiffCommand,Mode=OneWay}" IsEnabled="{Binding GenDiffEnabled, Mode=TwoWay}" ToolTip="Generate a SQLite script file."></Button>
			</StackPanel>

			<StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
				<Button Content="Close" Margin="10" Width="80" Command="{Binding CloseCommand,Mode=OneWay}"></Button>
			</StackPanel>

		</Grid>
		

		<wpfx:BusyIndicator Grid.RowSpan="3"
		                    BusyContent="{Binding BusyMessage,
		                                          Mode=OneWay}"
		                    DisplayAfter="0"
		                    IsBusy="{Binding IsBusy,
		                                     Mode=OneWay}" />
	</Grid>
</Window>