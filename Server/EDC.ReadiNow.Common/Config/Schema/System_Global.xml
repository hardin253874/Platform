<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="core" xmlns:k="console" xsi:schemaLocation=". ../Core.xsd k ../Console.xsd" defaultSolution="systemSolution">
  <!--Copyright 2011-2016 Global Software Innovation Pty Ltd-->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!--    SYSTEM APPLICATION DATA                                       -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <!-- 'System' solution resource -->
  <solution>
    <alias>systemSolution</alias>
    <name>ReadiNow System</name>
    <description>Global tenant system application that tracks tenants and application library.</description>
    <solutionVersionString>1.0.0.0</solutionVersionString>
    <solutionPublisher>Readinow Corporation</solutionPublisher>
    <solutionPublisherUrl>http://www.readinow.com</solutionPublisherUrl>
    <solutionReleaseDate>2016-10-27</solutionReleaseDate>
    <legacyGuid>bf9112dc-0a9b-423f-b2bd-fb7e14213fb7</legacyGuid>
    <packageId>00000000-0000-0000-0000-000000000000</packageId> <!-- generated by transform step -->
  </solution>
  
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!--    TENANTS AND SOLUTIONS                                         -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- 'Tenant' type -->
  <type>
    <alias>tenant</alias>
    <name>Tenant</name>
    <description>An individual customer in the multi-tenanted platform.</description>
    <systemTenantOnly>true</systemTenantOnly>
    <generateCode>true</generateCode>
    <onBeforeDelete>tenantEventTarget</onBeforeDelete>
    <onAfterDelete>tenantEventTarget</onAfterDelete>
    <onBeforeSave>tenantEventTarget</onBeforeSave>
    <onAfterSave>tenantEventTarget</onAfterSave>
    <onDeleteFailed>tenantEventTarget</onDeleteFailed>
    <onSaveFailed>tenantEventTarget</onSaveFailed>
    <fields>
      <boolField>
        <alias>isTenantDisabled</alias>
        <name>Disabled</name>
        <description>Disables the tenant.</description>
        <defaultValue>false</defaultValue>
        <excludeFieldFromPublish>true</excludeFieldFromPublish>
        <isFieldReadOnly>true</isFieldReadOnly>
        <fieldInGroup>system</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </boolField>
    </fields> 
  </type>
  
  <!-- Tenant Event Target -->
  <target>
    <alias>tenantEventTarget</alias>
    <typeName>EDC.ReadiNow.Model.EventClasses.TenantEventTarget</typeName>
    <assemblyName>EDC.ReadiNow.Common, Version=1.0.0.0, Culture=neutral</assemblyName>
    <ordinal>0</ordinal>
  </target>
  
  <!-- 'Application' type -->
  <type>
    <alias>app</alias>
    <name>Application</name>
    <description>A SoftwarePlatform application. Applications can have multiple versions (packages), and it is individual packages that are installed.</description>
    <systemTenantOnly>true</systemTenantOnly>
    <generateCode>true</generateCode>
    <isMetadata>true</isMetadata>
    <fieldGroups>
      <fieldGroup>
        <name>Application Details</name>
        <alias>appDetails</alias>
      </fieldGroup>
    </fieldGroups>
    <fields>
      <guidField>
        <name>Application Id</name>
        <alias>applicationId</alias>
        <fieldInGroup>appDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </guidField>
      <dateField>
        <alias>releaseDate</alias>
        <name>Release date</name>
        <description>The date the application was released.</description>
        <fieldInGroup>appDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </dateField>
      <stringField>
        <alias>publisher</alias>
        <name>Publisher</name>
        <description>The applications publisher.</description>
        <fieldInGroup>appDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </stringField>
      <stringField>
        <alias>publisherUrl</alias>
        <name>Publisher URL</name>
        <description>URL of the application publisher.</description>
        <fieldInGroup>appDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </stringField>
    </fields>
  </type>
  
  <!-- 'Application Package' (version) type -->
  <type>
    <alias>appPackage</alias>
    <name>Application Package</name>
    <description>A package that is installed in the application library. A specific version of an application.</description>
    <systemTenantOnly>true</systemTenantOnly>
    <generateCode>true</generateCode>
    <fieldGroups>
      <fieldGroup>
        <name>Application Package Details</name>
        <alias>appPackageDetails</alias>
      </fieldGroup>
    </fieldGroups>
    <fields>
      <guidField>
        <name>App version Id</name>
        <alias>appVerId</alias>
        <fieldInGroup>appPackageDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </guidField>
      <stringField>
        <name>Version</name>
        <alias>appVersionString</alias>
        <fieldInGroup>appPackageDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </stringField> 
      <dateField>
        <alias>publishDate</alias>
        <name>Publish date</name>
        <description>Date the package was published.</description>
        <fieldInGroup>appPackageDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </dateField>
      <dateField>
        <alias>appPackageReleaseDate</alias>
        <name>Release date</name>
        <description>Date the package was released.</description>
        <fieldInGroup>appPackageDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </dateField>
    </fields>
    <relationships>
      <relationship>
        <alias>packageForApplication</alias>
        <name>Package for Application</name>
        <reverseAlias>applicationPackages</reverseAlias>
        <toType>app</toType>
        <systemTenantOnly>true</systemTenantOnly>
        <generateCode>true</generateCode>
        <relType>relLookup</relType>
      </relationship>
    </relationships>
  </type>

  <!-- 'Application Package Dependency' type -->
  <type>
    <alias>appPackageDependency</alias>
    <name>Application Package Dependency</name>
    <description>Tracks dependencies between application packages.</description>
    <systemTenantOnly>true</systemTenantOnly>
    <generateCode>true</generateCode>
    <fieldGroups>
      <fieldGroup>
        <name>Application Package Dependency Details</name>
        <alias>appPackageDependencyDetails</alias>
      </fieldGroup>
    </fieldGroups>
    <fields>
      <stringField>
        <name>Minimum version</name>
        <alias>appPackageMinimumVersion</alias>
        <fieldInGroup>appPackageDependencyDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </stringField>
      <stringField>
        <name>Maximum version</name>
        <alias>appPackageMaximumVersion</alias>
        <fieldInGroup>appPackageDependencyDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </stringField>
      <boolField>
        <name>Is required</name>
        <alias>appPackageIsRequired</alias>
        <fieldInGroup>appPackageDependencyDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </boolField>
      <guidField>
        <name>Dependency application Id</name>
        <alias>appPackageDependencyId</alias>
        <fieldInGroup>appPackageDependencyDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </guidField>
      <stringField>
        <name>Dependency application name</name>
        <alias>appPackageDependencyName</alias>
        <fieldInGroup>appPackageDependencyDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </stringField>
    </fields>
    <relationships>
      <relationship>
        <alias>dependentAppPackage</alias>
        <name>Dependent package</name>
        <generateCode>true</generateCode>
        <reverseAlias>dependentAppPackageDetails</reverseAlias>
        <description>The package that requires the 'dependency' to exist for it to be present.</description>
        <toType>appPackage</toType>
        <relType>relComponentOf</relType>
        <relationshipInFromTypeGroup>appPackageDependencyDetails</relationshipInFromTypeGroup>
        <relationshipInToTypeGroup>appPackageDependencyDetails</relationshipInToTypeGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </relationship>
    </relationships>
  </type>
  
  <!-- Tenant to app package relationship -->
  <relationship>
    <alias>activatedAppPackages</alias>
    <reverseAlias>tenantsWithPackage</reverseAlias>
    <name>Activated App Packages</name>
    <generateCode>true</generateCode>
    <description>Indicates that a tenant has installed an application package.</description>
    <fromType>tenant</fromType>
    <toType>appPackage</toType>
    <systemTenantOnly>true</systemTenantOnly>
    <relType>relManyToMany</relType>
    <hideOnToType>true</hideOnToType>
  </relationship>

  <!-- 'Can Install Applications'relationship -->
  <relationship>
    <alias>canInstallApplication</alias>
    <name>Can Install Applications</name>
    <description>Indicates that a tenant may install an application.</description>
    <fromType>tenant</fromType>
    <toType>app</toType>
    <systemTenantOnly>true</systemTenantOnly>
    <relType>relManyToMany</relType>
    <hideOnToType>true</hideOnToType>
  </relationship>

  <!-- 'Can Publish Applications'relationship -->
  <relationship>
    <alias>canPublishApplication</alias>
    <name>Can Publish Applications</name>
    <description>Indicates that a tenant may publish updates to an application.</description>
    <fromType>tenant</fromType>
    <toType>app</toType>
    <systemTenantOnly>true</systemTenantOnly>
    <relType>relManyToMany</relType>
    <hideOnToType>true</hideOnToType>
  </relationship>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!--    GLOBAL TENANT SCHEDULES AND TRIGGERS                          -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <scheduleAction>
    <alias>cleanupFileRepositoriesAction</alias>
    <inherits>scheduledItem</inherits>
    <name>Clean up file repositories action</name>
    <description>When fired, deletes all unreferenced files from the file repositories.</description>
    <systemTenantOnly>true</systemTenantOnly>
    <generateCode>false</generateCode>
    <onScheduleFire>
      <class>
        <alias>cleanupFileRepositoriesActionClass</alias>
        <name>cleanupFileRepositoriesAction</name>
        <typeName>EDC.ReadiNow.IO.CleanupFileRepositoriesAction</typeName>
        <assemblyName>EDC.ReadiNow.Common, Version=1.0.0.0, Culture=neutral</assemblyName>
      </class>
    </onScheduleFire>
  </scheduleAction>

  <scheduleCron>
    <alias>fileCleanupSchedule</alias>
    <name>File cleanup schedule</name>
    <description>A schedule that purges file.</description>
    <cronDefinition>0 45 3 1/4 * ? *</cronDefinition>
  </scheduleCron>

  <cleanupFileRepositoriesAction>
    <alias>cleanupFileRepositoriesInstance</alias>
    <name>Clean up file repositories</name>
    <description>Clean up file repositories.</description>
    <triggerEnabled>true</triggerEnabled>
    <scheduleForTrigger>fileCleanupSchedule</scheduleForTrigger>
  </cleanupFileRepositoriesAction>

  <!-- WARNING! This does not appear to work correctly as there is nothing to trigger the sync process on installation -->
  <type>
    <alias>systemOnlyScheduleAction</alias>
    <name>System Only Schedule Action</name>
    <description>A schedule action that only resides in the global tenant.</description>
    <inherits>scheduleAction</inherits>
    <systemTenantOnly>true</systemTenantOnly>
  </type>
  
  <systemOnlyScheduleAction>
    <!-- WARNING! This does not appear to work correctly as there is nothing to trigger the sync process on installation -->
    <alias>processInboxesAction</alias>
    <inherits>scheduledItem</inherits>
    <name>Process Inboxes Action</name>
    <description>When fired, find all the inboxes in all the tenants and process them.</description>
    <generateCode>true</generateCode>
    <systemTenantOnly>true</systemTenantOnly>
    <fieldGroups>
      <fieldGroup>
        <name>Process Inboxes Action Details</name>
        <alias>processInboxesActionDetails</alias>
      </fieldGroup>
    </fieldGroups>
    <fields>
      <dateTimeField>
        <alias>piaLastRun</alias>
        <name>Listener last run</name>
        <description>The last time the inboxes were processed.</description>
        <fieldInGroup>processInboxesActionDetails</fieldInGroup>
        <systemTenantOnly>true</systemTenantOnly>
      </dateTimeField>
    </fields>
    <onScheduleFire>
      <class>
        <alias>processInboxesActionClass</alias>
        <name>processInboxesActionClass</name>
        <typeName>EDC.SoftwarePlatform.Activities.EmailListener.ProcessInboxesAction</typeName>
        <assemblyName>EDC.SoftwarePlatform.Activities, Version=1.0.0.0, Culture=neutral</assemblyName>
      </class>
    </onScheduleFire>
  </systemOnlyScheduleAction>
  
  <processInboxesAction>
    <alias>processInboxInstance</alias>
    <name>Process Inbox Instance</name>
    <triggerEnabled>true</triggerEnabled>
    <scheduleForTrigger>scheduleProcessInbox</scheduleForTrigger>
    <k:resourceInFolder>environmentSection</k:resourceInFolder>
  </processInboxesAction>
  
</resources>
