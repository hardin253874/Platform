//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Copyright 2011-2016 Global Software Innovation Pty Ltd
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

using EDC.ReadiNow.Model.Internal;

namespace EDC.ReadiNow.Model
{
	/// <summary>
	/// An abstract type for a log entry that references a managed object.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:managedObjectLogEntry")]
	public class ManagedObjectLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ManagedObjectLogEntry( )
			: base( typeof( ManagedObjectLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ManagedObjectLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ManagedObjectLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ReferencedObjectName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:referencedObjectName" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ObjectReferencedInLog_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:objectReferencedInLog" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ManagedObjectLogEntry.ReferencedObjectName_Field, ManagedObjectLogEntry.Alias_Field, ManagedObjectLogEntry.CanDelete_Field, ManagedObjectLogEntry.CanModify_Field, ManagedObjectLogEntry.CreatedDate_Field, ManagedObjectLogEntry.Description_Field, ManagedObjectLogEntry.ModifiedDate_Field, ManagedObjectLogEntry.Name_Field, ManagedObjectLogEntry.CreatedBy_Field, ManagedObjectLogEntry.Flags_Field, ManagedObjectLogEntry.IndirectInSolution_Field, ManagedObjectLogEntry.InSolution_Field, ManagedObjectLogEntry.InStructureLevel_Field, ManagedObjectLogEntry.IsOfType_Field, ManagedObjectLogEntry.IsRootForStructureView_Field, ManagedObjectLogEntry.LastModifiedBy_Field, ManagedObjectLogEntry.ObjectReferencedInLog_Field, ManagedObjectLogEntry.ResourceConsoleBehavior_Field, ManagedObjectLogEntry.ResourceHasResourceKeyDataHashes_Field, ManagedObjectLogEntry.ResourceInFolder_Field, ManagedObjectLogEntry.SecurityOwner_Field, ManagedObjectLogEntry.SelectionBehavior_Field, ManagedObjectLogEntry.ShortcutInFolder_Field };
			}
		}

		#endregion ManagedObjectLogEntry Public Fields

		#region ManagedObjectLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ReferencedObjectName
		{
			get
			{
				return ( string ) this.GetField( "core:referencedObjectName" );
			}
			set
			{
				this.SetField( "core:referencedObjectName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UserResource ObjectReferencedInLog
		{
			get
			{
				return this.GetLookup<UserResource>( "core:objectReferencedInLog", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserResource>( "core:objectReferencedInLog", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ManagedObjectLogEntry Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ManagedObjectLogEntry( LogActivityResourceLogEntry entity )
		{
			return entity.Cast<ManagedObjectLogEntry>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ManagedObjectLogEntry( RecordChangeLogEntry entity )
		{
			return entity.Cast<ManagedObjectLogEntry>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ManagedObjectLogEntry( WorkflowUserActionLogEntry entity )
		{
			return entity.Cast<ManagedObjectLogEntry>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ManagedObjectLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ManagedObjectLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:managedObjectLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A type that the user can manage for creating reports and triggers
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:managedType")]
	public class ManagedType : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ManagedType( )
			: base( typeof( ManagedType ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ManagedType( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ManagedType Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AllowEveryoneRead_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.AllowEveryoneRead_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.CanCreateType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField GenerateCode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.GenerateCode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAbstract_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAbstract_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAdvancedType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAdvancedType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsSealed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsSealed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SupportMultiTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.SupportMultiTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SystemTenantOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.SystemTenantOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField TypeScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeScriptName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity AuditLogEntryTypeMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.AuditLogEntryTypeMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ControlAccessBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.ControlAccessBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultDisplayReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultEditForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultEditForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultPickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultPickerReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DefinitionUsedByReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefinitionUsedByReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldGroups_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldGroups_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldOverridesForType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldOverridesForType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Fields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Fields_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FormsToEditType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FormsToEditType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Inherits_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Inherits_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstanceFlags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstanceFlags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstancesInheritByDefault_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesInheritByDefault_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InstancesOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDeploy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDeploy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterPublish_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterPublish_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeleteFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeleteFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeployFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeployFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnPublishFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnPublishFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnSaveFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnSaveFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Relationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Relationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReportTemplatesApplyToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReportTemplatesApplyToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ResourceKeys_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ResourceKeys_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReverseRelationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReverseRelationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TriggerForWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TriggerForWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TypeApiMappings_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeApiMappings_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIcon_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIcon_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIncludedForNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIncludedForNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeSuppressedForNewAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeSuppressedForNewAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity UsedByResourceReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.UsedByResourceReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ManagedType.Alias_Field, ManagedType.AllowEveryoneRead_Field, ManagedType.CanCreateType_Field, ManagedType.CanDelete_Field, ManagedType.CanModify_Field, ManagedType.ClassName_Field, ManagedType.ClassType_Field, ManagedType.CreatedDate_Field, ManagedType.Description_Field, ManagedType.GenerateCode_Field, ManagedType.IsAbstract_Field, ManagedType.IsAdvancedType_Field, ManagedType.IsMetadata_Field, ManagedType.IsSealed_Field, ManagedType.ModifiedDate_Field, ManagedType.Name_Field, ManagedType.SupportMultiTypes_Field, ManagedType.SystemTenantOnly_Field, ManagedType.TypeScriptName_Field, ManagedType.AuditLogEntryTypeMetadata_Field, ManagedType.ControlAccessBy_Field, ManagedType.CreatedBy_Field, ManagedType.DefaultDisplayReport_Field, ManagedType.DefaultEditForm_Field, ManagedType.DefaultPickerReport_Field, ManagedType.DefaultTabletForm_Field, ManagedType.DefinitionUsedByReport_Field, ManagedType.DerivedTypes_Field, ManagedType.FieldGroups_Field, ManagedType.FieldOverridesForType_Field, ManagedType.Fields_Field, ManagedType.Flags_Field, ManagedType.FormsToEditType_Field, ManagedType.IndirectInSolution_Field, ManagedType.Inherits_Field, ManagedType.InSolution_Field, ManagedType.InstanceFlags_Field, ManagedType.InstancesInheritByDefault_Field, ManagedType.InstancesOfType_Field, ManagedType.InStructureLevel_Field, ManagedType.IsOfType_Field, ManagedType.IsRootForStructureView_Field, ManagedType.LastModifiedBy_Field, ManagedType.OnAfterDelete_Field, ManagedType.OnAfterDeploy_Field, ManagedType.OnAfterPublish_Field, ManagedType.OnAfterSave_Field, ManagedType.OnAfterUpgrade_Field, ManagedType.OnBeforeDelete_Field, ManagedType.OnBeforeSave_Field, ManagedType.OnBeforeUpgrade_Field, ManagedType.OnDeleteFailed_Field, ManagedType.OnDeployFailed_Field, ManagedType.OnPublishFailed_Field, ManagedType.OnSaveFailed_Field, ManagedType.Relationships_Field, ManagedType.ReportTemplatesApplyToType_Field, ManagedType.ResourceConsoleBehavior_Field, ManagedType.ResourceHasResourceKeyDataHashes_Field, ManagedType.ResourceInFolder_Field, ManagedType.ResourceKeys_Field, ManagedType.ReverseRelationships_Field, ManagedType.SecurityOwner_Field, ManagedType.SelectionBehavior_Field, ManagedType.ShortcutInFolder_Field, ManagedType.TriggerForWorkflow_Field, ManagedType.TypeApiMappings_Field, ManagedType.TypeConsoleBehavior_Field, ManagedType.TypeIcon_Field, ManagedType.TypeIncludedForNewButton_Field, ManagedType.TypeSuppressedForNewAction_Field, ManagedType.UsedByResourceReportNode_Field };
			}
		}

		#endregion ManagedType Public Fields

		#region ManagedType Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AllowEveryoneRead
		{
			get
			{
				return ( bool? ) this.GetField( "core:allowEveryoneRead" );
			}
			set
			{
				this.SetField( "core:allowEveryoneRead", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateType
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateType" );
			}
			set
			{
				this.SetField( "core:canCreateType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassName
		{
			get
			{
				return ( string ) this.GetField( "core:className" );
			}
			set
			{
				this.SetField( "core:className", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassType
		{
			get
			{
				return ( string ) this.GetField( "core:classType" );
			}
			set
			{
				this.SetField( "core:classType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? GenerateCode
		{
			get
			{
				return ( bool? ) this.GetField( "core:generateCode" );
			}
			set
			{
				this.SetField( "core:generateCode", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAbstract
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAbstract" );
			}
			set
			{
				this.SetField( "core:isAbstract", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAdvancedType
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAdvancedType" );
			}
			set
			{
				this.SetField( "core:isAdvancedType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsMetadata
		{
			get
			{
				return ( bool? ) this.GetField( "core:isMetadata" );
			}
			set
			{
				this.SetField( "core:isMetadata", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsSealed
		{
			get
			{
				return ( bool? ) this.GetField( "core:isSealed" );
			}
			set
			{
				this.SetField( "core:isSealed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SupportMultiTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:supportMultiTypes" );
			}
			set
			{
				this.SetField( "core:supportMultiTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SystemTenantOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:systemTenantOnly" );
			}
			set
			{
				this.SetField( "core:systemTenantOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string TypeScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:typeScriptName" );
			}
			set
			{
				this.SetField( "core:typeScriptName", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AuditLogEntryMetadata AuditLogEntryTypeMetadata
		{
			get
			{
				return this.GetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<AccessRule> ControlAccessBy
		{
			get
			{
				return this.GetRelationships<AccessRule>( "core:controlAccessBy", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<AccessRule>( "core:controlAccessBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Report DefaultDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "core:defaultDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "core:defaultDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultEditForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultEditForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultEditForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ResourcePicker DefaultPickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "core:defaultPickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "core:defaultPickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourcePicker> DefinitionUsedByReport
		{
			get
			{
				return this.GetRelationships<ResourcePicker>( "core:definitionUsedByReport", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourcePicker>( "core:definitionUsedByReport", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> DerivedTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:derivedTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:derivedTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<FieldGroup> FieldGroups
		{
			get
			{
				return this.GetRelationships<FieldGroup>( "core:fieldGroups", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<FieldGroup>( "core:fieldGroups", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> FieldOverridesForType
		{
			get
			{
				return this.GetRelationships<Field>( "core:fieldOverridesForType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fieldOverridesForType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> Fields
		{
			get
			{
				return this.GetRelationships<Field>( "core:fields", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fields", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<CustomEditForm> FormsToEditType
		{
			get
			{
				return this.GetRelationships<CustomEditForm>( "console:formsToEditType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<CustomEditForm>( "console:formsToEditType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> Inherits
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:inherits", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:inherits", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> InstanceFlags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:instanceFlags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:instanceFlags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? InstanceFlags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:instanceFlags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:instanceFlags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:instanceFlags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType InstancesInheritByDefault
		{
			get
			{
				return this.GetLookup<EntityType>( "core:instancesInheritByDefault", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:instancesInheritByDefault", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Resource> InstancesOfType
		{
			get
			{
				return this.GetRelationships<Resource>( "core:instancesOfType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:instancesOfType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDeploy
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDeploy", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDeploy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterPublish
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterPublish", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterPublish", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeleteFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeleteFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeleteFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeployFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeployFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeployFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnPublishFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onPublishFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onPublishFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnSaveFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onSaveFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onSaveFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> Relationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:relationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:relationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ReportTemplate> ReportTemplatesApplyToType
		{
			get
			{
				return this.GetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKey> ResourceKeys
		{
			get
			{
				return this.GetRelationships<ResourceKey>( "core:resourceKeys", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKey>( "core:resourceKeys", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> ReverseRelationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:reverseRelationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:reverseRelationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceTriggerFilterDef> TriggerForWorkflow
		{
			get
			{
				return this.GetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ApiResourceMapping> TypeApiMappings
		{
			get
			{
				return this.GetRelationships<ApiResourceMapping>( "core:typeApiMappings", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiResourceMapping>( "core:typeApiMappings", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior TypeConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IconFileType TypeIcon
		{
			get
			{
				return this.GetLookup<IconFileType>( "console:typeIcon", Direction.Forward );
			}
			set
			{
				this.SetLookup<IconFileType>( "console:typeIcon", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeIncludedForNewButton
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeIncludedForNewButton", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeIncludedForNewButton", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeSuppressedForNewAction
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceReportNode> UsedByResourceReportNode
		{
			get
			{
				return this.GetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", value, Direction.Reverse );
			}
		}



		#endregion ManagedType Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ManagedType( Definition entity )
		{
			return entity.Cast<ManagedType>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ManagedType( ImportableType entity )
		{
			return entity.Cast<ManagedType>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ManagedType type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ManagedType_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:managedType");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Map Control
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:mapControl")]
	public class MapControl : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MapControl( )
			: base( typeof( MapControl ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MapControl( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MapControl Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField VisibilityCalculation_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.VisibilityCalculation_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MapControl.Alias_Field, MapControl.CanDelete_Field, MapControl.CanModify_Field, MapControl.CreatedDate_Field, MapControl.Description_Field, MapControl.HideLabel_Field, MapControl.MandatoryControl_Field, MapControl.ModifiedDate_Field, MapControl.Name_Field, MapControl.ReadOnlyControl_Field, MapControl.RenderingBackgroundColor_Field, MapControl.RenderingHeight_Field, MapControl.RenderingOrdinal_Field, MapControl.RenderingWidth_Field, MapControl.ShowControlHelpText_Field, MapControl.VisibilityCalculation_Field, MapControl.ContainedWithinStructureControlOnForm_Field, MapControl.ControlRelatedEntityDataPathNodes_Field, MapControl.CreatedBy_Field, MapControl.Flags_Field, MapControl.IndirectInSolution_Field, MapControl.InSolution_Field, MapControl.InStructureLevel_Field, MapControl.IsOfType_Field, MapControl.IsRootForStructureView_Field, MapControl.LastModifiedBy_Field, MapControl.ResourceConsoleBehavior_Field, MapControl.ResourceHasResourceKeyDataHashes_Field, MapControl.ResourceInFolder_Field, MapControl.SecurityOwner_Field, MapControl.SelectionBehavior_Field, MapControl.ShortcutInFolder_Field };
			}
		}

		#endregion MapControl Public Fields

		#region MapControl Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string VisibilityCalculation
		{
			get
			{
				return ( string ) this.GetField( "console:visibilityCalculation" );
			}
			set
			{
				this.SetField( "console:visibilityCalculation", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MapControl Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MapControl type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MapControl_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:mapControl");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="MarkerShapeEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:markerShapeEnum")]
	public class MarkerShapeEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MarkerShapeEnum( )
			: base( typeof( MarkerShapeEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MarkerShapeEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MarkerShapeEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MarkerShapeEnum.Alias_Field, MarkerShapeEnum.CanDelete_Field, MarkerShapeEnum.CanModify_Field, MarkerShapeEnum.CanModifyProtectedResource_Field, MarkerShapeEnum.CreatedDate_Field, MarkerShapeEnum.Description_Field, MarkerShapeEnum.EnumOrder_Field, MarkerShapeEnum.ModifiedDate_Field, MarkerShapeEnum.Name_Field, MarkerShapeEnum.CreatedBy_Field, MarkerShapeEnum.EnumOwner_Field, MarkerShapeEnum.Flags_Field, MarkerShapeEnum.IndirectInSolution_Field, MarkerShapeEnum.InSolution_Field, MarkerShapeEnum.InStructureLevel_Field, MarkerShapeEnum.IsOfType_Field, MarkerShapeEnum.IsRootForStructureView_Field, MarkerShapeEnum.LastModifiedBy_Field, MarkerShapeEnum.ResourceConsoleBehavior_Field, MarkerShapeEnum.ResourceHasResourceKeyDataHashes_Field, MarkerShapeEnum.ResourceInFolder_Field, MarkerShapeEnum.SecurityOwner_Field, MarkerShapeEnum.SelectionBehavior_Field, MarkerShapeEnum.ShortcutInFolder_Field };
			}
		}

		#endregion MarkerShapeEnum Public Fields

		#region MarkerShapeEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MarkerShapeEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MarkerShapeEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MarkerShapeEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:markerShapeEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a MarkerShapeEnum_Enumeration value.
		/// </summary>
		public static MarkerShapeEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:markerShapeNone": return MarkerShapeEnum_Enumeration.MarkerShapeNone;
				case "core:markerShapeCircle": return MarkerShapeEnum_Enumeration.MarkerShapeCircle;
				case "core:markerShapeFilledCircle": return MarkerShapeEnum_Enumeration.MarkerShapeFilledCircle;
				case "core:markerShapeSquare": return MarkerShapeEnum_Enumeration.MarkerShapeSquare;
				case "core:markerShapeFilledSquare": return MarkerShapeEnum_Enumeration.MarkerShapeFilledSquare;
				case "core:markerShapeTriangleUp": return MarkerShapeEnum_Enumeration.MarkerShapeTriangleUp;
				case "core:markerShapeFilledTriangleUp": return MarkerShapeEnum_Enumeration.MarkerShapeFilledTriangleUp;
				case "core:markerShapeTriangleDown": return MarkerShapeEnum_Enumeration.MarkerShapeTriangleDown;
				case "core:markerShapeFilledTriangleDown": return MarkerShapeEnum_Enumeration.MarkerShapeFilledTriangleDown;
				case "core:markerShapeDiamond": return MarkerShapeEnum_Enumeration.MarkerShapeDiamond;
				case "core:markerShapeFilledDiamond": return MarkerShapeEnum_Enumeration.MarkerShapeFilledDiamond;
				case "core:markerShapeCross": return MarkerShapeEnum_Enumeration.MarkerShapeCross;
				case "core:markerShapeFilledCross": return MarkerShapeEnum_Enumeration.MarkerShapeFilledCross;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a MarkerShapeEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(MarkerShapeEnum_Enumeration value)
		{
			switch (value)
			{
				case MarkerShapeEnum_Enumeration.MarkerShapeNone: return "core:markerShapeNone";
				case MarkerShapeEnum_Enumeration.MarkerShapeCircle: return "core:markerShapeCircle";
				case MarkerShapeEnum_Enumeration.MarkerShapeFilledCircle: return "core:markerShapeFilledCircle";
				case MarkerShapeEnum_Enumeration.MarkerShapeSquare: return "core:markerShapeSquare";
				case MarkerShapeEnum_Enumeration.MarkerShapeFilledSquare: return "core:markerShapeFilledSquare";
				case MarkerShapeEnum_Enumeration.MarkerShapeTriangleUp: return "core:markerShapeTriangleUp";
				case MarkerShapeEnum_Enumeration.MarkerShapeFilledTriangleUp: return "core:markerShapeFilledTriangleUp";
				case MarkerShapeEnum_Enumeration.MarkerShapeTriangleDown: return "core:markerShapeTriangleDown";
				case MarkerShapeEnum_Enumeration.MarkerShapeFilledTriangleDown: return "core:markerShapeFilledTriangleDown";
				case MarkerShapeEnum_Enumeration.MarkerShapeDiamond: return "core:markerShapeDiamond";
				case MarkerShapeEnum_Enumeration.MarkerShapeFilledDiamond: return "core:markerShapeFilledDiamond";
				case MarkerShapeEnum_Enumeration.MarkerShapeCross: return "core:markerShapeCross";
				case MarkerShapeEnum_Enumeration.MarkerShapeFilledCross: return "core:markerShapeFilledCross";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<MarkerShapeEnum_Enumeration> GetEnumValues( MarkerShapeEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( MarkerShapeEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( MarkerShapeEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// MarkerShapeEnum enumeration type.
	/// </summary>
	public enum MarkerShapeEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		MarkerShapeNone = 1,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeCircle = 2,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeFilledCircle = 4,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeSquare = 8,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeFilledSquare = 16,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeTriangleUp = 32,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeFilledTriangleUp = 64,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeTriangleDown = 128,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeFilledTriangleDown = 256,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeDiamond = 512,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeFilledDiamond = 1024,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeCross = 2048,

		/// <summary>
		/// 
		/// </summary>
		MarkerShapeFilledCross = 4096,

	}

	/// <summary>
	/// Holds information about a remote procedure call made to a message queue such that its response can be handled through the IRemoteResponseHandler interface. (Internal)
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:messageQueueRequest")]
	public class MessageQueueRequest : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MessageQueueRequest( )
			: base( typeof( MessageQueueRequest ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MessageQueueRequest( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MessageQueueRequest Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField MessageQueueRequestBody_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:messageQueueRequestBody" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField MessageQueueRequestBodyType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:messageQueueRequestBodyType" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField MessageQueueRequestHandlerType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:messageQueueRequestHandlerType" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField MessageQueueRequestKey_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:messageQueueRequestKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField MessageQueueRequestResultType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:messageQueueRequestResultType" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField MessageQueueRequestToken_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:messageQueueRequestToken" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MessageQueueRequest.MessageQueueRequestBody_Field, MessageQueueRequest.MessageQueueRequestBodyType_Field, MessageQueueRequest.MessageQueueRequestHandlerType_Field, MessageQueueRequest.MessageQueueRequestKey_Field, MessageQueueRequest.MessageQueueRequestResultType_Field, MessageQueueRequest.MessageQueueRequestToken_Field, MessageQueueRequest.Alias_Field, MessageQueueRequest.CanDelete_Field, MessageQueueRequest.CanModify_Field, MessageQueueRequest.CreatedDate_Field, MessageQueueRequest.Description_Field, MessageQueueRequest.ModifiedDate_Field, MessageQueueRequest.Name_Field, MessageQueueRequest.CreatedBy_Field, MessageQueueRequest.Flags_Field, MessageQueueRequest.IndirectInSolution_Field, MessageQueueRequest.InSolution_Field, MessageQueueRequest.InStructureLevel_Field, MessageQueueRequest.IsOfType_Field, MessageQueueRequest.IsRootForStructureView_Field, MessageQueueRequest.LastModifiedBy_Field, MessageQueueRequest.ResourceConsoleBehavior_Field, MessageQueueRequest.ResourceHasResourceKeyDataHashes_Field, MessageQueueRequest.ResourceInFolder_Field, MessageQueueRequest.SecurityOwner_Field, MessageQueueRequest.SelectionBehavior_Field, MessageQueueRequest.ShortcutInFolder_Field };
			}
		}

		#endregion MessageQueueRequest Public Fields

		#region MessageQueueRequest Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string MessageQueueRequestBody
		{
			get
			{
				return ( string ) this.GetField( "core:messageQueueRequestBody" );
			}
			set
			{
				this.SetField( "core:messageQueueRequestBody", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string MessageQueueRequestBodyType
		{
			get
			{
				return ( string ) this.GetField( "core:messageQueueRequestBodyType" );
			}
			set
			{
				this.SetField( "core:messageQueueRequestBodyType", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string MessageQueueRequestHandlerType
		{
			get
			{
				return ( string ) this.GetField( "core:messageQueueRequestHandlerType" );
			}
			set
			{
				this.SetField( "core:messageQueueRequestHandlerType", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string MessageQueueRequestKey
		{
			get
			{
				return ( string ) this.GetField( "core:messageQueueRequestKey" );
			}
			set
			{
				this.SetField( "core:messageQueueRequestKey", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string MessageQueueRequestResultType
		{
			get
			{
				return ( string ) this.GetField( "core:messageQueueRequestResultType" );
			}
			set
			{
				this.SetField( "core:messageQueueRequestResultType", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string MessageQueueRequestToken
		{
			get
			{
				return ( string ) this.GetField( "core:messageQueueRequestToken" );
			}
			set
			{
				this.SetField( "core:messageQueueRequestToken", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MessageQueueRequest Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MessageQueueRequest type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MessageQueueRequest_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:messageQueueRequest");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An enumeration of the month of year.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:monthOfYearEnum")]
	public class MonthOfYearEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MonthOfYearEnum( )
			: base( typeof( MonthOfYearEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MonthOfYearEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MonthOfYearEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MonthOfYearEnum.Alias_Field, MonthOfYearEnum.CanDelete_Field, MonthOfYearEnum.CanModify_Field, MonthOfYearEnum.CanModifyProtectedResource_Field, MonthOfYearEnum.CreatedDate_Field, MonthOfYearEnum.Description_Field, MonthOfYearEnum.EnumOrder_Field, MonthOfYearEnum.ModifiedDate_Field, MonthOfYearEnum.Name_Field, MonthOfYearEnum.CreatedBy_Field, MonthOfYearEnum.EnumOwner_Field, MonthOfYearEnum.Flags_Field, MonthOfYearEnum.IndirectInSolution_Field, MonthOfYearEnum.InSolution_Field, MonthOfYearEnum.InStructureLevel_Field, MonthOfYearEnum.IsOfType_Field, MonthOfYearEnum.IsRootForStructureView_Field, MonthOfYearEnum.LastModifiedBy_Field, MonthOfYearEnum.ResourceConsoleBehavior_Field, MonthOfYearEnum.ResourceHasResourceKeyDataHashes_Field, MonthOfYearEnum.ResourceInFolder_Field, MonthOfYearEnum.SecurityOwner_Field, MonthOfYearEnum.SelectionBehavior_Field, MonthOfYearEnum.ShortcutInFolder_Field };
			}
		}

		#endregion MonthOfYearEnum Public Fields

		#region MonthOfYearEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MonthOfYearEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MonthOfYearEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MonthOfYearEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:monthOfYearEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a MonthOfYearEnum_Enumeration value.
		/// </summary>
		public static MonthOfYearEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:moyJanuary": return MonthOfYearEnum_Enumeration.MoyJanuary;
				case "core:moyFebruary": return MonthOfYearEnum_Enumeration.MoyFebruary;
				case "core:moyMarch": return MonthOfYearEnum_Enumeration.MoyMarch;
				case "core:moyApril": return MonthOfYearEnum_Enumeration.MoyApril;
				case "core:moyMay": return MonthOfYearEnum_Enumeration.MoyMay;
				case "core:moyJune": return MonthOfYearEnum_Enumeration.MoyJune;
				case "core:moyJuly": return MonthOfYearEnum_Enumeration.MoyJuly;
				case "core:moyAugust": return MonthOfYearEnum_Enumeration.MoyAugust;
				case "core:moySeptember": return MonthOfYearEnum_Enumeration.MoySeptember;
				case "core:moyOctober": return MonthOfYearEnum_Enumeration.MoyOctober;
				case "core:moyNovember": return MonthOfYearEnum_Enumeration.MoyNovember;
				case "core:moyDecember": return MonthOfYearEnum_Enumeration.MoyDecember;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a MonthOfYearEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(MonthOfYearEnum_Enumeration value)
		{
			switch (value)
			{
				case MonthOfYearEnum_Enumeration.MoyJanuary: return "core:moyJanuary";
				case MonthOfYearEnum_Enumeration.MoyFebruary: return "core:moyFebruary";
				case MonthOfYearEnum_Enumeration.MoyMarch: return "core:moyMarch";
				case MonthOfYearEnum_Enumeration.MoyApril: return "core:moyApril";
				case MonthOfYearEnum_Enumeration.MoyMay: return "core:moyMay";
				case MonthOfYearEnum_Enumeration.MoyJune: return "core:moyJune";
				case MonthOfYearEnum_Enumeration.MoyJuly: return "core:moyJuly";
				case MonthOfYearEnum_Enumeration.MoyAugust: return "core:moyAugust";
				case MonthOfYearEnum_Enumeration.MoySeptember: return "core:moySeptember";
				case MonthOfYearEnum_Enumeration.MoyOctober: return "core:moyOctober";
				case MonthOfYearEnum_Enumeration.MoyNovember: return "core:moyNovember";
				case MonthOfYearEnum_Enumeration.MoyDecember: return "core:moyDecember";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<MonthOfYearEnum_Enumeration> GetEnumValues( MonthOfYearEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( MonthOfYearEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( MonthOfYearEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// MonthOfYearEnum enumeration type.
	/// </summary>
	public enum MonthOfYearEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		MoyJanuary = 1,

		/// <summary>
		/// 
		/// </summary>
		MoyFebruary = 2,

		/// <summary>
		/// 
		/// </summary>
		MoyMarch = 4,

		/// <summary>
		/// 
		/// </summary>
		MoyApril = 8,

		/// <summary>
		/// 
		/// </summary>
		MoyMay = 16,

		/// <summary>
		/// 
		/// </summary>
		MoyJune = 32,

		/// <summary>
		/// 
		/// </summary>
		MoyJuly = 64,

		/// <summary>
		/// 
		/// </summary>
		MoyAugust = 128,

		/// <summary>
		/// 
		/// </summary>
		MoySeptember = 256,

		/// <summary>
		/// 
		/// </summary>
		MoyOctober = 512,

		/// <summary>
		/// 
		/// </summary>
		MoyNovember = 1024,

		/// <summary>
		/// 
		/// </summary>
		MoyDecember = 2048,

	}

	/// <summary>
	/// Implementation for the <see cref="MultiChoiceRelationshipRenderControl" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:multiChoiceRelationshipRenderControl")]
	public class MultiChoiceRelationshipRenderControl : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MultiChoiceRelationshipRenderControl( )
			: base( typeof( MultiChoiceRelationshipRenderControl ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MultiChoiceRelationshipRenderControl( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MultiChoiceRelationshipRenderControl Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateDerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreateDerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanHaveFields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.CanHaveFields_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideAddButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideAddButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideRemoveButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideRemoveButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField InfoButtonVisible_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.InfoButtonVisible_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsReversed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.IsReversed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField VisibilityCalculation_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.VisibilityCalculation_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity HasRelationshipControlBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.HasRelationshipControlBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity PickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.PickerReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity PickerStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.PickerStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipControlFilters_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipControlFilters_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipDefaultValue_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipDisplayForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipDisplayForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipDisplayReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipToRender_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipToRender_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerConsoleForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerConsoleForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MultiChoiceRelationshipRenderControl.Alias_Field, MultiChoiceRelationshipRenderControl.CanCreate_Field, MultiChoiceRelationshipRenderControl.CanCreateDerivedTypes_Field, MultiChoiceRelationshipRenderControl.CanDelete_Field, MultiChoiceRelationshipRenderControl.CanHaveFields_Field, MultiChoiceRelationshipRenderControl.CanModify_Field, MultiChoiceRelationshipRenderControl.CreatedDate_Field, MultiChoiceRelationshipRenderControl.Description_Field, MultiChoiceRelationshipRenderControl.HideAddButton_Field, MultiChoiceRelationshipRenderControl.HideLabel_Field, MultiChoiceRelationshipRenderControl.HideNewButton_Field, MultiChoiceRelationshipRenderControl.HideRemoveButton_Field, MultiChoiceRelationshipRenderControl.InfoButtonVisible_Field, MultiChoiceRelationshipRenderControl.IsReversed_Field, MultiChoiceRelationshipRenderControl.MandatoryControl_Field, MultiChoiceRelationshipRenderControl.ModifiedDate_Field, MultiChoiceRelationshipRenderControl.Name_Field, MultiChoiceRelationshipRenderControl.ReadOnlyControl_Field, MultiChoiceRelationshipRenderControl.RenderingBackgroundColor_Field, MultiChoiceRelationshipRenderControl.RenderingHeight_Field, MultiChoiceRelationshipRenderControl.RenderingOrdinal_Field, MultiChoiceRelationshipRenderControl.RenderingWidth_Field, MultiChoiceRelationshipRenderControl.ShowControlHelpText_Field, MultiChoiceRelationshipRenderControl.VisibilityCalculation_Field, MultiChoiceRelationshipRenderControl.ContainedWithinStructureControlOnForm_Field, MultiChoiceRelationshipRenderControl.ControlRelatedEntityDataPathNodes_Field, MultiChoiceRelationshipRenderControl.CreatedBy_Field, MultiChoiceRelationshipRenderControl.Flags_Field, MultiChoiceRelationshipRenderControl.HasRelationshipControlBehavior_Field, MultiChoiceRelationshipRenderControl.IndirectInSolution_Field, MultiChoiceRelationshipRenderControl.InSolution_Field, MultiChoiceRelationshipRenderControl.InStructureLevel_Field, MultiChoiceRelationshipRenderControl.IsOfType_Field, MultiChoiceRelationshipRenderControl.IsRootForStructureView_Field, MultiChoiceRelationshipRenderControl.LastModifiedBy_Field, MultiChoiceRelationshipRenderControl.PickerReport_Field, MultiChoiceRelationshipRenderControl.PickerStructureView_Field, MultiChoiceRelationshipRenderControl.RelationshipControlFilters_Field, MultiChoiceRelationshipRenderControl.RelationshipDefaultValue_Field, MultiChoiceRelationshipRenderControl.RelationshipDisplayForm_Field, MultiChoiceRelationshipRenderControl.RelationshipDisplayReport_Field, MultiChoiceRelationshipRenderControl.RelationshipToRender_Field, MultiChoiceRelationshipRenderControl.ResourceConsoleBehavior_Field, MultiChoiceRelationshipRenderControl.ResourceHasResourceKeyDataHashes_Field, MultiChoiceRelationshipRenderControl.ResourceInFolder_Field, MultiChoiceRelationshipRenderControl.ResourceViewerConsoleForm_Field, MultiChoiceRelationshipRenderControl.ResourceViewerTabletForm_Field, MultiChoiceRelationshipRenderControl.SecurityOwner_Field, MultiChoiceRelationshipRenderControl.SelectionBehavior_Field, MultiChoiceRelationshipRenderControl.ShortcutInFolder_Field };
			}
		}

		#endregion MultiChoiceRelationshipRenderControl Public Fields

		#region MultiChoiceRelationshipRenderControl Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreate
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreate" );
			}
			set
			{
				this.SetField( "core:canCreate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateDerivedTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateDerivedTypes" );
			}
			set
			{
				this.SetField( "core:canCreateDerivedTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanHaveFields
		{
			get
			{
				return ( bool? ) this.GetField( "console:canHaveFields" );
			}
			set
			{
				this.SetField( "console:canHaveFields", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideAddButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideAddButton" );
			}
			set
			{
				this.SetField( "core:hideAddButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideNewButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideNewButton" );
			}
			set
			{
				this.SetField( "core:hideNewButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideRemoveButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideRemoveButton" );
			}
			set
			{
				this.SetField( "core:hideRemoveButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? InfoButtonVisible
		{
			get
			{
				return ( bool? ) this.GetField( "console:infoButtonVisible" );
			}
			set
			{
				this.SetField( "console:infoButtonVisible", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsReversed
		{
			get
			{
				return ( bool? ) this.GetField( "console:isReversed" );
			}
			set
			{
				this.SetField( "console:isReversed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string VisibilityCalculation
		{
			get
			{
				return ( string ) this.GetField( "console:visibilityCalculation" );
			}
			set
			{
				this.SetField( "console:visibilityCalculation", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public MultiRelationshipControlBehavior HasRelationshipControlBehavior
		{
			get
			{
				return this.GetLookup<MultiRelationshipControlBehavior>( "console:hasRelationshipControlBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<MultiRelationshipControlBehavior>( "console:hasRelationshipControlBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ResourcePicker PickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "console:pickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "console:pickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public StructureView PickerStructureView
		{
			get
			{
				return this.GetLookup<StructureView>( "console:pickerStructureView", Direction.Forward );
			}
			set
			{
				this.SetLookup<StructureView>( "console:pickerStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelationshipControlFilterDetails> RelationshipControlFilters
		{
			get
			{
				return this.GetRelationships<RelationshipControlFilterDetails>( "console:relationshipControlFilters", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipControlFilterDetails>( "console:relationshipControlFilters", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Resource RelationshipDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "console:relationshipDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "console:relationshipDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm RelationshipDisplayForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:relationshipDisplayForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:relationshipDisplayForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Report RelationshipDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "console:relationshipDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "console:relationshipDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Relationship RelationshipToRender
		{
			get
			{
				return this.GetLookup<Relationship>( "console:relationshipToRender", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "console:relationshipToRender", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerConsoleForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MultiChoiceRelationshipRenderControl Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MultiChoiceRelationshipRenderControl type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MultiChoiceRelationshipRenderControl_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:multiChoiceRelationshipRenderControl");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="MultilineRelationshipRenderControl" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:multilineRelationshipRenderControl")]
	public class MultilineRelationshipRenderControl : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MultilineRelationshipRenderControl( )
			: base( typeof( MultilineRelationshipRenderControl ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MultilineRelationshipRenderControl( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MultilineRelationshipRenderControl Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateDerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreateDerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanHaveFields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.CanHaveFields_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideAddButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideAddButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideRemoveButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideRemoveButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField InfoButtonVisible_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.InfoButtonVisible_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsReversed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.IsReversed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField VisibilityCalculation_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.VisibilityCalculation_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity HasRelationshipControlBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.HasRelationshipControlBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity PickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.PickerReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity PickerStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.PickerStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipControlFilters_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipControlFilters_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipDefaultValue_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipDisplayForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipDisplayForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipDisplayReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipToRender_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RelationshipControlOnForm.RelationshipToRender_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerConsoleForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerConsoleForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MultilineRelationshipRenderControl.Alias_Field, MultilineRelationshipRenderControl.CanCreate_Field, MultilineRelationshipRenderControl.CanCreateDerivedTypes_Field, MultilineRelationshipRenderControl.CanDelete_Field, MultilineRelationshipRenderControl.CanHaveFields_Field, MultilineRelationshipRenderControl.CanModify_Field, MultilineRelationshipRenderControl.CreatedDate_Field, MultilineRelationshipRenderControl.Description_Field, MultilineRelationshipRenderControl.HideAddButton_Field, MultilineRelationshipRenderControl.HideLabel_Field, MultilineRelationshipRenderControl.HideNewButton_Field, MultilineRelationshipRenderControl.HideRemoveButton_Field, MultilineRelationshipRenderControl.InfoButtonVisible_Field, MultilineRelationshipRenderControl.IsReversed_Field, MultilineRelationshipRenderControl.MandatoryControl_Field, MultilineRelationshipRenderControl.ModifiedDate_Field, MultilineRelationshipRenderControl.Name_Field, MultilineRelationshipRenderControl.ReadOnlyControl_Field, MultilineRelationshipRenderControl.RenderingBackgroundColor_Field, MultilineRelationshipRenderControl.RenderingHeight_Field, MultilineRelationshipRenderControl.RenderingOrdinal_Field, MultilineRelationshipRenderControl.RenderingWidth_Field, MultilineRelationshipRenderControl.ShowControlHelpText_Field, MultilineRelationshipRenderControl.VisibilityCalculation_Field, MultilineRelationshipRenderControl.ContainedWithinStructureControlOnForm_Field, MultilineRelationshipRenderControl.ControlRelatedEntityDataPathNodes_Field, MultilineRelationshipRenderControl.CreatedBy_Field, MultilineRelationshipRenderControl.Flags_Field, MultilineRelationshipRenderControl.HasRelationshipControlBehavior_Field, MultilineRelationshipRenderControl.IndirectInSolution_Field, MultilineRelationshipRenderControl.InSolution_Field, MultilineRelationshipRenderControl.InStructureLevel_Field, MultilineRelationshipRenderControl.IsOfType_Field, MultilineRelationshipRenderControl.IsRootForStructureView_Field, MultilineRelationshipRenderControl.LastModifiedBy_Field, MultilineRelationshipRenderControl.PickerReport_Field, MultilineRelationshipRenderControl.PickerStructureView_Field, MultilineRelationshipRenderControl.RelationshipControlFilters_Field, MultilineRelationshipRenderControl.RelationshipDefaultValue_Field, MultilineRelationshipRenderControl.RelationshipDisplayForm_Field, MultilineRelationshipRenderControl.RelationshipDisplayReport_Field, MultilineRelationshipRenderControl.RelationshipToRender_Field, MultilineRelationshipRenderControl.ResourceConsoleBehavior_Field, MultilineRelationshipRenderControl.ResourceHasResourceKeyDataHashes_Field, MultilineRelationshipRenderControl.ResourceInFolder_Field, MultilineRelationshipRenderControl.ResourceViewerConsoleForm_Field, MultilineRelationshipRenderControl.ResourceViewerTabletForm_Field, MultilineRelationshipRenderControl.SecurityOwner_Field, MultilineRelationshipRenderControl.SelectionBehavior_Field, MultilineRelationshipRenderControl.ShortcutInFolder_Field };
			}
		}

		#endregion MultilineRelationshipRenderControl Public Fields

		#region MultilineRelationshipRenderControl Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreate
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreate" );
			}
			set
			{
				this.SetField( "core:canCreate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateDerivedTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateDerivedTypes" );
			}
			set
			{
				this.SetField( "core:canCreateDerivedTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanHaveFields
		{
			get
			{
				return ( bool? ) this.GetField( "console:canHaveFields" );
			}
			set
			{
				this.SetField( "console:canHaveFields", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideAddButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideAddButton" );
			}
			set
			{
				this.SetField( "core:hideAddButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideNewButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideNewButton" );
			}
			set
			{
				this.SetField( "core:hideNewButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideRemoveButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideRemoveButton" );
			}
			set
			{
				this.SetField( "core:hideRemoveButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? InfoButtonVisible
		{
			get
			{
				return ( bool? ) this.GetField( "console:infoButtonVisible" );
			}
			set
			{
				this.SetField( "console:infoButtonVisible", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsReversed
		{
			get
			{
				return ( bool? ) this.GetField( "console:isReversed" );
			}
			set
			{
				this.SetField( "console:isReversed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string VisibilityCalculation
		{
			get
			{
				return ( string ) this.GetField( "console:visibilityCalculation" );
			}
			set
			{
				this.SetField( "console:visibilityCalculation", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public MultiRelationshipControlBehavior HasRelationshipControlBehavior
		{
			get
			{
				return this.GetLookup<MultiRelationshipControlBehavior>( "console:hasRelationshipControlBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<MultiRelationshipControlBehavior>( "console:hasRelationshipControlBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ResourcePicker PickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "console:pickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "console:pickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public StructureView PickerStructureView
		{
			get
			{
				return this.GetLookup<StructureView>( "console:pickerStructureView", Direction.Forward );
			}
			set
			{
				this.SetLookup<StructureView>( "console:pickerStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelationshipControlFilterDetails> RelationshipControlFilters
		{
			get
			{
				return this.GetRelationships<RelationshipControlFilterDetails>( "console:relationshipControlFilters", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipControlFilterDetails>( "console:relationshipControlFilters", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Resource RelationshipDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "console:relationshipDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "console:relationshipDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm RelationshipDisplayForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:relationshipDisplayForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:relationshipDisplayForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Report RelationshipDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "console:relationshipDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "console:relationshipDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Relationship RelationshipToRender
		{
			get
			{
				return this.GetLookup<Relationship>( "console:relationshipToRender", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "console:relationshipToRender", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerConsoleForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MultilineRelationshipRenderControl Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MultilineRelationshipRenderControl type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MultilineRelationshipRenderControl_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:multilineRelationshipRenderControl");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Describes the behavior of buttons in the relationship tab.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:multiRelationshipControlBehavior")]
	public class MultiRelationshipControlBehavior : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public MultiRelationshipControlBehavior( )
			: base( typeof( MultiRelationshipControlBehavior ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal MultiRelationshipControlBehavior( IActivationData activationData )
			: base( activationData )
		{

		}

		#region MultiRelationshipControlBehavior Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RelationshipControlBehaviorHasAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:actionAppliesToRelationshipControlBehavior" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { MultiRelationshipControlBehavior.Alias_Field, MultiRelationshipControlBehavior.CanDelete_Field, MultiRelationshipControlBehavior.CanModify_Field, MultiRelationshipControlBehavior.CreatedDate_Field, MultiRelationshipControlBehavior.Description_Field, MultiRelationshipControlBehavior.ModifiedDate_Field, MultiRelationshipControlBehavior.Name_Field, MultiRelationshipControlBehavior.CreatedBy_Field, MultiRelationshipControlBehavior.Flags_Field, MultiRelationshipControlBehavior.IndirectInSolution_Field, MultiRelationshipControlBehavior.InSolution_Field, MultiRelationshipControlBehavior.InStructureLevel_Field, MultiRelationshipControlBehavior.IsOfType_Field, MultiRelationshipControlBehavior.IsRootForStructureView_Field, MultiRelationshipControlBehavior.LastModifiedBy_Field, MultiRelationshipControlBehavior.RelationshipControlBehaviorHasAction_Field, MultiRelationshipControlBehavior.ResourceConsoleBehavior_Field, MultiRelationshipControlBehavior.ResourceHasResourceKeyDataHashes_Field, MultiRelationshipControlBehavior.ResourceInFolder_Field, MultiRelationshipControlBehavior.SecurityOwner_Field, MultiRelationshipControlBehavior.SelectionBehavior_Field, MultiRelationshipControlBehavior.ShortcutInFolder_Field };
			}
		}

		#endregion MultiRelationshipControlBehavior Public Fields

		#region MultiRelationshipControlBehavior Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ActionMenuItem> RelationshipControlBehaviorHasAction
		{
			get
			{
				return this.GetRelationships<ActionMenuItem>( "console:relationshipControlBehaviorHasAction", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenuItem>( "console:relationshipControlBehaviorHasAction", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion MultiRelationshipControlBehavior Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the MultiRelationshipControlBehavior type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType MultiRelationshipControlBehavior_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:multiRelationshipControlBehavior");
			}
		}
		
		#endregion Additional Static Content

	}

}