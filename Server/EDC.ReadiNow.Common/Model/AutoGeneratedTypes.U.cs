//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Copyright 2011-2016 Global Software Innovation Pty Ltd
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

using EDC.ReadiNow.Model.Internal;

namespace EDC.ReadiNow.Model
{
	/// <summary>
	/// Used to describe the contexts which a form or UI control can operate in.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:uiContext")]
	public class UiContext : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UiContext( )
			: base( typeof( UiContext ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UiContext( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UiContext Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ApplicableControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:context" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity FormForUiContext_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:uiContextForForm" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UiContext.Alias_Field, UiContext.CanDelete_Field, UiContext.CanModify_Field, UiContext.CreatedDate_Field, UiContext.Description_Field, UiContext.ModifiedDate_Field, UiContext.Name_Field, UiContext.ApplicableControl_Field, UiContext.CreatedBy_Field, UiContext.Flags_Field, UiContext.FormForUiContext_Field, UiContext.IndirectInSolution_Field, UiContext.InSolution_Field, UiContext.InStructureLevel_Field, UiContext.IsOfType_Field, UiContext.IsRootForStructureView_Field, UiContext.LastModifiedBy_Field, UiContext.ResourceConsoleBehavior_Field, UiContext.ResourceHasResourceKeyDataHashes_Field, UiContext.ResourceInFolder_Field, UiContext.SecurityOwner_Field, UiContext.SelectionBehavior_Field, UiContext.ShortcutInFolder_Field };
			}
		}

		#endregion UiContext Public Fields

		#region UiContext Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<RenderControlType> ApplicableControl
		{
			get
			{
				return this.GetRelationships<RenderControlType>( "console:applicableControl", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<RenderControlType>( "console:applicableControl", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<CustomEditForm> FormForUiContext
		{
			get
			{
				return this.GetRelationships<CustomEditForm>( "console:formForUiContext", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<CustomEditForm>( "console:formForUiContext", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion UiContext Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UiContext type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UiContext_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:uiContext");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Update multiple fields or relationships for a selected record.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:updateFieldActivity")]
	public class UpdateFieldActivity : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UpdateFieldActivity( )
			: base( typeof( UpdateFieldActivity ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UpdateFieldActivity( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UpdateFieldActivity Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DesignerData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.DesignerData_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ArgumentInstanceFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainingWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ContainingWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExitPoints_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.ExitPoints_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExpressionMap_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ExpressionMap_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ForwardTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ForwardTransitions_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InternalArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InternalArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OutputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.OutputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TransitionsForActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.TransitionsForActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UpdateFieldActivity.Alias_Field, UpdateFieldActivity.CanDelete_Field, UpdateFieldActivity.CanModify_Field, UpdateFieldActivity.CanModifyProtectedResource_Field, UpdateFieldActivity.CreatedDate_Field, UpdateFieldActivity.Description_Field, UpdateFieldActivity.DesignerData_Field, UpdateFieldActivity.ModifiedDate_Field, UpdateFieldActivity.Name_Field, UpdateFieldActivity.ArgumentInstanceFromActivity_Field, UpdateFieldActivity.ContainingWorkflow_Field, UpdateFieldActivity.CreatedBy_Field, UpdateFieldActivity.ExitPoints_Field, UpdateFieldActivity.ExpressionMap_Field, UpdateFieldActivity.Flags_Field, UpdateFieldActivity.ForwardTransitions_Field, UpdateFieldActivity.IndirectInSolution_Field, UpdateFieldActivity.InputArguments_Field, UpdateFieldActivity.InSolution_Field, UpdateFieldActivity.InStructureLevel_Field, UpdateFieldActivity.InternalArguments_Field, UpdateFieldActivity.IsOfType_Field, UpdateFieldActivity.IsRootForStructureView_Field, UpdateFieldActivity.LastModifiedBy_Field, UpdateFieldActivity.OutputArguments_Field, UpdateFieldActivity.ResourceConsoleBehavior_Field, UpdateFieldActivity.ResourceHasResourceKeyDataHashes_Field, UpdateFieldActivity.ResourceInFolder_Field, UpdateFieldActivity.SecurityOwner_Field, UpdateFieldActivity.SelectionBehavior_Field, UpdateFieldActivity.ShortcutInFolder_Field, UpdateFieldActivity.TransitionsForActivity_Field };
			}
		}

		#endregion UpdateFieldActivity Public Fields

		#region UpdateFieldActivity Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DesignerData
		{
			get
			{
				return ( string ) this.GetField( "core:designerData" );
			}
			set
			{
				this.SetField( "core:designerData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromActivity
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow ContainingWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:containingWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:containingWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ExitPoint> ExitPoints
		{
			get
			{
				return this.GetRelationships<ExitPoint>( "core:exitPoints", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ExitPoint>( "core:exitPoints", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<WfExpression> ExpressionMap
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:expressionMap", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:expressionMap", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ForwardTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:forwardTransitions", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:forwardTransitions", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:inputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:inputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InternalArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:internalArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:internalArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> OutputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:outputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:outputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Transition> TransitionsForActivity
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitionsForActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitionsForActivity", value, Direction.Reverse );
			}
		}



		#endregion UpdateFieldActivity Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UpdateFieldActivity type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UpdateFieldActivity_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:updateFieldActivity");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Represents a user account definition
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:userAccount")]
	public class UserAccount : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UserAccount( )
			: base( typeof( UserAccount ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UserAccount( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UserAccount Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField AccountExpiration_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:accountExpiration" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField BadLogonCount_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:badLogonCount" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ChangePasswordAtNextLogon_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:changePasswordAtNextLogon" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField LastLockout_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:lastLockout" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField LastLogon_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:lastLogon" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField Password_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:password" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField PasswordLastChanged_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:passwordLastChanged" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField PasswordNeverExpires_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:passwordNeverExpires" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity AccountHolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:personHasUserAccount" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity AccountStatus_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:accountStatus" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AllowAccess_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Subject.AllowAccess_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity PasswordReset_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:passwordReset" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity SecurityOwnerOf_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:securityOwner" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity TriggeredWorkflowByUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:triggeringUser" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity UserAccountApiKeys_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:apiKeyUserAccount" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity UserHasRole_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:userHasRole" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UserAccount.AccountExpiration_Field, UserAccount.BadLogonCount_Field, UserAccount.ChangePasswordAtNextLogon_Field, UserAccount.LastLockout_Field, UserAccount.LastLogon_Field, UserAccount.Password_Field, UserAccount.PasswordLastChanged_Field, UserAccount.PasswordNeverExpires_Field, UserAccount.Alias_Field, UserAccount.CanDelete_Field, UserAccount.CanModify_Field, UserAccount.CreatedDate_Field, UserAccount.Description_Field, UserAccount.ModifiedDate_Field, UserAccount.Name_Field, UserAccount.AccountHolder_Field, UserAccount.AccountStatus_Field, UserAccount.AllowAccess_Field, UserAccount.CreatedBy_Field, UserAccount.Flags_Field, UserAccount.IndirectInSolution_Field, UserAccount.InSolution_Field, UserAccount.InStructureLevel_Field, UserAccount.IsOfType_Field, UserAccount.IsRootForStructureView_Field, UserAccount.LastModifiedBy_Field, UserAccount.PasswordReset_Field, UserAccount.ResourceConsoleBehavior_Field, UserAccount.ResourceHasResourceKeyDataHashes_Field, UserAccount.ResourceInFolder_Field, UserAccount.SecurityOwner_Field, UserAccount.SecurityOwnerOf_Field, UserAccount.SelectionBehavior_Field, UserAccount.ShortcutInFolder_Field, UserAccount.TriggeredWorkflowByUser_Field, UserAccount.UserAccountApiKeys_Field, UserAccount.UserHasRole_Field };
			}
		}

		#endregion UserAccount Public Fields

		#region UserAccount Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? AccountExpiration
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:accountExpiration" );
			}
			set
			{
				this.SetField( "core:accountExpiration", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? BadLogonCount
		{
			get
			{
				return ( int? ) this.GetField( "core:badLogonCount" );
			}
			set
			{
				this.SetField( "core:badLogonCount", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ChangePasswordAtNextLogon
		{
			get
			{
				return ( bool? ) this.GetField( "core:changePasswordAtNextLogon" );
			}
			set
			{
				this.SetField( "core:changePasswordAtNextLogon", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? LastLockout
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:lastLockout" );
			}
			set
			{
				this.SetField( "core:lastLockout", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? LastLogon
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:lastLogon" );
			}
			set
			{
				this.SetField( "core:lastLogon", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string Password
		{
			get
			{
				return ( string ) this.GetField( "core:password" );
			}
			set
			{
				this.SetField( "core:password", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? PasswordLastChanged
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:passwordLastChanged" );
			}
			set
			{
				this.SetField( "core:passwordLastChanged", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? PasswordNeverExpires
		{
			get
			{
				return ( bool? ) this.GetField( "core:passwordNeverExpires" );
			}
			set
			{
				this.SetField( "core:passwordNeverExpires", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Person AccountHolder
		{
			get
			{
				return this.GetLookup<Person>( "core:accountHolder", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Person>( "core:accountHolder", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UserAccountStatusEnum AccountStatus
		{
			get
			{
				return this.GetLookup<UserAccountStatusEnum>( "core:accountStatus", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccountStatusEnum>( "core:accountStatus", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public UserAccountStatusEnum_Enumeration? AccountStatus_Enum
		{
			get
			{
				return GetEnum<UserAccountStatusEnum, UserAccountStatusEnum_Enumeration>( "core:accountStatus", Direction.Forward, UserAccountStatusEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:accountStatus", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:accountStatus", new EntityRelationship<UserAccountStatusEnum>( EDC.ReadiNow.Model.Entity.Get<UserAccountStatusEnum>( EntityRefHelper.ConvertAliasWithNamespace( UserAccountStatusEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<AccessRule> AllowAccess
		{
			get
			{
				return this.GetRelationships<AccessRule>( "core:allowAccess", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<AccessRule>( "core:allowAccess", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public PasswordResetRecord PasswordReset
		{
			get
			{
				return this.GetLookup<PasswordResetRecord>( "core:passwordReset", Direction.Forward );
			}
			set
			{
				this.SetLookup<PasswordResetRecord>( "core:passwordReset", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Resource> SecurityOwnerOf
		{
			get
			{
				return this.GetRelationships<Resource>( "core:securityOwnerOf", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:securityOwnerOf", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<WorkflowRun> TriggeredWorkflowByUser
		{
			get
			{
				return this.GetRelationships<WorkflowRun>( "core:triggeredWorkflowByUser", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WorkflowRun>( "core:triggeredWorkflowByUser", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ApiKey> UserAccountApiKeys
		{
			get
			{
				return this.GetRelationships<ApiKey>( "core:userAccountApiKeys", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiKey>( "core:userAccountApiKeys", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Role> UserHasRole
		{
			get
			{
				return this.GetRelationships<Role>( "core:userHasRole", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Role>( "core:userHasRole", value, Direction.Forward );
			}
		}



		#endregion UserAccount Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UserAccount type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UserAccount_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:userAccount");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="UserAccountStatusEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:userAccountStatusEnum")]
	public class UserAccountStatusEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UserAccountStatusEnum( )
			: base( typeof( UserAccountStatusEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UserAccountStatusEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UserAccountStatusEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UserAccountStatusEnum.Alias_Field, UserAccountStatusEnum.CanDelete_Field, UserAccountStatusEnum.CanModify_Field, UserAccountStatusEnum.CanModifyProtectedResource_Field, UserAccountStatusEnum.CreatedDate_Field, UserAccountStatusEnum.Description_Field, UserAccountStatusEnum.EnumOrder_Field, UserAccountStatusEnum.ModifiedDate_Field, UserAccountStatusEnum.Name_Field, UserAccountStatusEnum.CreatedBy_Field, UserAccountStatusEnum.EnumOwner_Field, UserAccountStatusEnum.Flags_Field, UserAccountStatusEnum.IndirectInSolution_Field, UserAccountStatusEnum.InSolution_Field, UserAccountStatusEnum.InStructureLevel_Field, UserAccountStatusEnum.IsOfType_Field, UserAccountStatusEnum.IsRootForStructureView_Field, UserAccountStatusEnum.LastModifiedBy_Field, UserAccountStatusEnum.ResourceConsoleBehavior_Field, UserAccountStatusEnum.ResourceHasResourceKeyDataHashes_Field, UserAccountStatusEnum.ResourceInFolder_Field, UserAccountStatusEnum.SecurityOwner_Field, UserAccountStatusEnum.SelectionBehavior_Field, UserAccountStatusEnum.ShortcutInFolder_Field };
			}
		}

		#endregion UserAccountStatusEnum Public Fields

		#region UserAccountStatusEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion UserAccountStatusEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UserAccountStatusEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UserAccountStatusEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:userAccountStatusEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a UserAccountStatusEnum_Enumeration value.
		/// </summary>
		public static UserAccountStatusEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:active": return UserAccountStatusEnum_Enumeration.Active;
				case "core:disabled": return UserAccountStatusEnum_Enumeration.Disabled;
				case "core:locked": return UserAccountStatusEnum_Enumeration.Locked;
				case "core:expired": return UserAccountStatusEnum_Enumeration.Expired;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a UserAccountStatusEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(UserAccountStatusEnum_Enumeration value)
		{
			switch (value)
			{
				case UserAccountStatusEnum_Enumeration.Active: return "core:active";
				case UserAccountStatusEnum_Enumeration.Disabled: return "core:disabled";
				case UserAccountStatusEnum_Enumeration.Locked: return "core:locked";
				case UserAccountStatusEnum_Enumeration.Expired: return "core:expired";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<UserAccountStatusEnum_Enumeration> GetEnumValues( UserAccountStatusEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( UserAccountStatusEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( UserAccountStatusEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// UserAccountStatusEnum enumeration type.
	/// </summary>
	public enum UserAccountStatusEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		Active = 1,

		/// <summary>
		/// 
		/// </summary>
		Disabled = 2,

		/// <summary>
		/// 
		/// </summary>
		Locked = 4,

		/// <summary>
		/// 
		/// </summary>
		Expired = 8,

	}

	/// <summary>
	/// This is the parent type for all business resources, including both application resources and user-created resources.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:userResource")]
	public class UserResource : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UserResource( )
			: base( typeof( UserResource ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UserResource( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UserResource Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:objectReferencedInLog" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:recordToPresent" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UserResource.Alias_Field, UserResource.CanDelete_Field, UserResource.CanModify_Field, UserResource.CreatedDate_Field, UserResource.Description_Field, UserResource.ModifiedDate_Field, UserResource.Name_Field, UserResource.CreatedBy_Field, UserResource.Flags_Field, UserResource.IndirectInSolution_Field, UserResource.InSolution_Field, UserResource.InStructureLevel_Field, UserResource.IsOfType_Field, UserResource.IsRootForStructureView_Field, UserResource.LastModifiedBy_Field, UserResource.LogEntriesForObject_Field, UserResource.ResourceConsoleBehavior_Field, UserResource.ResourceHasResourceKeyDataHashes_Field, UserResource.ResourceInFolder_Field, UserResource.SecurityOwner_Field, UserResource.SelectionBehavior_Field, UserResource.ShortcutInFolder_Field, UserResource.TasksForRecord_Field };
			}
		}

		#endregion UserResource Public Fields

		#region UserResource Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion UserResource Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ApplicationDependency entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( Appointment entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( BaseUserTask entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ChoiceOption entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ChoiceOptionSet entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ChoiceQuestion entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ConditionalFormatIcon entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( DisplayFormUserTask entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( Document entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( DocumentRevision entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( DocumentType entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( EmailContact entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( EmailMessage entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( EmailNotifier entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( Event entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( EventEmail entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( FileType entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( IconFileType entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( IdentityProvider entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( IdentityProviderUser entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ImageFileType entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( Notification entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( Notifier entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( NumericQuestion entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( OidcIdentityProvider entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( OidcIdentityProviderUser entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( Person entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( PhoneContact entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( PhotoFileType entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( PromptUserTask entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ReadiNowIdentityProvider entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ReceivedEmailMessage entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ReceivedICalEmailMessage entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( RecordChangeAuditPolicy entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ReplyRecord entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ReportTemplate entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SendRecord entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SentEmailMessage entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SentICalEmailMessage entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SmsSendRecord entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyAnswer entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyAttachment entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyCampaign entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyOutcome entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyPersonCampaign entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyQuestion entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyResponse entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveySection entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( SurveyTargetCampaign entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( TextQuestion entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( ThumbnailFileType entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( TwilioNotifier entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( UserSurvey entity )
		{
			return entity.Cast<UserResource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator UserResource( UserSurveyTask entity )
		{
			return entity.Cast<UserResource>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UserResource type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UserResource_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:userResource");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A collection of questions to be presented to a group of users.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:userSurvey")]
	public class UserSurvey : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UserSurvey( )
			: base( typeof( UserSurvey ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UserSurvey( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UserSurvey Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ShowSurveyHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:showSurveyHelpText" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SurveyCampaigns_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:surveyCampaigns" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SurveyOutcomes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:surveyOutcomes" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SurveySections_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:surveySections" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SurveyTriggerOnCampaignComplete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:surveyTriggerOnCampaignComplete" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SurveyTriggerOnSurveyComplete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:surveyTriggerOnSurveyComplete" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UserSurvey.ShowSurveyHelpText_Field, UserSurvey.Alias_Field, UserSurvey.CanDelete_Field, UserSurvey.CanModify_Field, UserSurvey.CreatedDate_Field, UserSurvey.Description_Field, UserSurvey.ModifiedDate_Field, UserSurvey.Name_Field, UserSurvey.CreatedBy_Field, UserSurvey.Flags_Field, UserSurvey.IndirectInSolution_Field, UserSurvey.InSolution_Field, UserSurvey.InStructureLevel_Field, UserSurvey.IsOfType_Field, UserSurvey.IsRootForStructureView_Field, UserSurvey.LastModifiedBy_Field, UserSurvey.LogEntriesForObject_Field, UserSurvey.ResourceConsoleBehavior_Field, UserSurvey.ResourceHasResourceKeyDataHashes_Field, UserSurvey.ResourceInFolder_Field, UserSurvey.SecurityOwner_Field, UserSurvey.SelectionBehavior_Field, UserSurvey.ShortcutInFolder_Field, UserSurvey.SurveyCampaigns_Field, UserSurvey.SurveyOutcomes_Field, UserSurvey.SurveySections_Field, UserSurvey.SurveyTriggerOnCampaignComplete_Field, UserSurvey.SurveyTriggerOnSurveyComplete_Field, UserSurvey.TasksForRecord_Field };
			}
		}

		#endregion UserSurvey Public Fields

		#region UserSurvey Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ShowSurveyHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "core:showSurveyHelpText" );
			}
			set
			{
				this.SetField( "core:showSurveyHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<SurveyCampaign> SurveyCampaigns
		{
			get
			{
				return this.GetRelationships<SurveyCampaign>( "core:surveyCampaigns", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<SurveyCampaign>( "core:surveyCampaigns", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<SurveyOutcome> SurveyOutcomes
		{
			get
			{
				return this.GetRelationships<SurveyOutcome>( "core:surveyOutcomes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<SurveyOutcome>( "core:surveyOutcomes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<SurveySection> SurveySections
		{
			get
			{
				return this.GetRelationships<SurveySection>( "core:surveySections", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<SurveySection>( "core:surveySections", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow SurveyTriggerOnCampaignComplete
		{
			get
			{
				return this.GetLookup<Workflow>( "core:surveyTriggerOnCampaignComplete", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:surveyTriggerOnCampaignComplete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow SurveyTriggerOnSurveyComplete
		{
			get
			{
				return this.GetLookup<Workflow>( "core:surveyTriggerOnSurveyComplete", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:surveyTriggerOnSurveyComplete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion UserSurvey Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UserSurvey type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UserSurvey_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:userSurvey");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A task for a user to complete a survey.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:userSurveyTask")]
	public class UserSurveyTask : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public UserSurveyTask( )
			: base( typeof( UserSurveyTask ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal UserSurveyTask( IActivationData activationData )
			: base( activationData )
		{

		}

		#region UserSurveyTask Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField UserSurveyTaskAllowComments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:userSurveyTaskAllowComments" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField UserSurveyTaskAllowTargetEdit_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:userSurveyTaskAllowTargetEdit" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField UserSurveyTaskForReview_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:userSurveyTaskForReview" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField UserSurveyTaskHelp_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:userSurveyTaskHelp" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField KeepAfterCompletion_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.KeepAfterCompletion_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DecimalField PercentageCompleted_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.PercentageCompleted_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField TaskReminderTime_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.TaskReminderTime_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField UserTaskCompletedOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.UserTaskCompletedOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField UserTaskDueOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.UserTaskDueOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField UserTaskIsComplete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.UserTaskIsComplete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField UserTaskReminderEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.UserTaskReminderEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField UserTaskStartedOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.UserTaskStartedOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField WaitForNextTask_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.WaitForNextTask_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AssignedToUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.AssignedToUser_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AvailableTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TransitionTask.AvailableTransitions_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TaskPriority_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.TaskPriority_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TaskStatus_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.TaskStatus_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity UserResponse_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TransitionTask.UserResponse_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity UserSurveyTaskSurveyResponse_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:userSurveyTaskSurveyResponse" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity UserSurveyTaskTargetDefinition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:userSurveyTaskTargetDefinition" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity WorkflowRunForTask_Field
		{
			get
			{
				return EDC.ReadiNow.Model.BaseUserTask.WorkflowRunForTask_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { UserSurveyTask.UserSurveyTaskAllowComments_Field, UserSurveyTask.UserSurveyTaskAllowTargetEdit_Field, UserSurveyTask.UserSurveyTaskForReview_Field, UserSurveyTask.UserSurveyTaskHelp_Field, UserSurveyTask.Alias_Field, UserSurveyTask.CanDelete_Field, UserSurveyTask.CanModify_Field, UserSurveyTask.CreatedDate_Field, UserSurveyTask.Description_Field, UserSurveyTask.KeepAfterCompletion_Field, UserSurveyTask.ModifiedDate_Field, UserSurveyTask.Name_Field, UserSurveyTask.PercentageCompleted_Field, UserSurveyTask.TaskReminderTime_Field, UserSurveyTask.UserTaskCompletedOn_Field, UserSurveyTask.UserTaskDueOn_Field, UserSurveyTask.UserTaskIsComplete_Field, UserSurveyTask.UserTaskReminderEnabled_Field, UserSurveyTask.UserTaskStartedOn_Field, UserSurveyTask.WaitForNextTask_Field, UserSurveyTask.AssignedToUser_Field, UserSurveyTask.AvailableTransitions_Field, UserSurveyTask.CreatedBy_Field, UserSurveyTask.Flags_Field, UserSurveyTask.IndirectInSolution_Field, UserSurveyTask.InSolution_Field, UserSurveyTask.InStructureLevel_Field, UserSurveyTask.IsOfType_Field, UserSurveyTask.IsRootForStructureView_Field, UserSurveyTask.LastModifiedBy_Field, UserSurveyTask.LogEntriesForObject_Field, UserSurveyTask.ResourceConsoleBehavior_Field, UserSurveyTask.ResourceHasResourceKeyDataHashes_Field, UserSurveyTask.ResourceInFolder_Field, UserSurveyTask.SecurityOwner_Field, UserSurveyTask.SelectionBehavior_Field, UserSurveyTask.ShortcutInFolder_Field, UserSurveyTask.TaskPriority_Field, UserSurveyTask.TasksForRecord_Field, UserSurveyTask.TaskStatus_Field, UserSurveyTask.UserResponse_Field, UserSurveyTask.UserSurveyTaskSurveyResponse_Field, UserSurveyTask.UserSurveyTaskTargetDefinition_Field, UserSurveyTask.WorkflowRunForTask_Field };
			}
		}

		#endregion UserSurveyTask Public Fields

		#region UserSurveyTask Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? UserSurveyTaskAllowComments
		{
			get
			{
				return ( bool? ) this.GetField( "core:userSurveyTaskAllowComments" );
			}
			set
			{
				this.SetField( "core:userSurveyTaskAllowComments", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? UserSurveyTaskAllowTargetEdit
		{
			get
			{
				return ( bool? ) this.GetField( "core:userSurveyTaskAllowTargetEdit" );
			}
			set
			{
				this.SetField( "core:userSurveyTaskAllowTargetEdit", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? UserSurveyTaskForReview
		{
			get
			{
				return ( bool? ) this.GetField( "core:userSurveyTaskForReview" );
			}
			set
			{
				this.SetField( "core:userSurveyTaskForReview", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string UserSurveyTaskHelp
		{
			get
			{
				return ( string ) this.GetField( "core:userSurveyTaskHelp" );
			}
			set
			{
				this.SetField( "core:userSurveyTaskHelp", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? KeepAfterCompletion
		{
			get
			{
				return ( bool? ) this.GetField( "core:keepAfterCompletion" );
			}
			set
			{
				this.SetField( "core:keepAfterCompletion", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public decimal? PercentageCompleted
		{
			get
			{
				return ( decimal? ) this.GetField( "core:percentageCompleted" );
			}
			set
			{
				this.SetField( "core:percentageCompleted", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? TaskReminderTime
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:taskReminderTime" );
			}
			set
			{
				this.SetField( "core:taskReminderTime", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? UserTaskCompletedOn
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:userTaskCompletedOn" );
			}
			set
			{
				this.SetField( "core:userTaskCompletedOn", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? UserTaskDueOn
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:userTaskDueOn" );
			}
			set
			{
				this.SetField( "core:userTaskDueOn", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? UserTaskIsComplete
		{
			get
			{
				return ( bool? ) this.GetField( "core:userTaskIsComplete" );
			}
			set
			{
				this.SetField( "core:userTaskIsComplete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? UserTaskReminderEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:userTaskReminderEnabled" );
			}
			set
			{
				this.SetField( "core:userTaskReminderEnabled", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? UserTaskStartedOn
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:userTaskStartedOn" );
			}
			set
			{
				this.SetField( "core:userTaskStartedOn", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? WaitForNextTask
		{
			get
			{
				return ( bool? ) this.GetField( "core:waitForNextTask" );
			}
			set
			{
				this.SetField( "core:waitForNextTask", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Person AssignedToUser
		{
			get
			{
				return this.GetLookup<Person>( "core:assignedToUser", Direction.Forward );
			}
			set
			{
				this.SetLookup<Person>( "core:assignedToUser", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> AvailableTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:availableTransitions", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:availableTransitions", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EventEmailPriorityEnum TaskPriority
		{
			get
			{
				return this.GetLookup<EventEmailPriorityEnum>( "core:taskPriority", Direction.Forward );
			}
			set
			{
				this.SetLookup<EventEmailPriorityEnum>( "core:taskPriority", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public EventEmailPriorityEnum_Enumeration? TaskPriority_Enum
		{
			get
			{
				return GetEnum<EventEmailPriorityEnum, EventEmailPriorityEnum_Enumeration>( "core:taskPriority", Direction.Forward, EventEmailPriorityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:taskPriority", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:taskPriority", new EntityRelationship<EventEmailPriorityEnum>( EDC.ReadiNow.Model.Entity.Get<EventEmailPriorityEnum>( EntityRefHelper.ConvertAliasWithNamespace( EventEmailPriorityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public TaskStatusEnum TaskStatus
		{
			get
			{
				return this.GetLookup<TaskStatusEnum>( "core:taskStatus", Direction.Forward );
			}
			set
			{
				this.SetLookup<TaskStatusEnum>( "core:taskStatus", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public TaskStatusEnum_Enumeration? TaskStatus_Enum
		{
			get
			{
				return GetEnum<TaskStatusEnum, TaskStatusEnum_Enumeration>( "core:taskStatus", Direction.Forward, TaskStatusEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:taskStatus", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:taskStatus", new EntityRelationship<TaskStatusEnum>( EDC.ReadiNow.Model.Entity.Get<TaskStatusEnum>( EntityRefHelper.ConvertAliasWithNamespace( TaskStatusEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public TransitionStart UserResponse
		{
			get
			{
				return this.GetLookup<TransitionStart>( "core:userResponse", Direction.Forward );
			}
			set
			{
				this.SetLookup<TransitionStart>( "core:userResponse", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public SurveyResponse UserSurveyTaskSurveyResponse
		{
			get
			{
				return this.GetLookup<SurveyResponse>( "core:userSurveyTaskSurveyResponse", Direction.Forward );
			}
			set
			{
				this.SetLookup<SurveyResponse>( "core:userSurveyTaskSurveyResponse", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Definition UserSurveyTaskTargetDefinition
		{
			get
			{
				return this.GetLookup<Definition>( "core:userSurveyTaskTargetDefinition", Direction.Forward );
			}
			set
			{
				this.SetLookup<Definition>( "core:userSurveyTaskTargetDefinition", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public WorkflowRun WorkflowRunForTask
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunForTask", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunForTask", value, Direction.Forward );
			}
		}



		#endregion UserSurveyTask Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the UserSurveyTask type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType UserSurveyTask_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:userSurveyTask");
			}
		}
		
		#endregion Additional Static Content

	}

}