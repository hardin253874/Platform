//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Copyright 2011-2016 Global Software Innovation Pty Ltd
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

using EDC.ReadiNow.Model.Internal;

namespace EDC.ReadiNow.Model
{
	/// <summary>
	/// Email alarm.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:emailAlarm")]
	public class EmailAlarm : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EmailAlarm( )
			: base( typeof( EmailAlarm ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EmailAlarm( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EmailAlarm Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static TimeField EmailAlarmDuration_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<TimeField>( "core:emailAlarmDuration" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField EmailAlarmRepeat_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:emailAlarmRepeat" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmailAlarmSummary_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emailAlarmSummary" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EmailAlarmActions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:emailAlarmActions" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EmailAlarm.EmailAlarmDuration_Field, EmailAlarm.EmailAlarmRepeat_Field, EmailAlarm.EmailAlarmSummary_Field, EmailAlarm.Alias_Field, EmailAlarm.CanDelete_Field, EmailAlarm.CanModify_Field, EmailAlarm.CreatedDate_Field, EmailAlarm.Description_Field, EmailAlarm.ModifiedDate_Field, EmailAlarm.Name_Field, EmailAlarm.CreatedBy_Field, EmailAlarm.EmailAlarmActions_Field, EmailAlarm.Flags_Field, EmailAlarm.IndirectInSolution_Field, EmailAlarm.InSolution_Field, EmailAlarm.InStructureLevel_Field, EmailAlarm.IsOfType_Field, EmailAlarm.IsRootForStructureView_Field, EmailAlarm.LastModifiedBy_Field, EmailAlarm.ResourceConsoleBehavior_Field, EmailAlarm.ResourceHasResourceKeyDataHashes_Field, EmailAlarm.ResourceInFolder_Field, EmailAlarm.SecurityOwner_Field, EmailAlarm.SelectionBehavior_Field, EmailAlarm.ShortcutInFolder_Field };
			}
		}

		#endregion EmailAlarm Public Fields

		#region EmailAlarm Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? EmailAlarmDuration
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:emailAlarmDuration" );
			}
			set
			{
				this.SetField( "core:emailAlarmDuration", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? EmailAlarmRepeat
		{
			get
			{
				return ( int? ) this.GetField( "core:emailAlarmRepeat" );
			}
			set
			{
				this.SetField( "core:emailAlarmRepeat", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmailAlarmSummary
		{
			get
			{
				return ( string ) this.GetField( "core:emailAlarmSummary" );
			}
			set
			{
				this.SetField( "core:emailAlarmSummary", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EmailAlarmActionEnum EmailAlarmActions
		{
			get
			{
				return this.GetLookup<EmailAlarmActionEnum>( "core:emailAlarmActions", Direction.Forward );
			}
			set
			{
				this.SetLookup<EmailAlarmActionEnum>( "core:emailAlarmActions", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public EmailAlarmActionEnum_Enumeration? EmailAlarmActions_Enum
		{
			get
			{
				return GetEnum<EmailAlarmActionEnum, EmailAlarmActionEnum_Enumeration>( "core:emailAlarmActions", Direction.Forward, EmailAlarmActionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:emailAlarmActions", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:emailAlarmActions", new EntityRelationship<EmailAlarmActionEnum>( EDC.ReadiNow.Model.Entity.Get<EmailAlarmActionEnum>( EntityRefHelper.ConvertAliasWithNamespace( EmailAlarmActionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EmailAlarm Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EmailAlarm type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EmailAlarm_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:emailAlarm");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Email alarm action options
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:emailAlarmActionEnum")]
	public class EmailAlarmActionEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EmailAlarmActionEnum( )
			: base( typeof( EmailAlarmActionEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EmailAlarmActionEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EmailAlarmActionEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EmailAlarmActionEnum.Alias_Field, EmailAlarmActionEnum.CanDelete_Field, EmailAlarmActionEnum.CanModify_Field, EmailAlarmActionEnum.CanModifyProtectedResource_Field, EmailAlarmActionEnum.CreatedDate_Field, EmailAlarmActionEnum.Description_Field, EmailAlarmActionEnum.EnumOrder_Field, EmailAlarmActionEnum.ModifiedDate_Field, EmailAlarmActionEnum.Name_Field, EmailAlarmActionEnum.CreatedBy_Field, EmailAlarmActionEnum.EnumFormattingRule_Field, EmailAlarmActionEnum.EnumOwner_Field, EmailAlarmActionEnum.Flags_Field, EmailAlarmActionEnum.IndirectInSolution_Field, EmailAlarmActionEnum.InSolution_Field, EmailAlarmActionEnum.InStructureLevel_Field, EmailAlarmActionEnum.IsOfType_Field, EmailAlarmActionEnum.IsRootForStructureView_Field, EmailAlarmActionEnum.LastModifiedBy_Field, EmailAlarmActionEnum.ResourceConsoleBehavior_Field, EmailAlarmActionEnum.ResourceHasResourceKeyDataHashes_Field, EmailAlarmActionEnum.ResourceInFolder_Field, EmailAlarmActionEnum.SecurityOwner_Field, EmailAlarmActionEnum.SelectionBehavior_Field, EmailAlarmActionEnum.ShortcutInFolder_Field };
			}
		}

		#endregion EmailAlarmActionEnum Public Fields

		#region EmailAlarmActionEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EmailAlarmActionEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EmailAlarmActionEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EmailAlarmActionEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:emailAlarmActionEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a EmailAlarmActionEnum_Enumeration value.
		/// </summary>
		public static EmailAlarmActionEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:emailAlarmActionAudio": return EmailAlarmActionEnum_Enumeration.EmailAlarmActionAudio;
				case "core:emailAlarmActionDisplay": return EmailAlarmActionEnum_Enumeration.EmailAlarmActionDisplay;
				case "core:emailAlarmActionEmail": return EmailAlarmActionEnum_Enumeration.EmailAlarmActionEmail;
				case "core:emailAlarmActionProcedure": return EmailAlarmActionEnum_Enumeration.EmailAlarmActionProcedure;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a EmailAlarmActionEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(EmailAlarmActionEnum_Enumeration value)
		{
			switch (value)
			{
				case EmailAlarmActionEnum_Enumeration.EmailAlarmActionAudio: return "core:emailAlarmActionAudio";
				case EmailAlarmActionEnum_Enumeration.EmailAlarmActionDisplay: return "core:emailAlarmActionDisplay";
				case EmailAlarmActionEnum_Enumeration.EmailAlarmActionEmail: return "core:emailAlarmActionEmail";
				case EmailAlarmActionEnum_Enumeration.EmailAlarmActionProcedure: return "core:emailAlarmActionProcedure";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<EmailAlarmActionEnum_Enumeration> GetEnumValues( EmailAlarmActionEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( EmailAlarmActionEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( EmailAlarmActionEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// EmailAlarmActionEnum enumeration type.
	/// </summary>
	public enum EmailAlarmActionEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		EmailAlarmActionAudio = 1,

		/// <summary>
		/// 
		/// </summary>
		EmailAlarmActionDisplay = 2,

		/// <summary>
		/// 
		/// </summary>
		EmailAlarmActionEmail = 4,

		/// <summary>
		/// 
		/// </summary>
		EmailAlarmActionProcedure = 8,

	}

	/// <summary>
	/// Email contact.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:emailContact")]
	public class EmailContact : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EmailContact( )
			: base( typeof( EmailContact ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EmailContact( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EmailContact Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmailContactDisplayName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emailContactDisplayName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField EmailContactIsDefault_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:emailContactIsDefault" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField EmailContactIsInactive_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:emailContactIsInactive" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity EmailContactOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:personHasEmailContact" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EmailType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:emailType" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EmailContact.EmailContactDisplayName_Field, EmailContact.EmailContactIsDefault_Field, EmailContact.EmailContactIsInactive_Field, EmailContact.Alias_Field, EmailContact.CanDelete_Field, EmailContact.CanModify_Field, EmailContact.CreatedDate_Field, EmailContact.Description_Field, EmailContact.ModifiedDate_Field, EmailContact.Name_Field, EmailContact.CreatedBy_Field, EmailContact.EmailContactOwner_Field, EmailContact.EmailType_Field, EmailContact.Flags_Field, EmailContact.IndirectInSolution_Field, EmailContact.InSolution_Field, EmailContact.InStructureLevel_Field, EmailContact.IsOfType_Field, EmailContact.IsRootForStructureView_Field, EmailContact.LastModifiedBy_Field, EmailContact.LogEntriesForObject_Field, EmailContact.ResourceConsoleBehavior_Field, EmailContact.ResourceHasResourceKeyDataHashes_Field, EmailContact.ResourceInFolder_Field, EmailContact.SecurityOwner_Field, EmailContact.SelectionBehavior_Field, EmailContact.ShortcutInFolder_Field, EmailContact.TasksForRecord_Field };
			}
		}

		#endregion EmailContact Public Fields

		#region EmailContact Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmailContactDisplayName
		{
			get
			{
				return ( string ) this.GetField( "core:emailContactDisplayName" );
			}
			set
			{
				this.SetField( "core:emailContactDisplayName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? EmailContactIsDefault
		{
			get
			{
				return ( bool? ) this.GetField( "core:emailContactIsDefault" );
			}
			set
			{
				this.SetField( "core:emailContactIsDefault", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? EmailContactIsInactive
		{
			get
			{
				return ( bool? ) this.GetField( "core:emailContactIsInactive" );
			}
			set
			{
				this.SetField( "core:emailContactIsInactive", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Person EmailContactOwner
		{
			get
			{
				return this.GetLookup<Person>( "core:emailContactOwner", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Person>( "core:emailContactOwner", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EmailTypeEnum EmailType
		{
			get
			{
				return this.GetLookup<EmailTypeEnum>( "core:emailType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EmailTypeEnum>( "core:emailType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public EmailTypeEnum_Enumeration? EmailType_Enum
		{
			get
			{
				return GetEnum<EmailTypeEnum, EmailTypeEnum_Enumeration>( "core:emailType", Direction.Forward, EmailTypeEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:emailType", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:emailType", new EntityRelationship<EmailTypeEnum>( EDC.ReadiNow.Model.Entity.Get<EmailTypeEnum>( EntityRefHelper.ConvertAliasWithNamespace( EmailTypeEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion EmailContact Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EmailContact type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EmailContact_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:emailContact");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An email message that has been received by the email listener.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:emailMessage")]
	public class EmailMessage : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EmailMessage( )
			: base( typeof( EmailMessage ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EmailMessage( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EmailMessage Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmBCC_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emBCC" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmBody_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emBody" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmCC_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emCC" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmFrom_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emFrom" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmFromName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emFromName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField EmIsHtml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:emIsHtml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmSubject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emSubject" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emTo" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField EmUid_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:emUid" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EmAttachments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:emAttachments" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RelatedTask_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relatedMessages" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EmailMessage.EmBCC_Field, EmailMessage.EmBody_Field, EmailMessage.EmCC_Field, EmailMessage.EmFrom_Field, EmailMessage.EmFromName_Field, EmailMessage.EmIsHtml_Field, EmailMessage.EmSubject_Field, EmailMessage.EmTo_Field, EmailMessage.EmUid_Field, EmailMessage.Alias_Field, EmailMessage.CanDelete_Field, EmailMessage.CanModify_Field, EmailMessage.CreatedDate_Field, EmailMessage.Description_Field, EmailMessage.ModifiedDate_Field, EmailMessage.Name_Field, EmailMessage.CreatedBy_Field, EmailMessage.EmAttachments_Field, EmailMessage.Flags_Field, EmailMessage.IndirectInSolution_Field, EmailMessage.InSolution_Field, EmailMessage.InStructureLevel_Field, EmailMessage.IsOfType_Field, EmailMessage.IsRootForStructureView_Field, EmailMessage.LastModifiedBy_Field, EmailMessage.LogEntriesForObject_Field, EmailMessage.RelatedTask_Field, EmailMessage.ResourceConsoleBehavior_Field, EmailMessage.ResourceHasResourceKeyDataHashes_Field, EmailMessage.ResourceInFolder_Field, EmailMessage.SecurityOwner_Field, EmailMessage.SelectionBehavior_Field, EmailMessage.ShortcutInFolder_Field, EmailMessage.TasksForRecord_Field };
			}
		}

		#endregion EmailMessage Public Fields

		#region EmailMessage Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmBCC
		{
			get
			{
				return ( string ) this.GetField( "core:emBCC" );
			}
			set
			{
				this.SetField( "core:emBCC", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmBody
		{
			get
			{
				return ( string ) this.GetField( "core:emBody" );
			}
			set
			{
				this.SetField( "core:emBody", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmCC
		{
			get
			{
				return ( string ) this.GetField( "core:emCC" );
			}
			set
			{
				this.SetField( "core:emCC", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmFrom
		{
			get
			{
				return ( string ) this.GetField( "core:emFrom" );
			}
			set
			{
				this.SetField( "core:emFrom", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmFromName
		{
			get
			{
				return ( string ) this.GetField( "core:emFromName" );
			}
			set
			{
				this.SetField( "core:emFromName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? EmIsHtml
		{
			get
			{
				return ( bool? ) this.GetField( "core:emIsHtml" );
			}
			set
			{
				this.SetField( "core:emIsHtml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmSubject
		{
			get
			{
				return ( string ) this.GetField( "core:emSubject" );
			}
			set
			{
				this.SetField( "core:emSubject", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmTo
		{
			get
			{
				return ( string ) this.GetField( "core:emTo" );
			}
			set
			{
				this.SetField( "core:emTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? EmUid
		{
			get
			{
				return ( int? ) this.GetField( "core:emUid" );
			}
			set
			{
				this.SetField( "core:emUid", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<FileType> EmAttachments
		{
			get
			{
				return this.GetRelationships<FileType>( "core:emAttachments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<FileType>( "core:emAttachments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public DisplayFormUserTask RelatedTask
		{
			get
			{
				return this.GetLookup<DisplayFormUserTask>( "core:relatedTask", Direction.Reverse );
			}
			set
			{
				this.SetLookup<DisplayFormUserTask>( "core:relatedTask", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion EmailMessage Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EmailMessage( ReceivedEmailMessage entity )
		{
			return entity.Cast<EmailMessage>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EmailMessage( ReceivedICalEmailMessage entity )
		{
			return entity.Cast<EmailMessage>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EmailMessage( SentEmailMessage entity )
		{
			return entity.Cast<EmailMessage>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EmailMessage( SentICalEmailMessage entity )
		{
			return entity.Cast<EmailMessage>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EmailMessage type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EmailMessage_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:emailMessage");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Email notifier type
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:emailNotifier")]
	public class EmailNotifier : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EmailNotifier( )
			: base( typeof( EmailNotifier ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EmailNotifier( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EmailNotifier Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EnEmailAddressExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:enEmailAddressExpression" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EnSubject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:enSubject" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EmailNotifierInbox_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:emailNotifierInbox" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EmailNotifier.EnEmailAddressExpression_Field, EmailNotifier.EnSubject_Field, EmailNotifier.Alias_Field, EmailNotifier.CanDelete_Field, EmailNotifier.CanModify_Field, EmailNotifier.CreatedDate_Field, EmailNotifier.Description_Field, EmailNotifier.ModifiedDate_Field, EmailNotifier.Name_Field, EmailNotifier.CreatedBy_Field, EmailNotifier.EmailNotifierInbox_Field, EmailNotifier.Flags_Field, EmailNotifier.IndirectInSolution_Field, EmailNotifier.InSolution_Field, EmailNotifier.InStructureLevel_Field, EmailNotifier.IsOfType_Field, EmailNotifier.IsRootForStructureView_Field, EmailNotifier.LastModifiedBy_Field, EmailNotifier.LogEntriesForObject_Field, EmailNotifier.ResourceConsoleBehavior_Field, EmailNotifier.ResourceHasResourceKeyDataHashes_Field, EmailNotifier.ResourceInFolder_Field, EmailNotifier.SecurityOwner_Field, EmailNotifier.SelectionBehavior_Field, EmailNotifier.ShortcutInFolder_Field, EmailNotifier.TasksForRecord_Field };
			}
		}

		#endregion EmailNotifier Public Fields

		#region EmailNotifier Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EnEmailAddressExpression
		{
			get
			{
				return ( string ) this.GetField( "core:enEmailAddressExpression" );
			}
			set
			{
				this.SetField( "core:enEmailAddressExpression", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EnSubject
		{
			get
			{
				return ( string ) this.GetField( "core:enSubject" );
			}
			set
			{
				this.SetField( "core:enSubject", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Inbox EmailNotifierInbox
		{
			get
			{
				return this.GetLookup<Inbox>( "core:emailNotifierInbox", Direction.Forward );
			}
			set
			{
				this.SetLookup<Inbox>( "core:emailNotifierInbox", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion EmailNotifier Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EmailNotifier type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EmailNotifier_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:emailNotifier");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Email Types.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:emailTypeEnum")]
	public class EmailTypeEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EmailTypeEnum( )
			: base( typeof( EmailTypeEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EmailTypeEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EmailTypeEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EmailTypeEnum.Alias_Field, EmailTypeEnum.CanDelete_Field, EmailTypeEnum.CanModify_Field, EmailTypeEnum.CanModifyProtectedResource_Field, EmailTypeEnum.CreatedDate_Field, EmailTypeEnum.Description_Field, EmailTypeEnum.EnumOrder_Field, EmailTypeEnum.ModifiedDate_Field, EmailTypeEnum.Name_Field, EmailTypeEnum.CreatedBy_Field, EmailTypeEnum.EnumFormattingRule_Field, EmailTypeEnum.EnumOwner_Field, EmailTypeEnum.Flags_Field, EmailTypeEnum.IndirectInSolution_Field, EmailTypeEnum.InSolution_Field, EmailTypeEnum.InStructureLevel_Field, EmailTypeEnum.IsOfType_Field, EmailTypeEnum.IsRootForStructureView_Field, EmailTypeEnum.LastModifiedBy_Field, EmailTypeEnum.ResourceConsoleBehavior_Field, EmailTypeEnum.ResourceHasResourceKeyDataHashes_Field, EmailTypeEnum.ResourceInFolder_Field, EmailTypeEnum.SecurityOwner_Field, EmailTypeEnum.SelectionBehavior_Field, EmailTypeEnum.ShortcutInFolder_Field };
			}
		}

		#endregion EmailTypeEnum Public Fields

		#region EmailTypeEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EmailTypeEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EmailTypeEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EmailTypeEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:emailTypeEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a EmailTypeEnum_Enumeration value.
		/// </summary>
		public static EmailTypeEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:emailTypeBusiness": return EmailTypeEnum_Enumeration.EmailTypeBusiness;
				case "core:emailTypePersonal": return EmailTypeEnum_Enumeration.EmailTypePersonal;
				case "core:emailTypeOther": return EmailTypeEnum_Enumeration.EmailTypeOther;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a EmailTypeEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(EmailTypeEnum_Enumeration value)
		{
			switch (value)
			{
				case EmailTypeEnum_Enumeration.EmailTypeBusiness: return "core:emailTypeBusiness";
				case EmailTypeEnum_Enumeration.EmailTypePersonal: return "core:emailTypePersonal";
				case EmailTypeEnum_Enumeration.EmailTypeOther: return "core:emailTypeOther";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<EmailTypeEnum_Enumeration> GetEnumValues( EmailTypeEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( EmailTypeEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( EmailTypeEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// EmailTypeEnum enumeration type.
	/// </summary>
	public enum EmailTypeEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		EmailTypeBusiness = 1,

		/// <summary>
		/// 
		/// </summary>
		EmailTypePersonal = 2,

		/// <summary>
		/// 
		/// </summary>
		EmailTypeOther = 4,

	}

	/// <summary>
	/// An item that can be Enabled
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:enableableItem")]
	public class EnableableItem : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EnableableItem( )
			: base( typeof( EnableableItem ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EnableableItem( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EnableableItem Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField TriggerEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:triggerEnabled" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EnableableItem.TriggerEnabled_Field, EnableableItem.Alias_Field, EnableableItem.CanDelete_Field, EnableableItem.CanModify_Field, EnableableItem.CreatedDate_Field, EnableableItem.Description_Field, EnableableItem.ModifiedDate_Field, EnableableItem.Name_Field, EnableableItem.CreatedBy_Field, EnableableItem.Flags_Field, EnableableItem.IndirectInSolution_Field, EnableableItem.InSolution_Field, EnableableItem.InStructureLevel_Field, EnableableItem.IsOfType_Field, EnableableItem.IsRootForStructureView_Field, EnableableItem.LastModifiedBy_Field, EnableableItem.ResourceConsoleBehavior_Field, EnableableItem.ResourceHasResourceKeyDataHashes_Field, EnableableItem.ResourceInFolder_Field, EnableableItem.SecurityOwner_Field, EnableableItem.SelectionBehavior_Field, EnableableItem.ShortcutInFolder_Field };
			}
		}

		#endregion EnableableItem Public Fields

		#region EnableableItem Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? TriggerEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:triggerEnabled" );
			}
			set
			{
				this.SetField( "core:triggerEnabled", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EnableableItem Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( ProcessInboxesAction entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( RecordChangeAuditPolicy entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( ResourceTriggerFilterDef entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( ScheduledExportConfig entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( ScheduledFtpConfig entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( ScheduledImportConfig entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( ScheduledItem entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( WfTrigger entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( WfTriggerOnSchedule entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnableableItem( WfTriggerUserUpdatesResource entity )
		{
			return entity.Cast<EnableableItem>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EnableableItem type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EnableableItem_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:enableableItem");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Enable access rule audit log entry
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:enableAccessRuleAuditLogEntry")]
	public class EnableAccessRuleAuditLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EnableAccessRuleAuditLogEntry( )
			: base( typeof( EnableAccessRuleAuditLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EnableAccessRuleAuditLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EnableAccessRuleAuditLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField AccessRuleReportNameEnableAccessRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:accessRuleReportNameEnableAccessRule" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField NewAccessRuleEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:newAccessRuleEnabled" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField OldAccessRuleEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:oldAccessRuleEnabled" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField SecuredTypeNameEnableAccessRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:securedTypeNameEnableAccessRule" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField SubjectNameEnableAccessRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:subjectNameEnableAccessRule" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField AuditLogEntryCreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryCreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryMessage_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AuditLogEntrySuccess_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySuccess_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryUser_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AuditLogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EnableAccessRuleAuditLogEntry.AccessRuleReportNameEnableAccessRule_Field, EnableAccessRuleAuditLogEntry.NewAccessRuleEnabled_Field, EnableAccessRuleAuditLogEntry.OldAccessRuleEnabled_Field, EnableAccessRuleAuditLogEntry.SecuredTypeNameEnableAccessRule_Field, EnableAccessRuleAuditLogEntry.SubjectNameEnableAccessRule_Field, EnableAccessRuleAuditLogEntry.Alias_Field, EnableAccessRuleAuditLogEntry.AuditLogEntryCreatedDate_Field, EnableAccessRuleAuditLogEntry.AuditLogEntryMessage_Field, EnableAccessRuleAuditLogEntry.AuditLogEntrySuccess_Field, EnableAccessRuleAuditLogEntry.AuditLogEntryUser_Field, EnableAccessRuleAuditLogEntry.CanDelete_Field, EnableAccessRuleAuditLogEntry.CanModify_Field, EnableAccessRuleAuditLogEntry.CreatedDate_Field, EnableAccessRuleAuditLogEntry.Description_Field, EnableAccessRuleAuditLogEntry.ModifiedDate_Field, EnableAccessRuleAuditLogEntry.Name_Field, EnableAccessRuleAuditLogEntry.AuditLogEntrySeverity_Field, EnableAccessRuleAuditLogEntry.CreatedBy_Field, EnableAccessRuleAuditLogEntry.Flags_Field, EnableAccessRuleAuditLogEntry.IndirectInSolution_Field, EnableAccessRuleAuditLogEntry.InSolution_Field, EnableAccessRuleAuditLogEntry.InStructureLevel_Field, EnableAccessRuleAuditLogEntry.IsOfType_Field, EnableAccessRuleAuditLogEntry.IsRootForStructureView_Field, EnableAccessRuleAuditLogEntry.LastModifiedBy_Field, EnableAccessRuleAuditLogEntry.ResourceConsoleBehavior_Field, EnableAccessRuleAuditLogEntry.ResourceHasResourceKeyDataHashes_Field, EnableAccessRuleAuditLogEntry.ResourceInFolder_Field, EnableAccessRuleAuditLogEntry.SecurityOwner_Field, EnableAccessRuleAuditLogEntry.SelectionBehavior_Field, EnableAccessRuleAuditLogEntry.ShortcutInFolder_Field };
			}
		}

		#endregion EnableAccessRuleAuditLogEntry Public Fields

		#region EnableAccessRuleAuditLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string AccessRuleReportNameEnableAccessRule
		{
			get
			{
				return ( string ) this.GetField( "core:accessRuleReportNameEnableAccessRule" );
			}
			set
			{
				this.SetField( "core:accessRuleReportNameEnableAccessRule", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? NewAccessRuleEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:newAccessRuleEnabled" );
			}
			set
			{
				this.SetField( "core:newAccessRuleEnabled", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? OldAccessRuleEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:oldAccessRuleEnabled" );
			}
			set
			{
				this.SetField( "core:oldAccessRuleEnabled", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string SecuredTypeNameEnableAccessRule
		{
			get
			{
				return ( string ) this.GetField( "core:securedTypeNameEnableAccessRule" );
			}
			set
			{
				this.SetField( "core:securedTypeNameEnableAccessRule", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string SubjectNameEnableAccessRule
		{
			get
			{
				return ( string ) this.GetField( "core:subjectNameEnableAccessRule" );
			}
			set
			{
				this.SetField( "core:subjectNameEnableAccessRule", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? AuditLogEntryCreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:auditLogEntryCreatedDate" );
			}
			set
			{
				this.SetField( "core:auditLogEntryCreatedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryMessage
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryMessage" );
			}
			set
			{
				this.SetField( "core:auditLogEntryMessage", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AuditLogEntrySuccess
		{
			get
			{
				return ( bool? ) this.GetField( "core:auditLogEntrySuccess" );
			}
			set
			{
				this.SetField( "core:auditLogEntrySuccess", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryUser
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryUser" );
			}
			set
			{
				this.SetField( "core:auditLogEntryUser", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public AuditLogSeverityEnum AuditLogEntrySeverity
		{
			get
			{
				return this.GetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public AuditLogSeverityEnum_Enumeration? AuditLogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<AuditLogSeverityEnum, AuditLogSeverityEnum_Enumeration>( "core:auditLogEntrySeverity", Direction.Forward, AuditLogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:auditLogEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:auditLogEntrySeverity", new EntityRelationship<AuditLogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<AuditLogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( AuditLogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EnableAccessRuleAuditLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EnableAccessRuleAuditLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EnableAccessRuleAuditLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:enableAccessRuleAuditLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="EntityListColFmtEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:entityListColFmtEnum")]
	public class EntityListColFmtEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EntityListColFmtEnum( )
			: base( typeof( EntityListColFmtEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EntityListColFmtEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EntityListColFmtEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EntityListColFmtEnum.Alias_Field, EntityListColFmtEnum.CanDelete_Field, EntityListColFmtEnum.CanModify_Field, EntityListColFmtEnum.CanModifyProtectedResource_Field, EntityListColFmtEnum.CreatedDate_Field, EntityListColFmtEnum.Description_Field, EntityListColFmtEnum.EnumOrder_Field, EntityListColFmtEnum.ModifiedDate_Field, EntityListColFmtEnum.Name_Field, EntityListColFmtEnum.CreatedBy_Field, EntityListColFmtEnum.EnumFormattingRule_Field, EntityListColFmtEnum.EnumOwner_Field, EntityListColFmtEnum.Flags_Field, EntityListColFmtEnum.IndirectInSolution_Field, EntityListColFmtEnum.InSolution_Field, EntityListColFmtEnum.InStructureLevel_Field, EntityListColFmtEnum.IsOfType_Field, EntityListColFmtEnum.IsRootForStructureView_Field, EntityListColFmtEnum.LastModifiedBy_Field, EntityListColFmtEnum.ResourceConsoleBehavior_Field, EntityListColFmtEnum.ResourceHasResourceKeyDataHashes_Field, EntityListColFmtEnum.ResourceInFolder_Field, EntityListColFmtEnum.SecurityOwner_Field, EntityListColFmtEnum.SelectionBehavior_Field, EntityListColFmtEnum.ShortcutInFolder_Field };
			}
		}

		#endregion EntityListColFmtEnum Public Fields

		#region EntityListColFmtEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EntityListColFmtEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EntityListColFmtEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EntityListColFmtEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:entityListColFmtEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a EntityListColFmtEnum_Enumeration value.
		/// </summary>
		public static EntityListColFmtEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:commaSeparatedList": return EntityListColFmtEnum_Enumeration.CommaSeparatedList;
				case "core:stackedList": return EntityListColFmtEnum_Enumeration.StackedList;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a EntityListColFmtEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(EntityListColFmtEnum_Enumeration value)
		{
			switch (value)
			{
				case EntityListColFmtEnum_Enumeration.CommaSeparatedList: return "core:commaSeparatedList";
				case EntityListColFmtEnum_Enumeration.StackedList: return "core:stackedList";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<EntityListColFmtEnum_Enumeration> GetEnumValues( EntityListColFmtEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( EntityListColFmtEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( EntityListColFmtEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// EntityListColFmtEnum enumeration type.
	/// </summary>
	public enum EntityListColFmtEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		CommaSeparatedList = 1,

		/// <summary>
		/// 
		/// </summary>
		StackedList = 2,

	}

	/// <summary>
	/// An entity that has typed inputs, outputs and exit points. This is an abstract type internal to the Workflow engine.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:entityWithArgsAndExits")]
	public class EntityWithArgsAndExits : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EntityWithArgsAndExits( )
			: base( typeof( EntityWithArgsAndExits ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EntityWithArgsAndExits( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EntityWithArgsAndExits Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ExitPoints_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:exitPoints" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:inputArguments" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InternalArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:internalArguments" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity OutputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:outputArguments" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EntityWithArgsAndExits.Alias_Field, EntityWithArgsAndExits.CanDelete_Field, EntityWithArgsAndExits.CanModify_Field, EntityWithArgsAndExits.CanModifyProtectedResource_Field, EntityWithArgsAndExits.CreatedDate_Field, EntityWithArgsAndExits.Description_Field, EntityWithArgsAndExits.ModifiedDate_Field, EntityWithArgsAndExits.Name_Field, EntityWithArgsAndExits.CreatedBy_Field, EntityWithArgsAndExits.ExitPoints_Field, EntityWithArgsAndExits.Flags_Field, EntityWithArgsAndExits.IndirectInSolution_Field, EntityWithArgsAndExits.InputArguments_Field, EntityWithArgsAndExits.InSolution_Field, EntityWithArgsAndExits.InStructureLevel_Field, EntityWithArgsAndExits.InternalArguments_Field, EntityWithArgsAndExits.IsOfType_Field, EntityWithArgsAndExits.IsRootForStructureView_Field, EntityWithArgsAndExits.LastModifiedBy_Field, EntityWithArgsAndExits.OutputArguments_Field, EntityWithArgsAndExits.ResourceConsoleBehavior_Field, EntityWithArgsAndExits.ResourceHasResourceKeyDataHashes_Field, EntityWithArgsAndExits.ResourceInFolder_Field, EntityWithArgsAndExits.SecurityOwner_Field, EntityWithArgsAndExits.SelectionBehavior_Field, EntityWithArgsAndExits.ShortcutInFolder_Field };
			}
		}

		#endregion EntityWithArgsAndExits Public Fields

		#region EntityWithArgsAndExits Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ExitPoint> ExitPoints
		{
			get
			{
				return this.GetRelationships<ExitPoint>( "core:exitPoints", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ExitPoint>( "core:exitPoints", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:inputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:inputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InternalArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:internalArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:internalArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> OutputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:outputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:outputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EntityWithArgsAndExits Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( ActivityType entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( CloneActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( CreateActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( DecisionActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( DisplayFormActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( ReviewSurveyActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( SwitchActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( UpdateFieldActivity entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( Workflow entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EntityWithArgsAndExits( WorkflowProxy entity )
		{
			return entity.Cast<EntityWithArgsAndExits>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EntityWithArgsAndExits type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EntityWithArgsAndExits_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:entityWithArgsAndExits");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="EnumFormattingType" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:enumFormattingType")]
	public class EnumFormattingType : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EnumFormattingType( )
			: base( typeof( EnumFormattingType ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EnumFormattingType( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EnumFormattingType Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EnumFormattingType.Alias_Field, EnumFormattingType.CanDelete_Field, EnumFormattingType.CanModify_Field, EnumFormattingType.CanModifyProtectedResource_Field, EnumFormattingType.CreatedDate_Field, EnumFormattingType.Description_Field, EnumFormattingType.EnumOrder_Field, EnumFormattingType.ModifiedDate_Field, EnumFormattingType.Name_Field, EnumFormattingType.CreatedBy_Field, EnumFormattingType.EnumFormattingRule_Field, EnumFormattingType.EnumOwner_Field, EnumFormattingType.Flags_Field, EnumFormattingType.IndirectInSolution_Field, EnumFormattingType.InSolution_Field, EnumFormattingType.InStructureLevel_Field, EnumFormattingType.IsOfType_Field, EnumFormattingType.IsRootForStructureView_Field, EnumFormattingType.LastModifiedBy_Field, EnumFormattingType.ResourceConsoleBehavior_Field, EnumFormattingType.ResourceHasResourceKeyDataHashes_Field, EnumFormattingType.ResourceInFolder_Field, EnumFormattingType.SecurityOwner_Field, EnumFormattingType.SelectionBehavior_Field, EnumFormattingType.ShortcutInFolder_Field };
			}
		}

		#endregion EnumFormattingType Public Fields

		#region EnumFormattingType Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EnumFormattingType Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EnumFormattingType type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EnumFormattingType_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:enumFormattingType");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a EnumFormattingType_Enumeration value.
		/// </summary>
		public static EnumFormattingType_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:formattingTypeNone": return EnumFormattingType_Enumeration.FormattingTypeNone;
				case "core:formattingTypeHighlight": return EnumFormattingType_Enumeration.FormattingTypeHighlight;
				case "core:formattingTypeIcon": return EnumFormattingType_Enumeration.FormattingTypeIcon;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a EnumFormattingType_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(EnumFormattingType_Enumeration value)
		{
			switch (value)
			{
				case EnumFormattingType_Enumeration.FormattingTypeNone: return "core:formattingTypeNone";
				case EnumFormattingType_Enumeration.FormattingTypeHighlight: return "core:formattingTypeHighlight";
				case EnumFormattingType_Enumeration.FormattingTypeIcon: return "core:formattingTypeIcon";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<EnumFormattingType_Enumeration> GetEnumValues( EnumFormattingType_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( EnumFormattingType_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( EnumFormattingType_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// EnumFormattingType enumeration type.
	/// </summary>
	public enum EnumFormattingType_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		FormattingTypeNone = 1,

		/// <summary>
		/// 
		/// </summary>
		FormattingTypeHighlight = 2,

		/// <summary>
		/// 
		/// </summary>
		FormattingTypeIcon = 4,

	}

	/// <summary>
	/// All choice-field type definitions are of this type.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:enumType")]
	public class EnumType : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EnumType( )
			: base( typeof( EnumType ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EnumType( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EnumType Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AllowEveryoneRead_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.AllowEveryoneRead_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.CanCreateType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField GenerateCode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.GenerateCode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAbstract_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAbstract_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAdvancedType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAdvancedType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsSealed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsSealed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SupportMultiTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.SupportMultiTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SystemTenantOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.SystemTenantOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField TypeScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeScriptName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity AuditLogEntryTypeMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.AuditLogEntryTypeMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ControlAccessBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.ControlAccessBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultDisplayReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultEditForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultEditForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultPickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultPickerReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DefinitionUsedByReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefinitionUsedByReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EnumValueFormattingType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:enumValueFormattingType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity EnumValues_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:enumOwner" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldGroups_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldGroups_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldOverridesForType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldOverridesForType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Fields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Fields_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FormsToEditType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FormsToEditType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Inherits_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Inherits_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstanceFlags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstanceFlags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstancesInheritByDefault_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesInheritByDefault_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InstancesOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDeploy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDeploy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterPublish_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterPublish_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeleteFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeleteFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeployFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeployFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnPublishFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnPublishFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnSaveFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnSaveFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Relationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Relationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReportTemplatesApplyToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReportTemplatesApplyToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ResourceKeys_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ResourceKeys_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReverseRelationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReverseRelationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TriggerForWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TriggerForWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TypeApiMappings_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeApiMappings_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIcon_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIcon_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIncludedForNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIncludedForNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeSuppressedForNewAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeSuppressedForNewAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity UsedByResourceReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.UsedByResourceReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EnumType.Alias_Field, EnumType.AllowEveryoneRead_Field, EnumType.CanCreateType_Field, EnumType.CanDelete_Field, EnumType.CanModify_Field, EnumType.CanModifyProtectedResource_Field, EnumType.ClassName_Field, EnumType.ClassType_Field, EnumType.CreatedDate_Field, EnumType.Description_Field, EnumType.GenerateCode_Field, EnumType.IsAbstract_Field, EnumType.IsAdvancedType_Field, EnumType.IsMetadata_Field, EnumType.IsSealed_Field, EnumType.ModifiedDate_Field, EnumType.Name_Field, EnumType.SupportMultiTypes_Field, EnumType.SystemTenantOnly_Field, EnumType.TypeScriptName_Field, EnumType.AuditLogEntryTypeMetadata_Field, EnumType.ControlAccessBy_Field, EnumType.CreatedBy_Field, EnumType.DefaultDisplayReport_Field, EnumType.DefaultEditForm_Field, EnumType.DefaultPickerReport_Field, EnumType.DefaultTabletForm_Field, EnumType.DefinitionUsedByReport_Field, EnumType.DerivedTypes_Field, EnumType.EnumValueFormattingType_Field, EnumType.EnumValues_Field, EnumType.FieldGroups_Field, EnumType.FieldOverridesForType_Field, EnumType.Fields_Field, EnumType.Flags_Field, EnumType.FormsToEditType_Field, EnumType.IndirectInSolution_Field, EnumType.Inherits_Field, EnumType.InSolution_Field, EnumType.InstanceFlags_Field, EnumType.InstancesInheritByDefault_Field, EnumType.InstancesOfType_Field, EnumType.InStructureLevel_Field, EnumType.IsOfType_Field, EnumType.IsRootForStructureView_Field, EnumType.LastModifiedBy_Field, EnumType.OnAfterDelete_Field, EnumType.OnAfterDeploy_Field, EnumType.OnAfterPublish_Field, EnumType.OnAfterSave_Field, EnumType.OnAfterUpgrade_Field, EnumType.OnBeforeDelete_Field, EnumType.OnBeforeSave_Field, EnumType.OnBeforeUpgrade_Field, EnumType.OnDeleteFailed_Field, EnumType.OnDeployFailed_Field, EnumType.OnPublishFailed_Field, EnumType.OnSaveFailed_Field, EnumType.Relationships_Field, EnumType.ReportTemplatesApplyToType_Field, EnumType.ResourceConsoleBehavior_Field, EnumType.ResourceHasResourceKeyDataHashes_Field, EnumType.ResourceInFolder_Field, EnumType.ResourceKeys_Field, EnumType.ReverseRelationships_Field, EnumType.SecurityOwner_Field, EnumType.SelectionBehavior_Field, EnumType.ShortcutInFolder_Field, EnumType.TriggerForWorkflow_Field, EnumType.TypeApiMappings_Field, EnumType.TypeConsoleBehavior_Field, EnumType.TypeIcon_Field, EnumType.TypeIncludedForNewButton_Field, EnumType.TypeSuppressedForNewAction_Field, EnumType.UsedByResourceReportNode_Field };
			}
		}

		#endregion EnumType Public Fields

		#region EnumType Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AllowEveryoneRead
		{
			get
			{
				return ( bool? ) this.GetField( "core:allowEveryoneRead" );
			}
			set
			{
				this.SetField( "core:allowEveryoneRead", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateType
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateType" );
			}
			set
			{
				this.SetField( "core:canCreateType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassName
		{
			get
			{
				return ( string ) this.GetField( "core:className" );
			}
			set
			{
				this.SetField( "core:className", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassType
		{
			get
			{
				return ( string ) this.GetField( "core:classType" );
			}
			set
			{
				this.SetField( "core:classType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? GenerateCode
		{
			get
			{
				return ( bool? ) this.GetField( "core:generateCode" );
			}
			set
			{
				this.SetField( "core:generateCode", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAbstract
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAbstract" );
			}
			set
			{
				this.SetField( "core:isAbstract", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAdvancedType
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAdvancedType" );
			}
			set
			{
				this.SetField( "core:isAdvancedType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsMetadata
		{
			get
			{
				return ( bool? ) this.GetField( "core:isMetadata" );
			}
			set
			{
				this.SetField( "core:isMetadata", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsSealed
		{
			get
			{
				return ( bool? ) this.GetField( "core:isSealed" );
			}
			set
			{
				this.SetField( "core:isSealed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SupportMultiTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:supportMultiTypes" );
			}
			set
			{
				this.SetField( "core:supportMultiTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SystemTenantOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:systemTenantOnly" );
			}
			set
			{
				this.SetField( "core:systemTenantOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string TypeScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:typeScriptName" );
			}
			set
			{
				this.SetField( "core:typeScriptName", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AuditLogEntryMetadata AuditLogEntryTypeMetadata
		{
			get
			{
				return this.GetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<AccessRule> ControlAccessBy
		{
			get
			{
				return this.GetRelationships<AccessRule>( "core:controlAccessBy", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<AccessRule>( "core:controlAccessBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Report DefaultDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "core:defaultDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "core:defaultDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultEditForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultEditForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultEditForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ResourcePicker DefaultPickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "core:defaultPickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "core:defaultPickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourcePicker> DefinitionUsedByReport
		{
			get
			{
				return this.GetRelationships<ResourcePicker>( "core:definitionUsedByReport", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourcePicker>( "core:definitionUsedByReport", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> DerivedTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:derivedTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:derivedTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EnumFormattingType EnumValueFormattingType
		{
			get
			{
				return this.GetLookup<EnumFormattingType>( "core:enumValueFormattingType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumFormattingType>( "core:enumValueFormattingType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public EnumFormattingType_Enumeration? EnumValueFormattingType_Enum
		{
			get
			{
				return GetEnum<EnumFormattingType, EnumFormattingType_Enumeration>( "core:enumValueFormattingType", Direction.Forward, EnumFormattingType.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:enumValueFormattingType", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:enumValueFormattingType", new EntityRelationship<EnumFormattingType>( EDC.ReadiNow.Model.Entity.Get<EnumFormattingType>( EntityRefHelper.ConvertAliasWithNamespace( EnumFormattingType.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<EnumValue> EnumValues
		{
			get
			{
				return this.GetRelationships<EnumValue>( "core:enumValues", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EnumValue>( "core:enumValues", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<FieldGroup> FieldGroups
		{
			get
			{
				return this.GetRelationships<FieldGroup>( "core:fieldGroups", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<FieldGroup>( "core:fieldGroups", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> FieldOverridesForType
		{
			get
			{
				return this.GetRelationships<Field>( "core:fieldOverridesForType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fieldOverridesForType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> Fields
		{
			get
			{
				return this.GetRelationships<Field>( "core:fields", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fields", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<CustomEditForm> FormsToEditType
		{
			get
			{
				return this.GetRelationships<CustomEditForm>( "console:formsToEditType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<CustomEditForm>( "console:formsToEditType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> Inherits
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:inherits", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:inherits", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> InstanceFlags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:instanceFlags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:instanceFlags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? InstanceFlags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:instanceFlags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:instanceFlags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:instanceFlags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType InstancesInheritByDefault
		{
			get
			{
				return this.GetLookup<EntityType>( "core:instancesInheritByDefault", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:instancesInheritByDefault", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Resource> InstancesOfType
		{
			get
			{
				return this.GetRelationships<Resource>( "core:instancesOfType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:instancesOfType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDeploy
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDeploy", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDeploy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterPublish
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterPublish", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterPublish", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeleteFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeleteFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeleteFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeployFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeployFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeployFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnPublishFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onPublishFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onPublishFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnSaveFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onSaveFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onSaveFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> Relationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:relationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:relationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ReportTemplate> ReportTemplatesApplyToType
		{
			get
			{
				return this.GetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKey> ResourceKeys
		{
			get
			{
				return this.GetRelationships<ResourceKey>( "core:resourceKeys", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKey>( "core:resourceKeys", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> ReverseRelationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:reverseRelationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:reverseRelationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceTriggerFilterDef> TriggerForWorkflow
		{
			get
			{
				return this.GetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ApiResourceMapping> TypeApiMappings
		{
			get
			{
				return this.GetRelationships<ApiResourceMapping>( "core:typeApiMappings", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiResourceMapping>( "core:typeApiMappings", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior TypeConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IconFileType TypeIcon
		{
			get
			{
				return this.GetLookup<IconFileType>( "console:typeIcon", Direction.Forward );
			}
			set
			{
				this.SetLookup<IconFileType>( "console:typeIcon", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeIncludedForNewButton
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeIncludedForNewButton", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeIncludedForNewButton", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeSuppressedForNewAction
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceReportNode> UsedByResourceReportNode
		{
			get
			{
				return this.GetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", value, Direction.Reverse );
			}
		}



		#endregion EnumType Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EnumType type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EnumType_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:enumType");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// All choice-field values are of this type.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:enumValue")]
	public class EnumValue : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EnumValue( )
			: base( typeof( EnumValue ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EnumValue( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EnumValue Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:enumOrder" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:enumFormattingRule" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:enumOwner" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EnumValue.EnumOrder_Field, EnumValue.Alias_Field, EnumValue.CanDelete_Field, EnumValue.CanModify_Field, EnumValue.CanModifyProtectedResource_Field, EnumValue.CreatedDate_Field, EnumValue.Description_Field, EnumValue.ModifiedDate_Field, EnumValue.Name_Field, EnumValue.CreatedBy_Field, EnumValue.EnumFormattingRule_Field, EnumValue.EnumOwner_Field, EnumValue.Flags_Field, EnumValue.IndirectInSolution_Field, EnumValue.InSolution_Field, EnumValue.InStructureLevel_Field, EnumValue.IsOfType_Field, EnumValue.IsRootForStructureView_Field, EnumValue.LastModifiedBy_Field, EnumValue.ResourceConsoleBehavior_Field, EnumValue.ResourceHasResourceKeyDataHashes_Field, EnumValue.ResourceInFolder_Field, EnumValue.SecurityOwner_Field, EnumValue.SelectionBehavior_Field, EnumValue.ShortcutInFolder_Field };
			}
		}

		#endregion EnumValue Public Fields

		#region EnumValue Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EnumValue Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( AggregateMethodEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( AlignEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( AppointmentReminderEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( AttendeeStatusEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( AuditLogSeverityEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( CardinalityEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( CloneActionEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( DataLabelPosEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( DateColFmtEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( DateTimeColFmtEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( DayOfWeekEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( DirectionEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( EmailAlarmActionEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( EmailTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( EntityListColFmtEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( EnumFormattingType entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( EventEmailPriorityEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( EventStatusEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ExportFileTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( FieldRepresentsEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( GroupingMethodEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ImageScaleEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ImportFileTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( LogSeverityEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( MarkerShapeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( MonthOfYearEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( OperatorEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( PhoneTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( RelTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ReportStyleEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ResourceFlagsEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( SendEmailActivityDistributionTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( SendEmailActivityRecipientsTypeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ShowTimeAsEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( SizeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( StackMethodEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( SurveyStatusEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( TaskStatusEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( ThumbnailSizeEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( TimeColFmtEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( TopNavigationStyleEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( TriggeredOnEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( UserAccountStatusEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( WorkflowEventEnum entity )
		{
			return entity.Cast<EnumValue>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator EnumValue( WorkflowRunState entity )
		{
			return entity.Cast<EnumValue>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EnumValue type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EnumValue_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:enumValue");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Event definition.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:event")]
	public class Event : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public Event( )
			: base( typeof( Event ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal Event( IActivationData activationData )
			: base( activationData )
		{

		}

		#region Event Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField EventStart_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:eventStart" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { Event.EventStart_Field, Event.Alias_Field, Event.CanDelete_Field, Event.CanModify_Field, Event.CreatedDate_Field, Event.Description_Field, Event.ModifiedDate_Field, Event.Name_Field, Event.CreatedBy_Field, Event.Flags_Field, Event.IndirectInSolution_Field, Event.InSolution_Field, Event.InStructureLevel_Field, Event.IsOfType_Field, Event.IsRootForStructureView_Field, Event.LastModifiedBy_Field, Event.LogEntriesForObject_Field, Event.ResourceConsoleBehavior_Field, Event.ResourceHasResourceKeyDataHashes_Field, Event.ResourceInFolder_Field, Event.SecurityOwner_Field, Event.SelectionBehavior_Field, Event.ShortcutInFolder_Field, Event.TasksForRecord_Field };
			}
		}

		#endregion Event Public Fields

		#region Event Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? EventStart
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:eventStart" );
			}
			set
			{
				this.SetField( "core:eventStart", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion Event Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Event( Appointment entity )
		{
			return entity.Cast<Event>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the Event type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType Event_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:event");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Event that supports email.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:eventEmail")]
	public class EventEmail : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EventEmail( )
			: base( typeof( EventEmail ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EventEmail( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EventEmail Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity CalendarId_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:calendarId" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity EventEmailAppt_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:iCalAppt" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EventEmailCreator_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:eventEmailCreator" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReceivedEmailMessages_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:receivedEmailMessages" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SentEmailMessages_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:sentEmailMessages" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EventEmail.Alias_Field, EventEmail.CanDelete_Field, EventEmail.CanModify_Field, EventEmail.CreatedDate_Field, EventEmail.Description_Field, EventEmail.ModifiedDate_Field, EventEmail.Name_Field, EventEmail.CalendarId_Field, EventEmail.CreatedBy_Field, EventEmail.EventEmailAppt_Field, EventEmail.EventEmailCreator_Field, EventEmail.Flags_Field, EventEmail.IndirectInSolution_Field, EventEmail.InSolution_Field, EventEmail.InStructureLevel_Field, EventEmail.IsOfType_Field, EventEmail.IsRootForStructureView_Field, EventEmail.LastModifiedBy_Field, EventEmail.LogEntriesForObject_Field, EventEmail.ReceivedEmailMessages_Field, EventEmail.ResourceConsoleBehavior_Field, EventEmail.ResourceHasResourceKeyDataHashes_Field, EventEmail.ResourceInFolder_Field, EventEmail.SecurityOwner_Field, EventEmail.SelectionBehavior_Field, EventEmail.SentEmailMessages_Field, EventEmail.ShortcutInFolder_Field, EventEmail.TasksForRecord_Field };
			}
		}

		#endregion EventEmail Public Fields

		#region EventEmail Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ICalUidContainer CalendarId
		{
			get
			{
				return this.GetLookup<ICalUidContainer>( "core:calendarId", Direction.Forward );
			}
			set
			{
				this.SetLookup<ICalUidContainer>( "core:calendarId", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Appointment EventEmailAppt
		{
			get
			{
				return this.GetLookup<Appointment>( "core:eventEmailAppt", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Appointment>( "core:eventEmailAppt", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EmailContact EventEmailCreator
		{
			get
			{
				return this.GetLookup<EmailContact>( "core:eventEmailCreator", Direction.Forward );
			}
			set
			{
				this.SetLookup<EmailContact>( "core:eventEmailCreator", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ReceivedICalEmailMessage> ReceivedEmailMessages
		{
			get
			{
				return this.GetRelationships<ReceivedICalEmailMessage>( "core:receivedEmailMessages", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReceivedICalEmailMessage>( "core:receivedEmailMessages", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<SentICalEmailMessage> SentEmailMessages
		{
			get
			{
				return this.GetRelationships<SentICalEmailMessage>( "core:sentEmailMessages", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<SentICalEmailMessage>( "core:sentEmailMessages", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion EventEmail Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EventEmail type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EventEmail_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:eventEmail");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Event email priority enumeration.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:eventEmailPriorityEnum")]
	public class EventEmailPriorityEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EventEmailPriorityEnum( )
			: base( typeof( EventEmailPriorityEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EventEmailPriorityEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EventEmailPriorityEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EventEmailPriorityEnum.Alias_Field, EventEmailPriorityEnum.CanDelete_Field, EventEmailPriorityEnum.CanModify_Field, EventEmailPriorityEnum.CanModifyProtectedResource_Field, EventEmailPriorityEnum.CreatedDate_Field, EventEmailPriorityEnum.Description_Field, EventEmailPriorityEnum.EnumOrder_Field, EventEmailPriorityEnum.ModifiedDate_Field, EventEmailPriorityEnum.Name_Field, EventEmailPriorityEnum.CreatedBy_Field, EventEmailPriorityEnum.EnumFormattingRule_Field, EventEmailPriorityEnum.EnumOwner_Field, EventEmailPriorityEnum.Flags_Field, EventEmailPriorityEnum.IndirectInSolution_Field, EventEmailPriorityEnum.InSolution_Field, EventEmailPriorityEnum.InStructureLevel_Field, EventEmailPriorityEnum.IsOfType_Field, EventEmailPriorityEnum.IsRootForStructureView_Field, EventEmailPriorityEnum.LastModifiedBy_Field, EventEmailPriorityEnum.ResourceConsoleBehavior_Field, EventEmailPriorityEnum.ResourceHasResourceKeyDataHashes_Field, EventEmailPriorityEnum.ResourceInFolder_Field, EventEmailPriorityEnum.SecurityOwner_Field, EventEmailPriorityEnum.SelectionBehavior_Field, EventEmailPriorityEnum.ShortcutInFolder_Field };
			}
		}

		#endregion EventEmailPriorityEnum Public Fields

		#region EventEmailPriorityEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EventEmailPriorityEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EventEmailPriorityEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EventEmailPriorityEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:eventEmailPriorityEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a EventEmailPriorityEnum_Enumeration value.
		/// </summary>
		public static EventEmailPriorityEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:lowPriority": return EventEmailPriorityEnum_Enumeration.LowPriority;
				case "core:normalPriority": return EventEmailPriorityEnum_Enumeration.NormalPriority;
				case "core:highPriority": return EventEmailPriorityEnum_Enumeration.HighPriority;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a EventEmailPriorityEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(EventEmailPriorityEnum_Enumeration value)
		{
			switch (value)
			{
				case EventEmailPriorityEnum_Enumeration.LowPriority: return "core:lowPriority";
				case EventEmailPriorityEnum_Enumeration.NormalPriority: return "core:normalPriority";
				case EventEmailPriorityEnum_Enumeration.HighPriority: return "core:highPriority";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<EventEmailPriorityEnum_Enumeration> GetEnumValues( EventEmailPriorityEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( EventEmailPriorityEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( EventEmailPriorityEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// EventEmailPriorityEnum enumeration type.
	/// </summary>
	public enum EventEmailPriorityEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		LowPriority = 1,

		/// <summary>
		/// 
		/// </summary>
		NormalPriority = 2,

		/// <summary>
		/// 
		/// </summary>
		HighPriority = 4,

	}

	/// <summary>
	/// Implementation for the <see cref="EventLogSettings" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:eventLogSettings")]
	public class EventLogSettings : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EventLogSettings( )
			: base( typeof( EventLogSettings ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EventLogSettings( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EventLogSettings Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MaxEventLogEntries_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:maxEventLogEntries" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InspectSecurityChecksOnResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:inspectSecurityChecksOnResource" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EventLogSettings.MaxEventLogEntries_Field, EventLogSettings.Alias_Field, EventLogSettings.CanDelete_Field, EventLogSettings.CanModify_Field, EventLogSettings.CreatedDate_Field, EventLogSettings.Description_Field, EventLogSettings.ModifiedDate_Field, EventLogSettings.Name_Field, EventLogSettings.CreatedBy_Field, EventLogSettings.Flags_Field, EventLogSettings.IndirectInSolution_Field, EventLogSettings.InSolution_Field, EventLogSettings.InspectSecurityChecksOnResource_Field, EventLogSettings.InStructureLevel_Field, EventLogSettings.IsOfType_Field, EventLogSettings.IsRootForStructureView_Field, EventLogSettings.LastModifiedBy_Field, EventLogSettings.ResourceConsoleBehavior_Field, EventLogSettings.ResourceHasResourceKeyDataHashes_Field, EventLogSettings.ResourceInFolder_Field, EventLogSettings.SecurityOwner_Field, EventLogSettings.SelectionBehavior_Field, EventLogSettings.ShortcutInFolder_Field };
			}
		}

		#endregion EventLogSettings Public Fields

		#region EventLogSettings Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MaxEventLogEntries
		{
			get
			{
				return ( int? ) this.GetField( "core:maxEventLogEntries" );
			}
			set
			{
				this.SetField( "core:maxEventLogEntries", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Resource> InspectSecurityChecksOnResource
		{
			get
			{
				return this.GetRelationships<Resource>( "core:inspectSecurityChecksOnResource", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:inspectSecurityChecksOnResource", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EventLogSettings Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EventLogSettings type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EventLogSettings_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:eventLogSettings");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Event status options.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:eventStatusEnum")]
	public class EventStatusEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public EventStatusEnum( )
			: base( typeof( EventStatusEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal EventStatusEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region EventStatusEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { EventStatusEnum.Alias_Field, EventStatusEnum.CanDelete_Field, EventStatusEnum.CanModify_Field, EventStatusEnum.CanModifyProtectedResource_Field, EventStatusEnum.CreatedDate_Field, EventStatusEnum.Description_Field, EventStatusEnum.EnumOrder_Field, EventStatusEnum.ModifiedDate_Field, EventStatusEnum.Name_Field, EventStatusEnum.CreatedBy_Field, EventStatusEnum.EnumFormattingRule_Field, EventStatusEnum.EnumOwner_Field, EventStatusEnum.Flags_Field, EventStatusEnum.IndirectInSolution_Field, EventStatusEnum.InSolution_Field, EventStatusEnum.InStructureLevel_Field, EventStatusEnum.IsOfType_Field, EventStatusEnum.IsRootForStructureView_Field, EventStatusEnum.LastModifiedBy_Field, EventStatusEnum.ResourceConsoleBehavior_Field, EventStatusEnum.ResourceHasResourceKeyDataHashes_Field, EventStatusEnum.ResourceInFolder_Field, EventStatusEnum.SecurityOwner_Field, EventStatusEnum.SelectionBehavior_Field, EventStatusEnum.ShortcutInFolder_Field };
			}
		}

		#endregion EventStatusEnum Public Fields

		#region EventStatusEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion EventStatusEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the EventStatusEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType EventStatusEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:eventStatusEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a EventStatusEnum_Enumeration value.
		/// </summary>
		public static EventStatusEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:eventStatusTentative": return EventStatusEnum_Enumeration.EventStatusTentative;
				case "core:eventStatusConfirmed": return EventStatusEnum_Enumeration.EventStatusConfirmed;
				case "core:eventStatusCancelled": return EventStatusEnum_Enumeration.EventStatusCancelled;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a EventStatusEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(EventStatusEnum_Enumeration value)
		{
			switch (value)
			{
				case EventStatusEnum_Enumeration.EventStatusTentative: return "core:eventStatusTentative";
				case EventStatusEnum_Enumeration.EventStatusConfirmed: return "core:eventStatusConfirmed";
				case EventStatusEnum_Enumeration.EventStatusCancelled: return "core:eventStatusCancelled";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<EventStatusEnum_Enumeration> GetEnumValues( EventStatusEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( EventStatusEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( EventStatusEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// EventStatusEnum enumeration type.
	/// </summary>
	public enum EventStatusEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		EventStatusTentative = 1,

		/// <summary>
		/// 
		/// </summary>
		EventStatusConfirmed = 2,

		/// <summary>
		/// 
		/// </summary>
		EventStatusCancelled = 4,

	}

	/// <summary>
	/// Implementation for the <see cref="ExitPoint" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:exitPoint")]
	public class ExitPoint : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ExitPoint( )
			: base( typeof( ExitPoint ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ExitPoint( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ExitPoint Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ExitPointActionSummary_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:exitPointActionSummary" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField ExitPointOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:exitPointOrdinal" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsDefaultExitPoint_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:isDefaultExitPoint" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsTimeoutExitPoint_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:isTimeoutExitPoint" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ExitPointToTermination_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowExitPoint" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ExitPointToTransition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:fromExitPoint" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ExitPoint.ExitPointActionSummary_Field, ExitPoint.ExitPointOrdinal_Field, ExitPoint.IsDefaultExitPoint_Field, ExitPoint.IsTimeoutExitPoint_Field, ExitPoint.Alias_Field, ExitPoint.CanDelete_Field, ExitPoint.CanModify_Field, ExitPoint.CreatedDate_Field, ExitPoint.Description_Field, ExitPoint.ModifiedDate_Field, ExitPoint.Name_Field, ExitPoint.CreatedBy_Field, ExitPoint.ExitPointToTermination_Field, ExitPoint.ExitPointToTransition_Field, ExitPoint.Flags_Field, ExitPoint.IndirectInSolution_Field, ExitPoint.InSolution_Field, ExitPoint.InStructureLevel_Field, ExitPoint.IsOfType_Field, ExitPoint.IsRootForStructureView_Field, ExitPoint.LastModifiedBy_Field, ExitPoint.ResourceConsoleBehavior_Field, ExitPoint.ResourceHasResourceKeyDataHashes_Field, ExitPoint.ResourceInFolder_Field, ExitPoint.SecurityOwner_Field, ExitPoint.SelectionBehavior_Field, ExitPoint.ShortcutInFolder_Field };
			}
		}

		#endregion ExitPoint Public Fields

		#region ExitPoint Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ExitPointActionSummary
		{
			get
			{
				return ( string ) this.GetField( "core:exitPointActionSummary" );
			}
			set
			{
				this.SetField( "core:exitPointActionSummary", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? ExitPointOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "core:exitPointOrdinal" );
			}
			set
			{
				this.SetField( "core:exitPointOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsDefaultExitPoint
		{
			get
			{
				return ( bool? ) this.GetField( "core:isDefaultExitPoint" );
			}
			set
			{
				this.SetField( "core:isDefaultExitPoint", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsTimeoutExitPoint
		{
			get
			{
				return ( bool? ) this.GetField( "core:isTimeoutExitPoint" );
			}
			set
			{
				this.SetField( "core:isTimeoutExitPoint", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Termination> ExitPointToTermination
		{
			get
			{
				return this.GetRelationships<Termination>( "core:exitPointToTermination", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Termination>( "core:exitPointToTermination", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ExitPointToTransition
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:exitPointToTransition", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:exitPointToTransition", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ExitPoint Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ExitPoint type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ExitPoint_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:exitPoint");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Expired user account audit log entry
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:expireUserAccountAuditLogEntry")]
	public class ExpireUserAccountAuditLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ExpireUserAccountAuditLogEntry( )
			: base( typeof( ExpireUserAccountAuditLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ExpireUserAccountAuditLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ExpireUserAccountAuditLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ExpiredUserName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:expiredUserName" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField AuditLogEntryCreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryCreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryMessage_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AuditLogEntrySuccess_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySuccess_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryUser_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AuditLogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ExpireUserAccountAuditLogEntry.ExpiredUserName_Field, ExpireUserAccountAuditLogEntry.Alias_Field, ExpireUserAccountAuditLogEntry.AuditLogEntryCreatedDate_Field, ExpireUserAccountAuditLogEntry.AuditLogEntryMessage_Field, ExpireUserAccountAuditLogEntry.AuditLogEntrySuccess_Field, ExpireUserAccountAuditLogEntry.AuditLogEntryUser_Field, ExpireUserAccountAuditLogEntry.CanDelete_Field, ExpireUserAccountAuditLogEntry.CanModify_Field, ExpireUserAccountAuditLogEntry.CreatedDate_Field, ExpireUserAccountAuditLogEntry.Description_Field, ExpireUserAccountAuditLogEntry.ModifiedDate_Field, ExpireUserAccountAuditLogEntry.Name_Field, ExpireUserAccountAuditLogEntry.AuditLogEntrySeverity_Field, ExpireUserAccountAuditLogEntry.CreatedBy_Field, ExpireUserAccountAuditLogEntry.Flags_Field, ExpireUserAccountAuditLogEntry.IndirectInSolution_Field, ExpireUserAccountAuditLogEntry.InSolution_Field, ExpireUserAccountAuditLogEntry.InStructureLevel_Field, ExpireUserAccountAuditLogEntry.IsOfType_Field, ExpireUserAccountAuditLogEntry.IsRootForStructureView_Field, ExpireUserAccountAuditLogEntry.LastModifiedBy_Field, ExpireUserAccountAuditLogEntry.ResourceConsoleBehavior_Field, ExpireUserAccountAuditLogEntry.ResourceHasResourceKeyDataHashes_Field, ExpireUserAccountAuditLogEntry.ResourceInFolder_Field, ExpireUserAccountAuditLogEntry.SecurityOwner_Field, ExpireUserAccountAuditLogEntry.SelectionBehavior_Field, ExpireUserAccountAuditLogEntry.ShortcutInFolder_Field };
			}
		}

		#endregion ExpireUserAccountAuditLogEntry Public Fields

		#region ExpireUserAccountAuditLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ExpiredUserName
		{
			get
			{
				return ( string ) this.GetField( "core:expiredUserName" );
			}
			set
			{
				this.SetField( "core:expiredUserName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? AuditLogEntryCreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:auditLogEntryCreatedDate" );
			}
			set
			{
				this.SetField( "core:auditLogEntryCreatedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryMessage
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryMessage" );
			}
			set
			{
				this.SetField( "core:auditLogEntryMessage", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AuditLogEntrySuccess
		{
			get
			{
				return ( bool? ) this.GetField( "core:auditLogEntrySuccess" );
			}
			set
			{
				this.SetField( "core:auditLogEntrySuccess", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryUser
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryUser" );
			}
			set
			{
				this.SetField( "core:auditLogEntryUser", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public AuditLogSeverityEnum AuditLogEntrySeverity
		{
			get
			{
				return this.GetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public AuditLogSeverityEnum_Enumeration? AuditLogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<AuditLogSeverityEnum, AuditLogSeverityEnum_Enumeration>( "core:auditLogEntrySeverity", Direction.Forward, AuditLogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:auditLogEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:auditLogEntrySeverity", new EntityRelationship<AuditLogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<AuditLogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( AuditLogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ExpireUserAccountAuditLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ExpireUserAccountAuditLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ExpireUserAccountAuditLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:expireUserAccountAuditLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="ExportFileTypeEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:exportFileTypeEnum")]
	public class ExportFileTypeEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ExportFileTypeEnum( )
			: base( typeof( ExportFileTypeEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ExportFileTypeEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ExportFileTypeEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumFormattingRule_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ExportFileTypeEnum.Alias_Field, ExportFileTypeEnum.CanDelete_Field, ExportFileTypeEnum.CanModify_Field, ExportFileTypeEnum.CanModifyProtectedResource_Field, ExportFileTypeEnum.CreatedDate_Field, ExportFileTypeEnum.Description_Field, ExportFileTypeEnum.EnumOrder_Field, ExportFileTypeEnum.ModifiedDate_Field, ExportFileTypeEnum.Name_Field, ExportFileTypeEnum.CreatedBy_Field, ExportFileTypeEnum.EnumFormattingRule_Field, ExportFileTypeEnum.EnumOwner_Field, ExportFileTypeEnum.Flags_Field, ExportFileTypeEnum.IndirectInSolution_Field, ExportFileTypeEnum.InSolution_Field, ExportFileTypeEnum.InStructureLevel_Field, ExportFileTypeEnum.IsOfType_Field, ExportFileTypeEnum.IsRootForStructureView_Field, ExportFileTypeEnum.LastModifiedBy_Field, ExportFileTypeEnum.ResourceConsoleBehavior_Field, ExportFileTypeEnum.ResourceHasResourceKeyDataHashes_Field, ExportFileTypeEnum.ResourceInFolder_Field, ExportFileTypeEnum.SecurityOwner_Field, ExportFileTypeEnum.SelectionBehavior_Field, ExportFileTypeEnum.ShortcutInFolder_Field };
			}
		}

		#endregion ExportFileTypeEnum Public Fields

		#region ExportFileTypeEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FormattingRule EnumFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:enumFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:enumFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ExportFileTypeEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ExportFileTypeEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ExportFileTypeEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:exportFileTypeEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a ExportFileTypeEnum_Enumeration value.
		/// </summary>
		public static ExportFileTypeEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:exportFileTypeExcel": return ExportFileTypeEnum_Enumeration.ExportFileTypeExcel;
				case "core:exportFileTypeCsv": return ExportFileTypeEnum_Enumeration.ExportFileTypeCsv;
				case "core:exportFileTypeWord": return ExportFileTypeEnum_Enumeration.ExportFileTypeWord;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a ExportFileTypeEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(ExportFileTypeEnum_Enumeration value)
		{
			switch (value)
			{
				case ExportFileTypeEnum_Enumeration.ExportFileTypeExcel: return "core:exportFileTypeExcel";
				case ExportFileTypeEnum_Enumeration.ExportFileTypeCsv: return "core:exportFileTypeCsv";
				case ExportFileTypeEnum_Enumeration.ExportFileTypeWord: return "core:exportFileTypeWord";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<ExportFileTypeEnum_Enumeration> GetEnumValues( ExportFileTypeEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( ExportFileTypeEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( ExportFileTypeEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// ExportFileTypeEnum enumeration type.
	/// </summary>
	public enum ExportFileTypeEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		ExportFileTypeExcel = 1,

		/// <summary>
		/// 
		/// </summary>
		ExportFileTypeCsv = 2,

		/// <summary>
		/// 
		/// </summary>
		ExportFileTypeWord = 4,

	}

	/// <summary>
	/// Run a report and generate a file.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:exportToActivity")]
	public class ExportToActivity : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ExportToActivity( )
			: base( typeof( ExportToActivity ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ExportToActivity( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ExportToActivity Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DesignerData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.DesignerData_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ArgumentInstanceFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainingWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ContainingWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExpressionMap_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ExpressionMap_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ForwardTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ForwardTransitions_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TransitionsForActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.TransitionsForActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ExportToActivity.Alias_Field, ExportToActivity.CanDelete_Field, ExportToActivity.CanModify_Field, ExportToActivity.CanModifyProtectedResource_Field, ExportToActivity.CreatedDate_Field, ExportToActivity.Description_Field, ExportToActivity.DesignerData_Field, ExportToActivity.ModifiedDate_Field, ExportToActivity.Name_Field, ExportToActivity.ArgumentInstanceFromActivity_Field, ExportToActivity.ContainingWorkflow_Field, ExportToActivity.CreatedBy_Field, ExportToActivity.ExpressionMap_Field, ExportToActivity.Flags_Field, ExportToActivity.ForwardTransitions_Field, ExportToActivity.IndirectInSolution_Field, ExportToActivity.InSolution_Field, ExportToActivity.InStructureLevel_Field, ExportToActivity.IsOfType_Field, ExportToActivity.IsRootForStructureView_Field, ExportToActivity.LastModifiedBy_Field, ExportToActivity.ResourceConsoleBehavior_Field, ExportToActivity.ResourceHasResourceKeyDataHashes_Field, ExportToActivity.ResourceInFolder_Field, ExportToActivity.SecurityOwner_Field, ExportToActivity.SelectionBehavior_Field, ExportToActivity.ShortcutInFolder_Field, ExportToActivity.TransitionsForActivity_Field };
			}
		}

		#endregion ExportToActivity Public Fields

		#region ExportToActivity Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DesignerData
		{
			get
			{
				return ( string ) this.GetField( "core:designerData" );
			}
			set
			{
				this.SetField( "core:designerData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromActivity
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow ContainingWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:containingWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:containingWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<WfExpression> ExpressionMap
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:expressionMap", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:expressionMap", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ForwardTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:forwardTransitions", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:forwardTransitions", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Transition> TransitionsForActivity
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitionsForActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitionsForActivity", value, Direction.Reverse );
			}
		}



		#endregion ExportToActivity Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ExportToActivity type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ExportToActivity_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:exportToActivity");
			}
		}
		
		#endregion Additional Static Content

	}

}