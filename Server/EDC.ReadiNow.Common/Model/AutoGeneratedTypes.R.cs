//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Copyright 2011-2016 Global Software Innovation Pty Ltd
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

using EDC.ReadiNow.Model.Internal;

namespace EDC.ReadiNow.Model
{
	/// <summary>
	/// ReadiNow Identity provider.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:readiNowIdentityProvider")]
	public class ReadiNowIdentityProvider : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReadiNowIdentityProvider( )
			: base( typeof( ReadiNowIdentityProvider ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReadiNowIdentityProvider( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReadiNowIdentityProvider Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsProviderEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.IdentityProvider.IsProviderEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField ProviderOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.IdentityProvider.ProviderOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity IdentityProviderUsers_Field
		{
			get
			{
				return EDC.ReadiNow.Model.IdentityProvider.IdentityProviderUsers_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReadiNowIdentityProvider.Alias_Field, ReadiNowIdentityProvider.CanDelete_Field, ReadiNowIdentityProvider.CanModify_Field, ReadiNowIdentityProvider.CreatedDate_Field, ReadiNowIdentityProvider.Description_Field, ReadiNowIdentityProvider.IsProviderEnabled_Field, ReadiNowIdentityProvider.ModifiedDate_Field, ReadiNowIdentityProvider.Name_Field, ReadiNowIdentityProvider.ProviderOrdinal_Field, ReadiNowIdentityProvider.CreatedBy_Field, ReadiNowIdentityProvider.Flags_Field, ReadiNowIdentityProvider.IdentityProviderUsers_Field, ReadiNowIdentityProvider.IndirectInSolution_Field, ReadiNowIdentityProvider.InSolution_Field, ReadiNowIdentityProvider.InStructureLevel_Field, ReadiNowIdentityProvider.IsOfType_Field, ReadiNowIdentityProvider.IsRootForStructureView_Field, ReadiNowIdentityProvider.LastModifiedBy_Field, ReadiNowIdentityProvider.LogEntriesForObject_Field, ReadiNowIdentityProvider.ResourceConsoleBehavior_Field, ReadiNowIdentityProvider.ResourceHasResourceKeyDataHashes_Field, ReadiNowIdentityProvider.ResourceInFolder_Field, ReadiNowIdentityProvider.SecurityOwner_Field, ReadiNowIdentityProvider.SelectionBehavior_Field, ReadiNowIdentityProvider.ShortcutInFolder_Field, ReadiNowIdentityProvider.TasksForRecord_Field };
			}
		}

		#endregion ReadiNowIdentityProvider Public Fields

		#region ReadiNowIdentityProvider Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsProviderEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:isProviderEnabled" );
			}
			set
			{
				this.SetField( "core:isProviderEnabled", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? ProviderOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "core:providerOrdinal" );
			}
			set
			{
				this.SetField( "core:providerOrdinal", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<IdentityProviderUser> IdentityProviderUsers
		{
			get
			{
				return this.GetRelationships<IdentityProviderUser>( "core:identityProviderUsers", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<IdentityProviderUser>( "core:identityProviderUsers", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion ReadiNowIdentityProvider Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReadiNowIdentityProvider type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReadiNowIdentityProvider_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:readiNowIdentityProvider");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An email messages that was received by the system.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:receivedEmailMessage")]
	public class ReceivedEmailMessage : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReceivedEmailMessage( )
			: base( typeof( ReceivedEmailMessage ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReceivedEmailMessage( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReceivedEmailMessage Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField EmReceivedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:emReceivedDate" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField EmReferences_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:emReferences" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmBody_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmBody_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmCC_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmCC_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmFrom_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmFrom_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField EmIsHtml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmIsHtml_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmSubject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmSubject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmTo_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EmUid_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmUid_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EmAttachments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmAttachments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity FromInbox_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:receivedMessages" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity OriginalMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:originalMessage" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity RelatedTask_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.RelatedTask_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReceivedEmailMessage.EmReceivedDate_Field, ReceivedEmailMessage.EmReferences_Field, ReceivedEmailMessage.Alias_Field, ReceivedEmailMessage.CanDelete_Field, ReceivedEmailMessage.CanModify_Field, ReceivedEmailMessage.CreatedDate_Field, ReceivedEmailMessage.Description_Field, ReceivedEmailMessage.EmBody_Field, ReceivedEmailMessage.EmCC_Field, ReceivedEmailMessage.EmFrom_Field, ReceivedEmailMessage.EmIsHtml_Field, ReceivedEmailMessage.EmSubject_Field, ReceivedEmailMessage.EmTo_Field, ReceivedEmailMessage.EmUid_Field, ReceivedEmailMessage.ModifiedDate_Field, ReceivedEmailMessage.Name_Field, ReceivedEmailMessage.CreatedBy_Field, ReceivedEmailMessage.EmAttachments_Field, ReceivedEmailMessage.Flags_Field, ReceivedEmailMessage.FromInbox_Field, ReceivedEmailMessage.IndirectInSolution_Field, ReceivedEmailMessage.InSolution_Field, ReceivedEmailMessage.InStructureLevel_Field, ReceivedEmailMessage.IsOfType_Field, ReceivedEmailMessage.IsRootForStructureView_Field, ReceivedEmailMessage.LastModifiedBy_Field, ReceivedEmailMessage.LogEntriesForObject_Field, ReceivedEmailMessage.OriginalMessage_Field, ReceivedEmailMessage.RelatedTask_Field, ReceivedEmailMessage.ResourceConsoleBehavior_Field, ReceivedEmailMessage.ResourceHasResourceKeyDataHashes_Field, ReceivedEmailMessage.ResourceInFolder_Field, ReceivedEmailMessage.SecurityOwner_Field, ReceivedEmailMessage.SelectionBehavior_Field, ReceivedEmailMessage.ShortcutInFolder_Field, ReceivedEmailMessage.TasksForRecord_Field };
			}
		}

		#endregion ReceivedEmailMessage Public Fields

		#region ReceivedEmailMessage Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? EmReceivedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:emReceivedDate" );
			}
			set
			{
				this.SetField( "core:emReceivedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string EmReferences
		{
			get
			{
				return ( string ) this.GetField( "core:emReferences" );
			}
			set
			{
				this.SetField( "core:emReferences", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmBody
		{
			get
			{
				return ( string ) this.GetField( "core:emBody" );
			}
			set
			{
				this.SetField( "core:emBody", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmCC
		{
			get
			{
				return ( string ) this.GetField( "core:emCC" );
			}
			set
			{
				this.SetField( "core:emCC", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmFrom
		{
			get
			{
				return ( string ) this.GetField( "core:emFrom" );
			}
			set
			{
				this.SetField( "core:emFrom", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? EmIsHtml
		{
			get
			{
				return ( bool? ) this.GetField( "core:emIsHtml" );
			}
			set
			{
				this.SetField( "core:emIsHtml", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmSubject
		{
			get
			{
				return ( string ) this.GetField( "core:emSubject" );
			}
			set
			{
				this.SetField( "core:emSubject", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmTo
		{
			get
			{
				return ( string ) this.GetField( "core:emTo" );
			}
			set
			{
				this.SetField( "core:emTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EmUid
		{
			get
			{
				return ( int? ) this.GetField( "core:emUid" );
			}
			set
			{
				this.SetField( "core:emUid", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Document> EmAttachments
		{
			get
			{
				return this.GetRelationships<Document>( "core:emAttachments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Document>( "core:emAttachments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Inbox FromInbox
		{
			get
			{
				return this.GetLookup<Inbox>( "core:fromInbox", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Inbox>( "core:fromInbox", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public SentEmailMessage OriginalMessage
		{
			get
			{
				return this.GetLookup<SentEmailMessage>( "core:originalMessage", Direction.Forward );
			}
			set
			{
				this.SetLookup<SentEmailMessage>( "core:originalMessage", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public DisplayFormUserTask RelatedTask
		{
			get
			{
				return this.GetLookup<DisplayFormUserTask>( "core:relatedTask", Direction.Reverse );
			}
			set
			{
				this.SetLookup<DisplayFormUserTask>( "core:relatedTask", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion ReceivedEmailMessage Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReceivedEmailMessage( ReceivedICalEmailMessage entity )
		{
			return entity.Cast<ReceivedEmailMessage>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReceivedEmailMessage type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReceivedEmailMessage_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:receivedEmailMessage");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An email messages that was received by the system containing iCal updates.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:receivedICalEmailMessage")]
	public class ReceivedICalEmailMessage : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReceivedICalEmailMessage( )
			: base( typeof( ReceivedICalEmailMessage ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReceivedICalEmailMessage( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReceivedICalEmailMessage Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ICalUpdate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:iCalUpdate" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmBody_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmBody_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmCC_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmCC_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmFrom_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmFrom_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField EmIsHtml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmIsHtml_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField EmReceivedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReceivedEmailMessage.EmReceivedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmReferences_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReceivedEmailMessage.EmReferences_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmSubject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmSubject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmTo_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EmUid_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmUid_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity CreatedEventEmail_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:receivedEmailMessages" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EmAttachments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.EmAttachments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FromInbox_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReceivedEmailMessage.FromInbox_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OriginalMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReceivedEmailMessage.OriginalMessage_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity RelatedTask_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EmailMessage.RelatedTask_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReceivedICalEmailMessage.ICalUpdate_Field, ReceivedICalEmailMessage.Alias_Field, ReceivedICalEmailMessage.CanDelete_Field, ReceivedICalEmailMessage.CanModify_Field, ReceivedICalEmailMessage.CreatedDate_Field, ReceivedICalEmailMessage.Description_Field, ReceivedICalEmailMessage.EmBody_Field, ReceivedICalEmailMessage.EmCC_Field, ReceivedICalEmailMessage.EmFrom_Field, ReceivedICalEmailMessage.EmIsHtml_Field, ReceivedICalEmailMessage.EmReceivedDate_Field, ReceivedICalEmailMessage.EmReferences_Field, ReceivedICalEmailMessage.EmSubject_Field, ReceivedICalEmailMessage.EmTo_Field, ReceivedICalEmailMessage.EmUid_Field, ReceivedICalEmailMessage.ModifiedDate_Field, ReceivedICalEmailMessage.Name_Field, ReceivedICalEmailMessage.CreatedBy_Field, ReceivedICalEmailMessage.CreatedEventEmail_Field, ReceivedICalEmailMessage.EmAttachments_Field, ReceivedICalEmailMessage.Flags_Field, ReceivedICalEmailMessage.FromInbox_Field, ReceivedICalEmailMessage.IndirectInSolution_Field, ReceivedICalEmailMessage.InSolution_Field, ReceivedICalEmailMessage.InStructureLevel_Field, ReceivedICalEmailMessage.IsOfType_Field, ReceivedICalEmailMessage.IsRootForStructureView_Field, ReceivedICalEmailMessage.LastModifiedBy_Field, ReceivedICalEmailMessage.LogEntriesForObject_Field, ReceivedICalEmailMessage.OriginalMessage_Field, ReceivedICalEmailMessage.RelatedTask_Field, ReceivedICalEmailMessage.ResourceConsoleBehavior_Field, ReceivedICalEmailMessage.ResourceHasResourceKeyDataHashes_Field, ReceivedICalEmailMessage.ResourceInFolder_Field, ReceivedICalEmailMessage.SecurityOwner_Field, ReceivedICalEmailMessage.SelectionBehavior_Field, ReceivedICalEmailMessage.ShortcutInFolder_Field, ReceivedICalEmailMessage.TasksForRecord_Field };
			}
		}

		#endregion ReceivedICalEmailMessage Public Fields

		#region ReceivedICalEmailMessage Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ICalUpdate
		{
			get
			{
				return ( string ) this.GetField( "core:iCalUpdate" );
			}
			set
			{
				this.SetField( "core:iCalUpdate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmBody
		{
			get
			{
				return ( string ) this.GetField( "core:emBody" );
			}
			set
			{
				this.SetField( "core:emBody", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmCC
		{
			get
			{
				return ( string ) this.GetField( "core:emCC" );
			}
			set
			{
				this.SetField( "core:emCC", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmFrom
		{
			get
			{
				return ( string ) this.GetField( "core:emFrom" );
			}
			set
			{
				this.SetField( "core:emFrom", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? EmIsHtml
		{
			get
			{
				return ( bool? ) this.GetField( "core:emIsHtml" );
			}
			set
			{
				this.SetField( "core:emIsHtml", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? EmReceivedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:emReceivedDate" );
			}
			set
			{
				this.SetField( "core:emReceivedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmReferences
		{
			get
			{
				return ( string ) this.GetField( "core:emReferences" );
			}
			set
			{
				this.SetField( "core:emReferences", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmSubject
		{
			get
			{
				return ( string ) this.GetField( "core:emSubject" );
			}
			set
			{
				this.SetField( "core:emSubject", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmTo
		{
			get
			{
				return ( string ) this.GetField( "core:emTo" );
			}
			set
			{
				this.SetField( "core:emTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EmUid
		{
			get
			{
				return ( int? ) this.GetField( "core:emUid" );
			}
			set
			{
				this.SetField( "core:emUid", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public EventEmail CreatedEventEmail
		{
			get
			{
				return this.GetLookup<EventEmail>( "core:createdEventEmail", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EventEmail>( "core:createdEventEmail", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Document> EmAttachments
		{
			get
			{
				return this.GetRelationships<Document>( "core:emAttachments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Document>( "core:emAttachments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Inbox FromInbox
		{
			get
			{
				return this.GetLookup<Inbox>( "core:fromInbox", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Inbox>( "core:fromInbox", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public SentEmailMessage OriginalMessage
		{
			get
			{
				return this.GetLookup<SentEmailMessage>( "core:originalMessage", Direction.Forward );
			}
			set
			{
				this.SetLookup<SentEmailMessage>( "core:originalMessage", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public DisplayFormUserTask RelatedTask
		{
			get
			{
				return this.GetLookup<DisplayFormUserTask>( "core:relatedTask", Direction.Reverse );
			}
			set
			{
				this.SetLookup<DisplayFormUserTask>( "core:relatedTask", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion ReceivedICalEmailMessage Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReceivedICalEmailMessage type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReceivedICalEmailMessage_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:receivedICalEmailMessage");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A policy that controls the change auditing for a object definition.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:recordChangeAuditPolicy")]
	public class RecordChangeAuditPolicy : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RecordChangeAuditPolicy( )
			: base( typeof( RecordChangeAuditPolicy ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RecordChangeAuditPolicy( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RecordChangeAuditPolicy Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField RtfdRunInForeground_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.RtfdRunInForeground_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TriggerEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnableableItem.TriggerEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TriggeredOnType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.TriggeredOnType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity UpdatedFieldsToTriggerOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.UpdatedFieldsToTriggerOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity UpdatedRelationshipsToTriggerOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.UpdatedRelationshipsToTriggerOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RecordChangeAuditPolicy.Alias_Field, RecordChangeAuditPolicy.CanDelete_Field, RecordChangeAuditPolicy.CanModify_Field, RecordChangeAuditPolicy.CreatedDate_Field, RecordChangeAuditPolicy.Description_Field, RecordChangeAuditPolicy.ModifiedDate_Field, RecordChangeAuditPolicy.Name_Field, RecordChangeAuditPolicy.RtfdRunInForeground_Field, RecordChangeAuditPolicy.TriggerEnabled_Field, RecordChangeAuditPolicy.CreatedBy_Field, RecordChangeAuditPolicy.Flags_Field, RecordChangeAuditPolicy.IndirectInSolution_Field, RecordChangeAuditPolicy.InSolution_Field, RecordChangeAuditPolicy.InStructureLevel_Field, RecordChangeAuditPolicy.IsOfType_Field, RecordChangeAuditPolicy.IsRootForStructureView_Field, RecordChangeAuditPolicy.LastModifiedBy_Field, RecordChangeAuditPolicy.LogEntriesForObject_Field, RecordChangeAuditPolicy.ResourceConsoleBehavior_Field, RecordChangeAuditPolicy.ResourceHasResourceKeyDataHashes_Field, RecordChangeAuditPolicy.ResourceInFolder_Field, RecordChangeAuditPolicy.SecurityOwner_Field, RecordChangeAuditPolicy.SelectionBehavior_Field, RecordChangeAuditPolicy.ShortcutInFolder_Field, RecordChangeAuditPolicy.TasksForRecord_Field, RecordChangeAuditPolicy.TriggeredOnType_Field, RecordChangeAuditPolicy.UpdatedFieldsToTriggerOn_Field, RecordChangeAuditPolicy.UpdatedRelationshipsToTriggerOn_Field };
			}
		}

		#endregion RecordChangeAuditPolicy Public Fields

		#region RecordChangeAuditPolicy Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? RtfdRunInForeground
		{
			get
			{
				return ( bool? ) this.GetField( "core:rtfdRunInForeground" );
			}
			set
			{
				this.SetField( "core:rtfdRunInForeground", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TriggerEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:triggerEnabled" );
			}
			set
			{
				this.SetField( "core:triggerEnabled", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType TriggeredOnType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:triggeredOnType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:triggeredOnType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Field> UpdatedFieldsToTriggerOn
		{
			get
			{
				return this.GetRelationships<Field>( "core:updatedFieldsToTriggerOn", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:updatedFieldsToTriggerOn", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Relationship> UpdatedRelationshipsToTriggerOn
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:updatedRelationshipsToTriggerOn", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:updatedRelationshipsToTriggerOn", value, Direction.Forward );
			}
		}



		#endregion RecordChangeAuditPolicy Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RecordChangeAuditPolicy type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RecordChangeAuditPolicy_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:recordChangeAuditPolicy");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A log entry generate when a record is changed
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:recordChangeLogEntry")]
	public class RecordChangeLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RecordChangeLogEntry( )
			: base( typeof( RecordChangeLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RecordChangeLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RecordChangeLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField LogEventTime_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEventTime_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ReferencedObjectName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ManagedObjectLogEntry.ReferencedObjectName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ObjectReferencedInLog_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ManagedObjectLogEntry.ObjectReferencedInLog_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RecordChangeLogEntry.Alias_Field, RecordChangeLogEntry.CanDelete_Field, RecordChangeLogEntry.CanModify_Field, RecordChangeLogEntry.CreatedDate_Field, RecordChangeLogEntry.Description_Field, RecordChangeLogEntry.LogEventTime_Field, RecordChangeLogEntry.ModifiedDate_Field, RecordChangeLogEntry.Name_Field, RecordChangeLogEntry.ReferencedObjectName_Field, RecordChangeLogEntry.CreatedBy_Field, RecordChangeLogEntry.Flags_Field, RecordChangeLogEntry.IndirectInSolution_Field, RecordChangeLogEntry.InSolution_Field, RecordChangeLogEntry.InStructureLevel_Field, RecordChangeLogEntry.IsOfType_Field, RecordChangeLogEntry.IsRootForStructureView_Field, RecordChangeLogEntry.LastModifiedBy_Field, RecordChangeLogEntry.LogEntrySeverity_Field, RecordChangeLogEntry.ObjectReferencedInLog_Field, RecordChangeLogEntry.ResourceConsoleBehavior_Field, RecordChangeLogEntry.ResourceHasResourceKeyDataHashes_Field, RecordChangeLogEntry.ResourceInFolder_Field, RecordChangeLogEntry.SecurityOwner_Field, RecordChangeLogEntry.SelectionBehavior_Field, RecordChangeLogEntry.ShortcutInFolder_Field };
			}
		}

		#endregion RecordChangeLogEntry Public Fields

		#region RecordChangeLogEntry Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? LogEventTime
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:logEventTime" );
			}
			set
			{
				this.SetField( "core:logEventTime", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ReferencedObjectName
		{
			get
			{
				return ( string ) this.GetField( "core:referencedObjectName" );
			}
			set
			{
				this.SetField( "core:referencedObjectName", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public LogSeverityEnum LogEntrySeverity
		{
			get
			{
				return this.GetLookup<LogSeverityEnum>( "core:logEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<LogSeverityEnum>( "core:logEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public LogSeverityEnum_Enumeration? LogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<LogSeverityEnum, LogSeverityEnum_Enumeration>( "core:logEntrySeverity", Direction.Forward, LogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:logEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:logEntrySeverity", new EntityRelationship<LogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<LogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( LogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserResource ObjectReferencedInLog
		{
			get
			{
				return this.GetLookup<UserResource>( "core:objectReferencedInLog", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserResource>( "core:objectReferencedInLog", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RecordChangeLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RecordChangeLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RecordChangeLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:recordChangeLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A class describing a node in a path of relationships.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:relatedEntityDataPathNode")]
	public class RelatedEntityDataPathNode : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RelatedEntityDataPathNode( )
			: base( typeof( RelatedEntityDataPathNode ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RelatedEntityDataPathNode( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RelatedEntityDataPathNode Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField DataPathNodeOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:dataPathNodeOrdinal" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity DataPathNodeRelationship_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:dataPathNodeRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity DataPathNodeRelationshipDirection_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:dataPathNodeRelationshipDirection" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RelatedEntityDataPathNode.DataPathNodeOrdinal_Field, RelatedEntityDataPathNode.Alias_Field, RelatedEntityDataPathNode.CanDelete_Field, RelatedEntityDataPathNode.CanModify_Field, RelatedEntityDataPathNode.CreatedDate_Field, RelatedEntityDataPathNode.Description_Field, RelatedEntityDataPathNode.ModifiedDate_Field, RelatedEntityDataPathNode.Name_Field, RelatedEntityDataPathNode.CreatedBy_Field, RelatedEntityDataPathNode.DataPathNodeRelationship_Field, RelatedEntityDataPathNode.DataPathNodeRelationshipDirection_Field, RelatedEntityDataPathNode.Flags_Field, RelatedEntityDataPathNode.IndirectInSolution_Field, RelatedEntityDataPathNode.InSolution_Field, RelatedEntityDataPathNode.InStructureLevel_Field, RelatedEntityDataPathNode.IsOfType_Field, RelatedEntityDataPathNode.IsRootForStructureView_Field, RelatedEntityDataPathNode.LastModifiedBy_Field, RelatedEntityDataPathNode.ResourceConsoleBehavior_Field, RelatedEntityDataPathNode.ResourceHasResourceKeyDataHashes_Field, RelatedEntityDataPathNode.ResourceInFolder_Field, RelatedEntityDataPathNode.SecurityOwner_Field, RelatedEntityDataPathNode.SelectionBehavior_Field, RelatedEntityDataPathNode.ShortcutInFolder_Field };
			}
		}

		#endregion RelatedEntityDataPathNode Public Fields

		#region RelatedEntityDataPathNode Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? DataPathNodeOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:dataPathNodeOrdinal" );
			}
			set
			{
				this.SetField( "console:dataPathNodeOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Relationship DataPathNodeRelationship
		{
			get
			{
				return this.GetLookup<Relationship>( "console:dataPathNodeRelationship", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "console:dataPathNodeRelationship", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public DirectionEnum DataPathNodeRelationshipDirection
		{
			get
			{
				return this.GetLookup<DirectionEnum>( "console:dataPathNodeRelationshipDirection", Direction.Forward );
			}
			set
			{
				this.SetLookup<DirectionEnum>( "console:dataPathNodeRelationshipDirection", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public DirectionEnum_Enumeration? DataPathNodeRelationshipDirection_Enum
		{
			get
			{
				return GetEnum<DirectionEnum, DirectionEnum_Enumeration>( "console:dataPathNodeRelationshipDirection", Direction.Forward, DirectionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "console:dataPathNodeRelationshipDirection", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "console:dataPathNodeRelationshipDirection", new EntityRelationship<DirectionEnum>( EDC.ReadiNow.Model.Entity.Get<DirectionEnum>( EntityRefHelper.ConvertAliasWithNamespace( DirectionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RelatedEntityDataPathNode Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RelatedEntityDataPathNode type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RelatedEntityDataPathNode_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:relatedEntityDataPathNode");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// The 'Relationship' definition type
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:relationship")]
	public class Relationship : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public Relationship( )
			: base( typeof( Relationship ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal Relationship( IActivationData activationData )
			: base( activationData )
		{

		}

		#region Relationship Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CascadeDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:cascadeDelete" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CascadeDeleteTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:cascadeDeleteTo" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField DefaultFromUseCurrent_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:defaultFromUseCurrent" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField DefaultToUseCurrent_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:defaultToUseCurrent" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ExcludeFromPublish_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:excludeFromPublish" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField FromName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:fromName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField FromScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:fromScriptName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnFromType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnFromType" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnFromTypeDefaultForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnFromTypeDefaultForm" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnToType" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnToTypeDefaultForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnToTypeDefaultForm" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ImplicitInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:implicitInSolution" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsRelationshipReadOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:isRelationshipReadOnly" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RelationshipIsMandatory_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:relationshipIsMandatory" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static AliasField ReverseAlias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<AliasField>( "core:reverseAlias" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ReverseImplicitInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:reverseImplicitInSolution" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RevRelationshipIsMandatory_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:revRelationshipIsMandatory" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField SecuresFrom_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:securesFrom" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField SecuresFromReadOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:securesFromReadOnly" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField SecuresTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:securesTo" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField SecuresToReadOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:securesToReadOnly" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ShowRelationshipHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:showRelationshipHelpText" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ToName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:toName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ToScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:toScriptName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField WarnOnDeleteTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:warnOnDeleteTo" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField GenerateCode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.GenerateCode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SystemTenantOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.SystemTenantOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Cardinality_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:cardinality" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity CloneAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:cloneAction" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity DefaultPointTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:defaultPointTo" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity FromType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:fromType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity FromTypeDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:fromTypeDefaultValue" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity IsStructureHierarchyRelationshipFor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:structureHierarchyRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity IsStructureMembersRelationshipFor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:structureMembersRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipInFromTypeGroup_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relationshipInFromTypeGroup" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RelationshipInKey_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:keyRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipInToTypeGroup_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relationshipInToTypeGroup" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RelationshipUsedByApiMappings_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:mappedRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relType" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReverseCloneAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reverseCloneAction" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RRenderingControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipToRender" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:toType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ToTypeDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:toTypeDefaultValue" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity UsedByRelationshipReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:followRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { Relationship.CascadeDelete_Field, Relationship.CascadeDeleteTo_Field, Relationship.DefaultFromUseCurrent_Field, Relationship.DefaultToUseCurrent_Field, Relationship.ExcludeFromPublish_Field, Relationship.FromName_Field, Relationship.FromScriptName_Field, Relationship.HideOnFromType_Field, Relationship.HideOnFromTypeDefaultForm_Field, Relationship.HideOnToType_Field, Relationship.HideOnToTypeDefaultForm_Field, Relationship.ImplicitInSolution_Field, Relationship.IsRelationshipReadOnly_Field, Relationship.RelationshipIsMandatory_Field, Relationship.ReverseAlias_Field, Relationship.ReverseImplicitInSolution_Field, Relationship.RevRelationshipIsMandatory_Field, Relationship.SecuresFrom_Field, Relationship.SecuresFromReadOnly_Field, Relationship.SecuresTo_Field, Relationship.SecuresToReadOnly_Field, Relationship.ShowRelationshipHelpText_Field, Relationship.ToName_Field, Relationship.ToScriptName_Field, Relationship.WarnOnDeleteTo_Field, Relationship.Alias_Field, Relationship.CanDelete_Field, Relationship.CanModify_Field, Relationship.CanModifyProtectedResource_Field, Relationship.CreatedDate_Field, Relationship.Description_Field, Relationship.GenerateCode_Field, Relationship.ModifiedDate_Field, Relationship.Name_Field, Relationship.SystemTenantOnly_Field, Relationship.Cardinality_Field, Relationship.CloneAction_Field, Relationship.CreatedBy_Field, Relationship.DefaultPointTo_Field, Relationship.Flags_Field, Relationship.FromType_Field, Relationship.FromTypeDefaultValue_Field, Relationship.IndirectInSolution_Field, Relationship.InSolution_Field, Relationship.InStructureLevel_Field, Relationship.IsOfType_Field, Relationship.IsRootForStructureView_Field, Relationship.IsStructureHierarchyRelationshipFor_Field, Relationship.IsStructureMembersRelationshipFor_Field, Relationship.LastModifiedBy_Field, Relationship.RelationshipInFromTypeGroup_Field, Relationship.RelationshipInKey_Field, Relationship.RelationshipInToTypeGroup_Field, Relationship.RelationshipUsedByApiMappings_Field, Relationship.RelType_Field, Relationship.ResourceConsoleBehavior_Field, Relationship.ResourceHasResourceKeyDataHashes_Field, Relationship.ResourceInFolder_Field, Relationship.ReverseCloneAction_Field, Relationship.RRenderingControl_Field, Relationship.SecurityOwner_Field, Relationship.SelectionBehavior_Field, Relationship.ShortcutInFolder_Field, Relationship.ToType_Field, Relationship.ToTypeDefaultValue_Field, Relationship.UsedByRelationshipReportNode_Field };
			}
		}

		#endregion Relationship Public Fields

		#region Relationship Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CascadeDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:cascadeDelete" );
			}
			set
			{
				this.SetField( "core:cascadeDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CascadeDeleteTo
		{
			get
			{
				return ( bool? ) this.GetField( "core:cascadeDeleteTo" );
			}
			set
			{
				this.SetField( "core:cascadeDeleteTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? DefaultFromUseCurrent
		{
			get
			{
				return ( bool? ) this.GetField( "core:defaultFromUseCurrent" );
			}
			set
			{
				this.SetField( "core:defaultFromUseCurrent", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? DefaultToUseCurrent
		{
			get
			{
				return ( bool? ) this.GetField( "core:defaultToUseCurrent" );
			}
			set
			{
				this.SetField( "core:defaultToUseCurrent", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ExcludeFromPublish
		{
			get
			{
				return ( bool? ) this.GetField( "core:excludeFromPublish" );
			}
			set
			{
				this.SetField( "core:excludeFromPublish", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string FromName
		{
			get
			{
				return ( string ) this.GetField( "core:fromName" );
			}
			set
			{
				this.SetField( "core:fromName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string FromScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:fromScriptName" );
			}
			set
			{
				this.SetField( "core:fromScriptName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnFromType
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnFromType" );
			}
			set
			{
				this.SetField( "core:hideOnFromType", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnFromTypeDefaultForm
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnFromTypeDefaultForm" );
			}
			set
			{
				this.SetField( "core:hideOnFromTypeDefaultForm", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnToType
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnToType" );
			}
			set
			{
				this.SetField( "core:hideOnToType", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnToTypeDefaultForm
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnToTypeDefaultForm" );
			}
			set
			{
				this.SetField( "core:hideOnToTypeDefaultForm", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ImplicitInSolution
		{
			get
			{
				return ( bool? ) this.GetField( "core:implicitInSolution" );
			}
			set
			{
				this.SetField( "core:implicitInSolution", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsRelationshipReadOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:isRelationshipReadOnly" );
			}
			set
			{
				this.SetField( "core:isRelationshipReadOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RelationshipIsMandatory
		{
			get
			{
				return ( bool? ) this.GetField( "core:relationshipIsMandatory" );
			}
			set
			{
				this.SetField( "core:relationshipIsMandatory", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ReverseAlias
		{
			get
			{
				return ( string ) this.GetField( "core:reverseAlias" );
			}
			set
			{
				this.SetField( "core:reverseAlias", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ReverseImplicitInSolution
		{
			get
			{
				return ( bool? ) this.GetField( "core:reverseImplicitInSolution" );
			}
			set
			{
				this.SetField( "core:reverseImplicitInSolution", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RevRelationshipIsMandatory
		{
			get
			{
				return ( bool? ) this.GetField( "core:revRelationshipIsMandatory" );
			}
			set
			{
				this.SetField( "core:revRelationshipIsMandatory", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? SecuresFrom
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesFrom" );
			}
			set
			{
				this.SetField( "core:securesFrom", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? SecuresFromReadOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesFromReadOnly" );
			}
			set
			{
				this.SetField( "core:securesFromReadOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? SecuresTo
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesTo" );
			}
			set
			{
				this.SetField( "core:securesTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? SecuresToReadOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesToReadOnly" );
			}
			set
			{
				this.SetField( "core:securesToReadOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ShowRelationshipHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "core:showRelationshipHelpText" );
			}
			set
			{
				this.SetField( "core:showRelationshipHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ToName
		{
			get
			{
				return ( string ) this.GetField( "core:toName" );
			}
			set
			{
				this.SetField( "core:toName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ToScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:toScriptName" );
			}
			set
			{
				this.SetField( "core:toScriptName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? WarnOnDeleteTo
		{
			get
			{
				return ( bool? ) this.GetField( "core:warnOnDeleteTo" );
			}
			set
			{
				this.SetField( "core:warnOnDeleteTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? GenerateCode
		{
			get
			{
				return ( bool? ) this.GetField( "core:generateCode" );
			}
			set
			{
				this.SetField( "core:generateCode", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SystemTenantOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:systemTenantOnly" );
			}
			set
			{
				this.SetField( "core:systemTenantOnly", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public CardinalityEnum Cardinality
		{
			get
			{
				return this.GetLookup<CardinalityEnum>( "core:cardinality", Direction.Forward );
			}
			set
			{
				this.SetLookup<CardinalityEnum>( "core:cardinality", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public CardinalityEnum_Enumeration? Cardinality_Enum
		{
			get
			{
				return GetEnum<CardinalityEnum, CardinalityEnum_Enumeration>( "core:cardinality", Direction.Forward, CardinalityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:cardinality", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:cardinality", new EntityRelationship<CardinalityEnum>( EDC.ReadiNow.Model.Entity.Get<CardinalityEnum>( EntityRefHelper.ConvertAliasWithNamespace( CardinalityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public CloneActionEnum CloneAction
		{
			get
			{
				return this.GetLookup<CloneActionEnum>( "core:cloneAction", Direction.Forward );
			}
			set
			{
				this.SetLookup<CloneActionEnum>( "core:cloneAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public CloneActionEnum_Enumeration? CloneAction_Enum
		{
			get
			{
				return GetEnum<CloneActionEnum, CloneActionEnum_Enumeration>( "core:cloneAction", Direction.Forward, CloneActionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:cloneAction", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:cloneAction", new EntityRelationship<CloneActionEnum>( EDC.ReadiNow.Model.Entity.Get<CloneActionEnum>( EntityRefHelper.ConvertAliasWithNamespace( CloneActionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Resource DefaultPointTo
		{
			get
			{
				return this.GetLookup<Resource>( "core:defaultPointTo", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:defaultPointTo", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType FromType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:fromType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:fromType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Resource FromTypeDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "core:fromTypeDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:fromTypeDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsStructureHierarchyRelationshipFor
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isStructureHierarchyRelationshipFor", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isStructureHierarchyRelationshipFor", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsStructureMembersRelationshipFor
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isStructureMembersRelationshipFor", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isStructureMembersRelationshipFor", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public FieldGroup RelationshipInFromTypeGroup
		{
			get
			{
				return this.GetLookup<FieldGroup>( "core:relationshipInFromTypeGroup", Direction.Forward );
			}
			set
			{
				this.SetLookup<FieldGroup>( "core:relationshipInFromTypeGroup", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyRelationship> RelationshipInKey
		{
			get
			{
				return this.GetRelationships<ResourceKeyRelationship>( "core:relationshipInKey", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyRelationship>( "core:relationshipInKey", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public FieldGroup RelationshipInToTypeGroup
		{
			get
			{
				return this.GetLookup<FieldGroup>( "core:relationshipInToTypeGroup", Direction.Forward );
			}
			set
			{
				this.SetLookup<FieldGroup>( "core:relationshipInToTypeGroup", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ApiRelationshipMapping> RelationshipUsedByApiMappings
		{
			get
			{
				return this.GetRelationships<ApiRelationshipMapping>( "core:relationshipUsedByApiMappings", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiRelationshipMapping>( "core:relationshipUsedByApiMappings", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public RelTypeEnum RelType
		{
			get
			{
				return this.GetLookup<RelTypeEnum>( "core:relType", Direction.Forward );
			}
			set
			{
				this.SetLookup<RelTypeEnum>( "core:relType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public RelTypeEnum_Enumeration? RelType_Enum
		{
			get
			{
				return GetEnum<RelTypeEnum, RelTypeEnum_Enumeration>( "core:relType", Direction.Forward, RelTypeEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:relType", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:relType", new EntityRelationship<RelTypeEnum>( EDC.ReadiNow.Model.Entity.Get<RelTypeEnum>( EntityRefHelper.ConvertAliasWithNamespace( RelTypeEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public CloneActionEnum ReverseCloneAction
		{
			get
			{
				return this.GetLookup<CloneActionEnum>( "core:reverseCloneAction", Direction.Forward );
			}
			set
			{
				this.SetLookup<CloneActionEnum>( "core:reverseCloneAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public CloneActionEnum_Enumeration? ReverseCloneAction_Enum
		{
			get
			{
				return GetEnum<CloneActionEnum, CloneActionEnum_Enumeration>( "core:reverseCloneAction", Direction.Forward, CloneActionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:reverseCloneAction", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:reverseCloneAction", new EntityRelationship<CloneActionEnum>( EDC.ReadiNow.Model.Entity.Get<CloneActionEnum>( EntityRefHelper.ConvertAliasWithNamespace( CloneActionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<RelationshipControlOnForm> RRenderingControl
		{
			get
			{
				return this.GetRelationships<RelationshipControlOnForm>( "console:rRenderingControl", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipControlOnForm>( "console:rRenderingControl", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType ToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:toType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:toType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Resource ToTypeDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "core:toTypeDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:toTypeDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<RelationshipReportNode> UsedByRelationshipReportNode
		{
			get
			{
				return this.GetRelationships<RelationshipReportNode>( "core:usedByRelationshipReportNode", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipReportNode>( "core:usedByRelationshipReportNode", value, Direction.Reverse );
			}
		}



		#endregion Relationship Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Relationship( VirtualRelationship entity )
		{
			return entity.Cast<Relationship>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the Relationship type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType Relationship_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:relationship");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A class describing a relationship control filter.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:relationshipControlFilterDetails")]
	public class RelationshipControlFilterDetails : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RelationshipControlFilterDetails( )
			: base( typeof( RelationshipControlFilterDetails ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RelationshipControlFilterDetails( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RelationshipControlFilterDetails Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField RelationshipControlFilterOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:relationshipControlFilterOrdinal" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipControlFilter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipControlFilter" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipDirectionFilter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipDirectionFilter" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipFilter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipFilter" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RelationshipControlFilterDetails.RelationshipControlFilterOrdinal_Field, RelationshipControlFilterDetails.Alias_Field, RelationshipControlFilterDetails.CanDelete_Field, RelationshipControlFilterDetails.CanModify_Field, RelationshipControlFilterDetails.CreatedDate_Field, RelationshipControlFilterDetails.Description_Field, RelationshipControlFilterDetails.ModifiedDate_Field, RelationshipControlFilterDetails.Name_Field, RelationshipControlFilterDetails.CreatedBy_Field, RelationshipControlFilterDetails.Flags_Field, RelationshipControlFilterDetails.IndirectInSolution_Field, RelationshipControlFilterDetails.InSolution_Field, RelationshipControlFilterDetails.InStructureLevel_Field, RelationshipControlFilterDetails.IsOfType_Field, RelationshipControlFilterDetails.IsRootForStructureView_Field, RelationshipControlFilterDetails.LastModifiedBy_Field, RelationshipControlFilterDetails.RelationshipControlFilter_Field, RelationshipControlFilterDetails.RelationshipDirectionFilter_Field, RelationshipControlFilterDetails.RelationshipFilter_Field, RelationshipControlFilterDetails.ResourceConsoleBehavior_Field, RelationshipControlFilterDetails.ResourceHasResourceKeyDataHashes_Field, RelationshipControlFilterDetails.ResourceInFolder_Field, RelationshipControlFilterDetails.SecurityOwner_Field, RelationshipControlFilterDetails.SelectionBehavior_Field, RelationshipControlFilterDetails.ShortcutInFolder_Field };
			}
		}

		#endregion RelationshipControlFilterDetails Public Fields

		#region RelationshipControlFilterDetails Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? RelationshipControlFilterOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:relationshipControlFilterOrdinal" );
			}
			set
			{
				this.SetField( "console:relationshipControlFilterOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public RelationshipControlOnForm RelationshipControlFilter
		{
			get
			{
				return this.GetLookup<RelationshipControlOnForm>( "console:relationshipControlFilter", Direction.Forward );
			}
			set
			{
				this.SetLookup<RelationshipControlOnForm>( "console:relationshipControlFilter", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public DirectionEnum RelationshipDirectionFilter
		{
			get
			{
				return this.GetLookup<DirectionEnum>( "console:relationshipDirectionFilter", Direction.Forward );
			}
			set
			{
				this.SetLookup<DirectionEnum>( "console:relationshipDirectionFilter", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public DirectionEnum_Enumeration? RelationshipDirectionFilter_Enum
		{
			get
			{
				return GetEnum<DirectionEnum, DirectionEnum_Enumeration>( "console:relationshipDirectionFilter", Direction.Forward, DirectionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "console:relationshipDirectionFilter", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "console:relationshipDirectionFilter", new EntityRelationship<DirectionEnum>( EDC.ReadiNow.Model.Entity.Get<DirectionEnum>( EntityRefHelper.ConvertAliasWithNamespace( DirectionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Relationship RelationshipFilter
		{
			get
			{
				return this.GetLookup<Relationship>( "console:relationshipFilter", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "console:relationshipFilter", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RelationshipControlFilterDetails Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RelationshipControlFilterDetails type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RelationshipControlFilterDetails_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:relationshipControlFilterDetails");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Represents a relationship control instance on a form and the relationship it represents
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:relationshipControlOnForm")]
	public class RelationshipControlOnForm : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RelationshipControlOnForm( )
			: base( typeof( RelationshipControlOnForm ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RelationshipControlOnForm( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RelationshipControlOnForm Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CanHaveFields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:canHaveFields" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField InfoButtonVisible_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:infoButtonVisible" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsReversed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:isReversed" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateDerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreateDerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideAddButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideAddButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideRemoveButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideRemoveButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField VisibilityCalculation_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.VisibilityCalculation_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity HasRelationshipControlBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:hasRelationshipControlBehavior" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity PickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:pickerReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity PickerStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:pickerStructureView" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipControlFilters_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipControlFilters" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipDefaultValue" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipDisplayForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipDisplayForm" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipDisplayReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipToRender_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:relationshipToRender" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerConsoleForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerConsoleForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RelationshipControlOnForm.CanHaveFields_Field, RelationshipControlOnForm.InfoButtonVisible_Field, RelationshipControlOnForm.IsReversed_Field, RelationshipControlOnForm.Alias_Field, RelationshipControlOnForm.CanCreate_Field, RelationshipControlOnForm.CanCreateDerivedTypes_Field, RelationshipControlOnForm.CanDelete_Field, RelationshipControlOnForm.CanModify_Field, RelationshipControlOnForm.CreatedDate_Field, RelationshipControlOnForm.Description_Field, RelationshipControlOnForm.HideAddButton_Field, RelationshipControlOnForm.HideLabel_Field, RelationshipControlOnForm.HideNewButton_Field, RelationshipControlOnForm.HideRemoveButton_Field, RelationshipControlOnForm.MandatoryControl_Field, RelationshipControlOnForm.ModifiedDate_Field, RelationshipControlOnForm.Name_Field, RelationshipControlOnForm.ReadOnlyControl_Field, RelationshipControlOnForm.RenderingBackgroundColor_Field, RelationshipControlOnForm.RenderingHeight_Field, RelationshipControlOnForm.RenderingOrdinal_Field, RelationshipControlOnForm.RenderingWidth_Field, RelationshipControlOnForm.ShowControlHelpText_Field, RelationshipControlOnForm.VisibilityCalculation_Field, RelationshipControlOnForm.ContainedWithinStructureControlOnForm_Field, RelationshipControlOnForm.ControlRelatedEntityDataPathNodes_Field, RelationshipControlOnForm.CreatedBy_Field, RelationshipControlOnForm.Flags_Field, RelationshipControlOnForm.HasRelationshipControlBehavior_Field, RelationshipControlOnForm.IndirectInSolution_Field, RelationshipControlOnForm.InSolution_Field, RelationshipControlOnForm.InStructureLevel_Field, RelationshipControlOnForm.IsOfType_Field, RelationshipControlOnForm.IsRootForStructureView_Field, RelationshipControlOnForm.LastModifiedBy_Field, RelationshipControlOnForm.PickerReport_Field, RelationshipControlOnForm.PickerStructureView_Field, RelationshipControlOnForm.RelationshipControlFilters_Field, RelationshipControlOnForm.RelationshipDefaultValue_Field, RelationshipControlOnForm.RelationshipDisplayForm_Field, RelationshipControlOnForm.RelationshipDisplayReport_Field, RelationshipControlOnForm.RelationshipToRender_Field, RelationshipControlOnForm.ResourceConsoleBehavior_Field, RelationshipControlOnForm.ResourceHasResourceKeyDataHashes_Field, RelationshipControlOnForm.ResourceInFolder_Field, RelationshipControlOnForm.ResourceViewerConsoleForm_Field, RelationshipControlOnForm.ResourceViewerTabletForm_Field, RelationshipControlOnForm.SecurityOwner_Field, RelationshipControlOnForm.SelectionBehavior_Field, RelationshipControlOnForm.ShortcutInFolder_Field };
			}
		}

		#endregion RelationshipControlOnForm Public Fields

		#region RelationshipControlOnForm Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CanHaveFields
		{
			get
			{
				return ( bool? ) this.GetField( "console:canHaveFields" );
			}
			set
			{
				this.SetField( "console:canHaveFields", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? InfoButtonVisible
		{
			get
			{
				return ( bool? ) this.GetField( "console:infoButtonVisible" );
			}
			set
			{
				this.SetField( "console:infoButtonVisible", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsReversed
		{
			get
			{
				return ( bool? ) this.GetField( "console:isReversed" );
			}
			set
			{
				this.SetField( "console:isReversed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreate
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreate" );
			}
			set
			{
				this.SetField( "core:canCreate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateDerivedTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateDerivedTypes" );
			}
			set
			{
				this.SetField( "core:canCreateDerivedTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideAddButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideAddButton" );
			}
			set
			{
				this.SetField( "core:hideAddButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideNewButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideNewButton" );
			}
			set
			{
				this.SetField( "core:hideNewButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideRemoveButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideRemoveButton" );
			}
			set
			{
				this.SetField( "core:hideRemoveButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string VisibilityCalculation
		{
			get
			{
				return ( string ) this.GetField( "console:visibilityCalculation" );
			}
			set
			{
				this.SetField( "console:visibilityCalculation", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public MultiRelationshipControlBehavior HasRelationshipControlBehavior
		{
			get
			{
				return this.GetLookup<MultiRelationshipControlBehavior>( "console:hasRelationshipControlBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<MultiRelationshipControlBehavior>( "console:hasRelationshipControlBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ResourcePicker PickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "console:pickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "console:pickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public StructureView PickerStructureView
		{
			get
			{
				return this.GetLookup<StructureView>( "console:pickerStructureView", Direction.Forward );
			}
			set
			{
				this.SetLookup<StructureView>( "console:pickerStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<RelationshipControlFilterDetails> RelationshipControlFilters
		{
			get
			{
				return this.GetRelationships<RelationshipControlFilterDetails>( "console:relationshipControlFilters", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipControlFilterDetails>( "console:relationshipControlFilters", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Resource RelationshipDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "console:relationshipDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "console:relationshipDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public CustomEditForm RelationshipDisplayForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:relationshipDisplayForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:relationshipDisplayForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Report RelationshipDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "console:relationshipDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "console:relationshipDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Relationship RelationshipToRender
		{
			get
			{
				return this.GetLookup<Relationship>( "console:relationshipToRender", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "console:relationshipToRender", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerConsoleForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RelationshipControlOnForm Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( CalculatedRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( ChoiceQuestionOptionsEditor entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( ChoiceRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( DropDownRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( ImageRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( InlineRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( MultiChoiceRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( MultilineRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( StructureViewRelationshipControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( SubjectNavigationAccessEditor entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( SubjectRecordAccessEditor entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( SurveySectionsEditor entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( TabRelationshipRenderControl entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( TargetCampaignSurveyTakerPicker entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RelationshipControlOnForm( TargetCampaignTargetsEditor entity )
		{
			return entity.Cast<RelationshipControlOnForm>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RelationshipControlOnForm type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RelationshipControlOnForm_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:relationshipControlOnForm");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// The rendering controls allowing the relationships between the applicable contexts and relationships to be specified 
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:relationshipRenderControlType")]
	public class RelationshipRenderControlType : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RelationshipRenderControlType( )
			: base( typeof( RelationshipRenderControlType ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RelationshipRenderControlType( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RelationshipRenderControlType Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AllowEveryoneRead_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.AllowEveryoneRead_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.CanCreateType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Control_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.Control_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DesignControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.DesignControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField GenerateCode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.GenerateCode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAbstract_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAbstract_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAdvancedType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAdvancedType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsHiddenFromFormDesigner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.IsHiddenFromFormDesigner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsSealed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsSealed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MinHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.MinHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MinHeightMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.MinHeightMobile_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MinHeightTablet_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.MinHeightTablet_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MinWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.MinWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MinWidthMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.MinWidthMobile_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MinWidthTablet_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.MinWidthTablet_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField PagerSupportMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.PagerSupportMobile_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField RequiresContext_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.RequiresContext_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SupportMultiTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.SupportMultiTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SystemTenantOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.SystemTenantOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField TypeScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeScriptName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ViewControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.ViewControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity AuditLogEntryTypeMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.AuditLogEntryTypeMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Context_Field
		{
			get
			{
				return EDC.ReadiNow.Model.RenderControlType.Context_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ControlAccessBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.ControlAccessBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultDisplayReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultEditForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultEditForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultPickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultPickerReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DefinitionUsedByReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefinitionUsedByReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldGroups_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldGroups_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldOverridesForType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldOverridesForType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Fields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Fields_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FormsToEditType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FormsToEditType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Inherits_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Inherits_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstanceFlags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstanceFlags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstancesInheritByDefault_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesInheritByDefault_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InstancesOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDeploy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDeploy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterPublish_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterPublish_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeleteFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeleteFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeployFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeployFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnPublishFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnPublishFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnSaveFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnSaveFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Relationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Relationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReportTemplatesApplyToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReportTemplatesApplyToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ResourceKeys_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ResourceKeys_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReverseRelationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReverseRelationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TriggerForWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TriggerForWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TypeApiMappings_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeApiMappings_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIcon_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIcon_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIncludedForNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIncludedForNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeSuppressedForNewAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeSuppressedForNewAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity UsedByResourceReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.UsedByResourceReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RelationshipRenderControlType.Alias_Field, RelationshipRenderControlType.AllowEveryoneRead_Field, RelationshipRenderControlType.CanCreateType_Field, RelationshipRenderControlType.CanDelete_Field, RelationshipRenderControlType.CanModify_Field, RelationshipRenderControlType.ClassName_Field, RelationshipRenderControlType.ClassType_Field, RelationshipRenderControlType.Control_Field, RelationshipRenderControlType.CreatedDate_Field, RelationshipRenderControlType.Description_Field, RelationshipRenderControlType.DesignControl_Field, RelationshipRenderControlType.GenerateCode_Field, RelationshipRenderControlType.IsAbstract_Field, RelationshipRenderControlType.IsAdvancedType_Field, RelationshipRenderControlType.IsHiddenFromFormDesigner_Field, RelationshipRenderControlType.IsMetadata_Field, RelationshipRenderControlType.IsSealed_Field, RelationshipRenderControlType.MinHeight_Field, RelationshipRenderControlType.MinHeightMobile_Field, RelationshipRenderControlType.MinHeightTablet_Field, RelationshipRenderControlType.MinWidth_Field, RelationshipRenderControlType.MinWidthMobile_Field, RelationshipRenderControlType.MinWidthTablet_Field, RelationshipRenderControlType.ModifiedDate_Field, RelationshipRenderControlType.Name_Field, RelationshipRenderControlType.PagerSupportMobile_Field, RelationshipRenderControlType.RequiresContext_Field, RelationshipRenderControlType.SupportMultiTypes_Field, RelationshipRenderControlType.SystemTenantOnly_Field, RelationshipRenderControlType.TypeScriptName_Field, RelationshipRenderControlType.ViewControl_Field, RelationshipRenderControlType.AuditLogEntryTypeMetadata_Field, RelationshipRenderControlType.Context_Field, RelationshipRenderControlType.ControlAccessBy_Field, RelationshipRenderControlType.CreatedBy_Field, RelationshipRenderControlType.DefaultDisplayReport_Field, RelationshipRenderControlType.DefaultEditForm_Field, RelationshipRenderControlType.DefaultPickerReport_Field, RelationshipRenderControlType.DefaultTabletForm_Field, RelationshipRenderControlType.DefinitionUsedByReport_Field, RelationshipRenderControlType.DerivedTypes_Field, RelationshipRenderControlType.FieldGroups_Field, RelationshipRenderControlType.FieldOverridesForType_Field, RelationshipRenderControlType.Fields_Field, RelationshipRenderControlType.Flags_Field, RelationshipRenderControlType.FormsToEditType_Field, RelationshipRenderControlType.IndirectInSolution_Field, RelationshipRenderControlType.Inherits_Field, RelationshipRenderControlType.InSolution_Field, RelationshipRenderControlType.InstanceFlags_Field, RelationshipRenderControlType.InstancesInheritByDefault_Field, RelationshipRenderControlType.InstancesOfType_Field, RelationshipRenderControlType.InStructureLevel_Field, RelationshipRenderControlType.IsOfType_Field, RelationshipRenderControlType.IsRootForStructureView_Field, RelationshipRenderControlType.LastModifiedBy_Field, RelationshipRenderControlType.OnAfterDelete_Field, RelationshipRenderControlType.OnAfterDeploy_Field, RelationshipRenderControlType.OnAfterPublish_Field, RelationshipRenderControlType.OnAfterSave_Field, RelationshipRenderControlType.OnAfterUpgrade_Field, RelationshipRenderControlType.OnBeforeDelete_Field, RelationshipRenderControlType.OnBeforeSave_Field, RelationshipRenderControlType.OnBeforeUpgrade_Field, RelationshipRenderControlType.OnDeleteFailed_Field, RelationshipRenderControlType.OnDeployFailed_Field, RelationshipRenderControlType.OnPublishFailed_Field, RelationshipRenderControlType.OnSaveFailed_Field, RelationshipRenderControlType.Relationships_Field, RelationshipRenderControlType.ReportTemplatesApplyToType_Field, RelationshipRenderControlType.ResourceConsoleBehavior_Field, RelationshipRenderControlType.ResourceHasResourceKeyDataHashes_Field, RelationshipRenderControlType.ResourceInFolder_Field, RelationshipRenderControlType.ResourceKeys_Field, RelationshipRenderControlType.ReverseRelationships_Field, RelationshipRenderControlType.SecurityOwner_Field, RelationshipRenderControlType.SelectionBehavior_Field, RelationshipRenderControlType.ShortcutInFolder_Field, RelationshipRenderControlType.TriggerForWorkflow_Field, RelationshipRenderControlType.TypeApiMappings_Field, RelationshipRenderControlType.TypeConsoleBehavior_Field, RelationshipRenderControlType.TypeIcon_Field, RelationshipRenderControlType.TypeIncludedForNewButton_Field, RelationshipRenderControlType.TypeSuppressedForNewAction_Field, RelationshipRenderControlType.UsedByResourceReportNode_Field };
			}
		}

		#endregion RelationshipRenderControlType Public Fields

		#region RelationshipRenderControlType Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AllowEveryoneRead
		{
			get
			{
				return ( bool? ) this.GetField( "core:allowEveryoneRead" );
			}
			set
			{
				this.SetField( "core:allowEveryoneRead", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateType
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateType" );
			}
			set
			{
				this.SetField( "core:canCreateType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassName
		{
			get
			{
				return ( string ) this.GetField( "core:className" );
			}
			set
			{
				this.SetField( "core:className", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassType
		{
			get
			{
				return ( string ) this.GetField( "core:classType" );
			}
			set
			{
				this.SetField( "core:classType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Control
		{
			get
			{
				return ( string ) this.GetField( "console:control" );
			}
			set
			{
				this.SetField( "console:control", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DesignControl
		{
			get
			{
				return ( string ) this.GetField( "console:designControl" );
			}
			set
			{
				this.SetField( "console:designControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? GenerateCode
		{
			get
			{
				return ( bool? ) this.GetField( "core:generateCode" );
			}
			set
			{
				this.SetField( "core:generateCode", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAbstract
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAbstract" );
			}
			set
			{
				this.SetField( "core:isAbstract", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAdvancedType
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAdvancedType" );
			}
			set
			{
				this.SetField( "core:isAdvancedType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsHiddenFromFormDesigner
		{
			get
			{
				return ( bool? ) this.GetField( "console:isHiddenFromFormDesigner" );
			}
			set
			{
				this.SetField( "console:isHiddenFromFormDesigner", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsMetadata
		{
			get
			{
				return ( bool? ) this.GetField( "core:isMetadata" );
			}
			set
			{
				this.SetField( "core:isMetadata", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsSealed
		{
			get
			{
				return ( bool? ) this.GetField( "core:isSealed" );
			}
			set
			{
				this.SetField( "core:isSealed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MinHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:minHeight" );
			}
			set
			{
				this.SetField( "console:minHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MinHeightMobile
		{
			get
			{
				return ( int? ) this.GetField( "console:minHeightMobile" );
			}
			set
			{
				this.SetField( "console:minHeightMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MinHeightTablet
		{
			get
			{
				return ( int? ) this.GetField( "console:minHeightTablet" );
			}
			set
			{
				this.SetField( "console:minHeightTablet", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MinWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:minWidth" );
			}
			set
			{
				this.SetField( "console:minWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MinWidthMobile
		{
			get
			{
				return ( int? ) this.GetField( "console:minWidthMobile" );
			}
			set
			{
				this.SetField( "console:minWidthMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MinWidthTablet
		{
			get
			{
				return ( int? ) this.GetField( "console:minWidthTablet" );
			}
			set
			{
				this.SetField( "console:minWidthTablet", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? PagerSupportMobile
		{
			get
			{
				return ( bool? ) this.GetField( "console:pagerSupportMobile" );
			}
			set
			{
				this.SetField( "console:pagerSupportMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? RequiresContext
		{
			get
			{
				return ( bool? ) this.GetField( "console:requiresContext" );
			}
			set
			{
				this.SetField( "console:requiresContext", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SupportMultiTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:supportMultiTypes" );
			}
			set
			{
				this.SetField( "core:supportMultiTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SystemTenantOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:systemTenantOnly" );
			}
			set
			{
				this.SetField( "core:systemTenantOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string TypeScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:typeScriptName" );
			}
			set
			{
				this.SetField( "core:typeScriptName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ViewControl
		{
			get
			{
				return ( string ) this.GetField( "console:viewControl" );
			}
			set
			{
				this.SetField( "console:viewControl", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AuditLogEntryMetadata AuditLogEntryTypeMetadata
		{
			get
			{
				return this.GetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UiContext Context
		{
			get
			{
				return this.GetLookup<UiContext>( "console:context", Direction.Forward );
			}
			set
			{
				this.SetLookup<UiContext>( "console:context", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<AccessRule> ControlAccessBy
		{
			get
			{
				return this.GetRelationships<AccessRule>( "core:controlAccessBy", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<AccessRule>( "core:controlAccessBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Report DefaultDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "core:defaultDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "core:defaultDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultEditForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultEditForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultEditForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ResourcePicker DefaultPickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "core:defaultPickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "core:defaultPickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourcePicker> DefinitionUsedByReport
		{
			get
			{
				return this.GetRelationships<ResourcePicker>( "core:definitionUsedByReport", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourcePicker>( "core:definitionUsedByReport", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> DerivedTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:derivedTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:derivedTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<FieldGroup> FieldGroups
		{
			get
			{
				return this.GetRelationships<FieldGroup>( "core:fieldGroups", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<FieldGroup>( "core:fieldGroups", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> FieldOverridesForType
		{
			get
			{
				return this.GetRelationships<Field>( "core:fieldOverridesForType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fieldOverridesForType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> Fields
		{
			get
			{
				return this.GetRelationships<Field>( "core:fields", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fields", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<CustomEditForm> FormsToEditType
		{
			get
			{
				return this.GetRelationships<CustomEditForm>( "console:formsToEditType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<CustomEditForm>( "console:formsToEditType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> Inherits
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:inherits", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:inherits", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> InstanceFlags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:instanceFlags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:instanceFlags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? InstanceFlags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:instanceFlags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:instanceFlags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:instanceFlags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType InstancesInheritByDefault
		{
			get
			{
				return this.GetLookup<EntityType>( "core:instancesInheritByDefault", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:instancesInheritByDefault", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Resource> InstancesOfType
		{
			get
			{
				return this.GetRelationships<Resource>( "core:instancesOfType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:instancesOfType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDeploy
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDeploy", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDeploy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterPublish
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterPublish", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterPublish", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeleteFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeleteFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeleteFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeployFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeployFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeployFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnPublishFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onPublishFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onPublishFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnSaveFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onSaveFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onSaveFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> Relationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:relationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:relationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ReportTemplate> ReportTemplatesApplyToType
		{
			get
			{
				return this.GetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKey> ResourceKeys
		{
			get
			{
				return this.GetRelationships<ResourceKey>( "core:resourceKeys", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKey>( "core:resourceKeys", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> ReverseRelationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:reverseRelationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:reverseRelationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceTriggerFilterDef> TriggerForWorkflow
		{
			get
			{
				return this.GetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ApiResourceMapping> TypeApiMappings
		{
			get
			{
				return this.GetRelationships<ApiResourceMapping>( "core:typeApiMappings", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiResourceMapping>( "core:typeApiMappings", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior TypeConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IconFileType TypeIcon
		{
			get
			{
				return this.GetLookup<IconFileType>( "console:typeIcon", Direction.Forward );
			}
			set
			{
				this.SetLookup<IconFileType>( "console:typeIcon", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeIncludedForNewButton
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeIncludedForNewButton", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeIncludedForNewButton", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeSuppressedForNewAction
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceReportNode> UsedByResourceReportNode
		{
			get
			{
				return this.GetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", value, Direction.Reverse );
			}
		}



		#endregion RelationshipRenderControlType Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RelationshipRenderControlType type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RelationshipRenderControlType_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:relationshipRenderControlType");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A node in the report tree that follows a relationship.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:relationshipReportNode")]
	public class RelationshipReportNode : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RelationshipReportNode( )
			: base( typeof( RelationshipReportNode ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RelationshipReportNode( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RelationshipReportNode Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CheckExistenceOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:checkExistenceOnly" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ConstrainParent_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:constrainParent" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField FollowInReverse_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:followInReverse" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField FollowRecursive_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:followRecursive" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IncludeSelfInRecursive_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:includeSelfInRecursive" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ExactType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceReportNode.ExactType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TargetMustExist_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceReportNode.TargetMustExist_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TargetNeedNotExist_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceReportNode.TargetNeedNotExist_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity FollowRelationship_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:followRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity NodeUsedByExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.NodeUsedByExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity NodeUsedByStructureViewExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.NodeUsedByStructureViewExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ParentAggregatedNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.ParentAggregatedNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ParentReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.ParentReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelatedReportNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.RelatedReportNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceReportNodeType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceReportNode.ResourceReportNodeType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RelationshipReportNode.CheckExistenceOnly_Field, RelationshipReportNode.ConstrainParent_Field, RelationshipReportNode.FollowInReverse_Field, RelationshipReportNode.FollowRecursive_Field, RelationshipReportNode.IncludeSelfInRecursive_Field, RelationshipReportNode.Alias_Field, RelationshipReportNode.CanDelete_Field, RelationshipReportNode.CanModify_Field, RelationshipReportNode.CreatedDate_Field, RelationshipReportNode.Description_Field, RelationshipReportNode.ExactType_Field, RelationshipReportNode.ModifiedDate_Field, RelationshipReportNode.Name_Field, RelationshipReportNode.TargetMustExist_Field, RelationshipReportNode.TargetNeedNotExist_Field, RelationshipReportNode.CreatedBy_Field, RelationshipReportNode.Flags_Field, RelationshipReportNode.FollowRelationship_Field, RelationshipReportNode.IndirectInSolution_Field, RelationshipReportNode.InSolution_Field, RelationshipReportNode.InStructureLevel_Field, RelationshipReportNode.IsOfType_Field, RelationshipReportNode.IsRootForStructureView_Field, RelationshipReportNode.LastModifiedBy_Field, RelationshipReportNode.NodeUsedByExpression_Field, RelationshipReportNode.NodeUsedByStructureViewExpression_Field, RelationshipReportNode.ParentAggregatedNode_Field, RelationshipReportNode.ParentReportNode_Field, RelationshipReportNode.RelatedReportNodes_Field, RelationshipReportNode.ResourceConsoleBehavior_Field, RelationshipReportNode.ResourceHasResourceKeyDataHashes_Field, RelationshipReportNode.ResourceInFolder_Field, RelationshipReportNode.ResourceReportNodeType_Field, RelationshipReportNode.SecurityOwner_Field, RelationshipReportNode.SelectionBehavior_Field, RelationshipReportNode.ShortcutInFolder_Field };
			}
		}

		#endregion RelationshipReportNode Public Fields

		#region RelationshipReportNode Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CheckExistenceOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:checkExistenceOnly" );
			}
			set
			{
				this.SetField( "core:checkExistenceOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ConstrainParent
		{
			get
			{
				return ( bool? ) this.GetField( "core:constrainParent" );
			}
			set
			{
				this.SetField( "core:constrainParent", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? FollowInReverse
		{
			get
			{
				return ( bool? ) this.GetField( "core:followInReverse" );
			}
			set
			{
				this.SetField( "core:followInReverse", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? FollowRecursive
		{
			get
			{
				return ( bool? ) this.GetField( "core:followRecursive" );
			}
			set
			{
				this.SetField( "core:followRecursive", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IncludeSelfInRecursive
		{
			get
			{
				return ( bool? ) this.GetField( "core:includeSelfInRecursive" );
			}
			set
			{
				this.SetField( "core:includeSelfInRecursive", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ExactType
		{
			get
			{
				return ( bool? ) this.GetField( "core:exactType" );
			}
			set
			{
				this.SetField( "core:exactType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TargetMustExist
		{
			get
			{
				return ( bool? ) this.GetField( "core:targetMustExist" );
			}
			set
			{
				this.SetField( "core:targetMustExist", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TargetNeedNotExist
		{
			get
			{
				return ( bool? ) this.GetField( "core:targetNeedNotExist" );
			}
			set
			{
				this.SetField( "core:targetNeedNotExist", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Relationship FollowRelationship
		{
			get
			{
				return this.GetLookup<Relationship>( "core:followRelationship", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "core:followRelationship", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<NodeExpression> NodeUsedByExpression
		{
			get
			{
				return this.GetRelationships<NodeExpression>( "core:nodeUsedByExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<NodeExpression>( "core:nodeUsedByExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<StructureViewExpression> NodeUsedByStructureViewExpression
		{
			get
			{
				return this.GetRelationships<StructureViewExpression>( "core:nodeUsedByStructureViewExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureViewExpression>( "core:nodeUsedByStructureViewExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AggregateReportNode ParentAggregatedNode
		{
			get
			{
				return this.GetLookup<AggregateReportNode>( "core:parentAggregatedNode", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AggregateReportNode>( "core:parentAggregatedNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public ReportNode ParentReportNode
		{
			get
			{
				return this.GetLookup<ReportNode>( "core:parentReportNode", Direction.Reverse );
			}
			set
			{
				this.SetLookup<ReportNode>( "core:parentReportNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ReportNode> RelatedReportNodes
		{
			get
			{
				return this.GetRelationships<ReportNode>( "core:relatedReportNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportNode>( "core:relatedReportNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType ResourceReportNodeType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:resourceReportNodeType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:resourceReportNodeType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RelationshipReportNode Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RelationshipReportNode type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RelationshipReportNode_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:relationshipReportNode");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="RelTypeEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:relTypeEnum")]
	public class RelTypeEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RelTypeEnum( )
			: base( typeof( RelTypeEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RelTypeEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RelTypeEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RelTypeEnum.Alias_Field, RelTypeEnum.CanDelete_Field, RelTypeEnum.CanModify_Field, RelTypeEnum.CanModifyProtectedResource_Field, RelTypeEnum.CreatedDate_Field, RelTypeEnum.Description_Field, RelTypeEnum.EnumOrder_Field, RelTypeEnum.ModifiedDate_Field, RelTypeEnum.Name_Field, RelTypeEnum.CreatedBy_Field, RelTypeEnum.EnumOwner_Field, RelTypeEnum.Flags_Field, RelTypeEnum.IndirectInSolution_Field, RelTypeEnum.InSolution_Field, RelTypeEnum.InStructureLevel_Field, RelTypeEnum.IsOfType_Field, RelTypeEnum.IsRootForStructureView_Field, RelTypeEnum.LastModifiedBy_Field, RelTypeEnum.ResourceConsoleBehavior_Field, RelTypeEnum.ResourceHasResourceKeyDataHashes_Field, RelTypeEnum.ResourceInFolder_Field, RelTypeEnum.SecurityOwner_Field, RelTypeEnum.SelectionBehavior_Field, RelTypeEnum.ShortcutInFolder_Field };
			}
		}

		#endregion RelTypeEnum Public Fields

		#region RelTypeEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RelTypeEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RelTypeEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RelTypeEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:relTypeEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a RelTypeEnum_Enumeration value.
		/// </summary>
		public static RelTypeEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:relLookup": return RelTypeEnum_Enumeration.RelLookup;
				case "core:relDependantOf": return RelTypeEnum_Enumeration.RelDependantOf;
				case "core:relComponentOf": return RelTypeEnum_Enumeration.RelComponentOf;
				case "core:relChoiceField": return RelTypeEnum_Enumeration.RelChoiceField;
				case "core:relSingleLookup": return RelTypeEnum_Enumeration.RelSingleLookup;
				case "core:relSingleComponentOf": return RelTypeEnum_Enumeration.RelSingleComponentOf;
				case "core:relSingleComponent": return RelTypeEnum_Enumeration.RelSingleComponent;
				case "core:relExclusiveCollection": return RelTypeEnum_Enumeration.RelExclusiveCollection;
				case "core:relDependants": return RelTypeEnum_Enumeration.RelDependants;
				case "core:relComponents": return RelTypeEnum_Enumeration.RelComponents;
				case "core:relManyToMany": return RelTypeEnum_Enumeration.RelManyToMany;
				case "core:relMultiChoiceField": return RelTypeEnum_Enumeration.RelMultiChoiceField;
				case "core:relSharedDependantsOf": return RelTypeEnum_Enumeration.RelSharedDependantsOf;
				case "core:relSharedDependants": return RelTypeEnum_Enumeration.RelSharedDependants;
				case "core:relManyToManyFwd": return RelTypeEnum_Enumeration.RelManyToManyFwd;
				case "core:relManyToManyRev": return RelTypeEnum_Enumeration.RelManyToManyRev;
				case "core:relCustom": return RelTypeEnum_Enumeration.RelCustom;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a RelTypeEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(RelTypeEnum_Enumeration value)
		{
			switch (value)
			{
				case RelTypeEnum_Enumeration.RelLookup: return "core:relLookup";
				case RelTypeEnum_Enumeration.RelDependantOf: return "core:relDependantOf";
				case RelTypeEnum_Enumeration.RelComponentOf: return "core:relComponentOf";
				case RelTypeEnum_Enumeration.RelChoiceField: return "core:relChoiceField";
				case RelTypeEnum_Enumeration.RelSingleLookup: return "core:relSingleLookup";
				case RelTypeEnum_Enumeration.RelSingleComponentOf: return "core:relSingleComponentOf";
				case RelTypeEnum_Enumeration.RelSingleComponent: return "core:relSingleComponent";
				case RelTypeEnum_Enumeration.RelExclusiveCollection: return "core:relExclusiveCollection";
				case RelTypeEnum_Enumeration.RelDependants: return "core:relDependants";
				case RelTypeEnum_Enumeration.RelComponents: return "core:relComponents";
				case RelTypeEnum_Enumeration.RelManyToMany: return "core:relManyToMany";
				case RelTypeEnum_Enumeration.RelMultiChoiceField: return "core:relMultiChoiceField";
				case RelTypeEnum_Enumeration.RelSharedDependantsOf: return "core:relSharedDependantsOf";
				case RelTypeEnum_Enumeration.RelSharedDependants: return "core:relSharedDependants";
				case RelTypeEnum_Enumeration.RelManyToManyFwd: return "core:relManyToManyFwd";
				case RelTypeEnum_Enumeration.RelManyToManyRev: return "core:relManyToManyRev";
				case RelTypeEnum_Enumeration.RelCustom: return "core:relCustom";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<RelTypeEnum_Enumeration> GetEnumValues( RelTypeEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( RelTypeEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( RelTypeEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// RelTypeEnum enumeration type.
	/// </summary>
	public enum RelTypeEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		RelLookup = 1,

		/// <summary>
		/// 
		/// </summary>
		RelDependantOf = 2,

		/// <summary>
		/// 
		/// </summary>
		RelComponentOf = 4,

		/// <summary>
		/// 
		/// </summary>
		RelChoiceField = 8,

		/// <summary>
		/// 
		/// </summary>
		RelSingleLookup = 16,

		/// <summary>
		/// 
		/// </summary>
		RelSingleComponentOf = 32,

		/// <summary>
		/// 
		/// </summary>
		RelSingleComponent = 64,

		/// <summary>
		/// 
		/// </summary>
		RelExclusiveCollection = 128,

		/// <summary>
		/// 
		/// </summary>
		RelDependants = 256,

		/// <summary>
		/// 
		/// </summary>
		RelComponents = 512,

		/// <summary>
		/// 
		/// </summary>
		RelManyToMany = 1024,

		/// <summary>
		/// 
		/// </summary>
		RelMultiChoiceField = 2048,

		/// <summary>
		/// 
		/// </summary>
		RelSharedDependantsOf = 4096,

		/// <summary>
		/// 
		/// </summary>
		RelSharedDependants = 8192,

		/// <summary>
		/// 
		/// </summary>
		RelManyToManyFwd = 16384,

		/// <summary>
		/// 
		/// </summary>
		RelManyToManyRev = 32768,

		/// <summary>
		/// 
		/// </summary>
		RelCustom = 65536,

	}

	/// <summary>
	/// Rename user account audit log entry
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:renameUserAccountAuditLogEntry")]
	public class RenameUserAccountAuditLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RenameUserAccountAuditLogEntry( )
			: base( typeof( RenameUserAccountAuditLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RenameUserAccountAuditLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RenameUserAccountAuditLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField NewUserName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:newUserName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField OldUserName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:oldUserName" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField AuditLogEntryCreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryCreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryMessage_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AuditLogEntrySuccess_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySuccess_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryUser_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AuditLogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RenameUserAccountAuditLogEntry.NewUserName_Field, RenameUserAccountAuditLogEntry.OldUserName_Field, RenameUserAccountAuditLogEntry.Alias_Field, RenameUserAccountAuditLogEntry.AuditLogEntryCreatedDate_Field, RenameUserAccountAuditLogEntry.AuditLogEntryMessage_Field, RenameUserAccountAuditLogEntry.AuditLogEntrySuccess_Field, RenameUserAccountAuditLogEntry.AuditLogEntryUser_Field, RenameUserAccountAuditLogEntry.CanDelete_Field, RenameUserAccountAuditLogEntry.CanModify_Field, RenameUserAccountAuditLogEntry.CreatedDate_Field, RenameUserAccountAuditLogEntry.Description_Field, RenameUserAccountAuditLogEntry.ModifiedDate_Field, RenameUserAccountAuditLogEntry.Name_Field, RenameUserAccountAuditLogEntry.AuditLogEntrySeverity_Field, RenameUserAccountAuditLogEntry.CreatedBy_Field, RenameUserAccountAuditLogEntry.Flags_Field, RenameUserAccountAuditLogEntry.IndirectInSolution_Field, RenameUserAccountAuditLogEntry.InSolution_Field, RenameUserAccountAuditLogEntry.InStructureLevel_Field, RenameUserAccountAuditLogEntry.IsOfType_Field, RenameUserAccountAuditLogEntry.IsRootForStructureView_Field, RenameUserAccountAuditLogEntry.LastModifiedBy_Field, RenameUserAccountAuditLogEntry.ResourceConsoleBehavior_Field, RenameUserAccountAuditLogEntry.ResourceHasResourceKeyDataHashes_Field, RenameUserAccountAuditLogEntry.ResourceInFolder_Field, RenameUserAccountAuditLogEntry.SecurityOwner_Field, RenameUserAccountAuditLogEntry.SelectionBehavior_Field, RenameUserAccountAuditLogEntry.ShortcutInFolder_Field };
			}
		}

		#endregion RenameUserAccountAuditLogEntry Public Fields

		#region RenameUserAccountAuditLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string NewUserName
		{
			get
			{
				return ( string ) this.GetField( "core:newUserName" );
			}
			set
			{
				this.SetField( "core:newUserName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string OldUserName
		{
			get
			{
				return ( string ) this.GetField( "core:oldUserName" );
			}
			set
			{
				this.SetField( "core:oldUserName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? AuditLogEntryCreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:auditLogEntryCreatedDate" );
			}
			set
			{
				this.SetField( "core:auditLogEntryCreatedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryMessage
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryMessage" );
			}
			set
			{
				this.SetField( "core:auditLogEntryMessage", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AuditLogEntrySuccess
		{
			get
			{
				return ( bool? ) this.GetField( "core:auditLogEntrySuccess" );
			}
			set
			{
				this.SetField( "core:auditLogEntrySuccess", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryUser
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryUser" );
			}
			set
			{
				this.SetField( "core:auditLogEntryUser", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public AuditLogSeverityEnum AuditLogEntrySeverity
		{
			get
			{
				return this.GetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public AuditLogSeverityEnum_Enumeration? AuditLogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<AuditLogSeverityEnum, AuditLogSeverityEnum_Enumeration>( "core:auditLogEntrySeverity", Direction.Forward, AuditLogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:auditLogEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:auditLogEntrySeverity", new EntityRelationship<AuditLogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<AuditLogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( AuditLogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RenameUserAccountAuditLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RenameUserAccountAuditLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RenameUserAccountAuditLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:renameUserAccountAuditLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Rename user role audit log entry
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:renameUserRoleAuditLogEntry")]
	public class RenameUserRoleAuditLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RenameUserRoleAuditLogEntry( )
			: base( typeof( RenameUserRoleAuditLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RenameUserRoleAuditLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RenameUserRoleAuditLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField NewRoleName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:newRoleName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField OldRoleName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:oldRoleName" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField AuditLogEntryCreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryCreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryMessage_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AuditLogEntrySuccess_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySuccess_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField AuditLogEntryUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntryUser_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AuditLogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.AuditLogEntry.AuditLogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RenameUserRoleAuditLogEntry.NewRoleName_Field, RenameUserRoleAuditLogEntry.OldRoleName_Field, RenameUserRoleAuditLogEntry.Alias_Field, RenameUserRoleAuditLogEntry.AuditLogEntryCreatedDate_Field, RenameUserRoleAuditLogEntry.AuditLogEntryMessage_Field, RenameUserRoleAuditLogEntry.AuditLogEntrySuccess_Field, RenameUserRoleAuditLogEntry.AuditLogEntryUser_Field, RenameUserRoleAuditLogEntry.CanDelete_Field, RenameUserRoleAuditLogEntry.CanModify_Field, RenameUserRoleAuditLogEntry.CreatedDate_Field, RenameUserRoleAuditLogEntry.Description_Field, RenameUserRoleAuditLogEntry.ModifiedDate_Field, RenameUserRoleAuditLogEntry.Name_Field, RenameUserRoleAuditLogEntry.AuditLogEntrySeverity_Field, RenameUserRoleAuditLogEntry.CreatedBy_Field, RenameUserRoleAuditLogEntry.Flags_Field, RenameUserRoleAuditLogEntry.IndirectInSolution_Field, RenameUserRoleAuditLogEntry.InSolution_Field, RenameUserRoleAuditLogEntry.InStructureLevel_Field, RenameUserRoleAuditLogEntry.IsOfType_Field, RenameUserRoleAuditLogEntry.IsRootForStructureView_Field, RenameUserRoleAuditLogEntry.LastModifiedBy_Field, RenameUserRoleAuditLogEntry.ResourceConsoleBehavior_Field, RenameUserRoleAuditLogEntry.ResourceHasResourceKeyDataHashes_Field, RenameUserRoleAuditLogEntry.ResourceInFolder_Field, RenameUserRoleAuditLogEntry.SecurityOwner_Field, RenameUserRoleAuditLogEntry.SelectionBehavior_Field, RenameUserRoleAuditLogEntry.ShortcutInFolder_Field };
			}
		}

		#endregion RenameUserRoleAuditLogEntry Public Fields

		#region RenameUserRoleAuditLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string NewRoleName
		{
			get
			{
				return ( string ) this.GetField( "core:newRoleName" );
			}
			set
			{
				this.SetField( "core:newRoleName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string OldRoleName
		{
			get
			{
				return ( string ) this.GetField( "core:oldRoleName" );
			}
			set
			{
				this.SetField( "core:oldRoleName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? AuditLogEntryCreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:auditLogEntryCreatedDate" );
			}
			set
			{
				this.SetField( "core:auditLogEntryCreatedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryMessage
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryMessage" );
			}
			set
			{
				this.SetField( "core:auditLogEntryMessage", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AuditLogEntrySuccess
		{
			get
			{
				return ( bool? ) this.GetField( "core:auditLogEntrySuccess" );
			}
			set
			{
				this.SetField( "core:auditLogEntrySuccess", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string AuditLogEntryUser
		{
			get
			{
				return ( string ) this.GetField( "core:auditLogEntryUser" );
			}
			set
			{
				this.SetField( "core:auditLogEntryUser", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public AuditLogSeverityEnum AuditLogEntrySeverity
		{
			get
			{
				return this.GetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<AuditLogSeverityEnum>( "core:auditLogEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public AuditLogSeverityEnum_Enumeration? AuditLogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<AuditLogSeverityEnum, AuditLogSeverityEnum_Enumeration>( "core:auditLogEntrySeverity", Direction.Forward, AuditLogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:auditLogEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:auditLogEntrySeverity", new EntityRelationship<AuditLogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<AuditLogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( AuditLogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion RenameUserRoleAuditLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RenameUserRoleAuditLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RenameUserRoleAuditLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:renameUserRoleAuditLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An abstract representation of a control that can be rendered.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:renderControlType")]
	public class RenderControlType : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RenderControlType( )
			: base( typeof( RenderControlType ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RenderControlType( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RenderControlType Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField Control_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "console:control" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField DesignControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "console:designControl" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsHiddenFromFormDesigner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:isHiddenFromFormDesigner" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MinHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:minHeight" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MinHeightMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:minHeightMobile" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MinHeightTablet_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:minHeightTablet" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MinWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:minWidth" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MinWidthMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:minWidthMobile" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField MinWidthTablet_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "console:minWidthTablet" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField PagerSupportMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:pagerSupportMobile" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RequiresContext_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:requiresContext" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ViewControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "console:viewControl" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AllowEveryoneRead_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.AllowEveryoneRead_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.CanCreateType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ClassType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ClassType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField GenerateCode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.GenerateCode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAbstract_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAbstract_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsAdvancedType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsAdvancedType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsSealed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.IsSealed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SupportMultiTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.SupportMultiTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SystemTenantOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.SystemTenantOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField TypeScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeScriptName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity AuditLogEntryTypeMetadata_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.AuditLogEntryTypeMetadata_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Context_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:context" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ControlAccessBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.SecurableEntity.ControlAccessBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultDisplayReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultDisplayReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultEditForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultEditForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultPickerReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultPickerReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefaultTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DefinitionUsedByReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DefinitionUsedByReport_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity DerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.DerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldGroups_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldGroups_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FieldOverridesForType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FieldOverridesForType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Fields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Fields_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity FormsToEditType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.FormsToEditType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Inherits_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Inherits_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstanceFlags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstanceFlags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InstancesInheritByDefault_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesInheritByDefault_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InstancesOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.InstancesOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterDeploy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterDeploy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterPublish_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterPublish_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnAfterUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnAfterUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeSave_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeSave_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnBeforeUpgrade_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnBeforeUpgrade_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeleteFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeleteFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnDeployFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnDeployFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnPublishFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnPublishFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OnSaveFailed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.OnSaveFailed_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity Relationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.Relationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReportTemplatesApplyToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReportTemplatesApplyToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ResourceKeys_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ResourceKeys_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ReverseRelationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.ReverseRelationships_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TriggerForWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TriggerForWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TypeApiMappings_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeApiMappings_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIcon_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIcon_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeIncludedForNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeIncludedForNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TypeSuppressedForNewAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.TypeSuppressedForNewAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity UsedByResourceReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityType.UsedByResourceReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RenderControlType.Control_Field, RenderControlType.DesignControl_Field, RenderControlType.IsHiddenFromFormDesigner_Field, RenderControlType.MinHeight_Field, RenderControlType.MinHeightMobile_Field, RenderControlType.MinHeightTablet_Field, RenderControlType.MinWidth_Field, RenderControlType.MinWidthMobile_Field, RenderControlType.MinWidthTablet_Field, RenderControlType.PagerSupportMobile_Field, RenderControlType.RequiresContext_Field, RenderControlType.ViewControl_Field, RenderControlType.Alias_Field, RenderControlType.AllowEveryoneRead_Field, RenderControlType.CanCreateType_Field, RenderControlType.CanDelete_Field, RenderControlType.CanModify_Field, RenderControlType.ClassName_Field, RenderControlType.ClassType_Field, RenderControlType.CreatedDate_Field, RenderControlType.Description_Field, RenderControlType.GenerateCode_Field, RenderControlType.IsAbstract_Field, RenderControlType.IsAdvancedType_Field, RenderControlType.IsMetadata_Field, RenderControlType.IsSealed_Field, RenderControlType.ModifiedDate_Field, RenderControlType.Name_Field, RenderControlType.SupportMultiTypes_Field, RenderControlType.SystemTenantOnly_Field, RenderControlType.TypeScriptName_Field, RenderControlType.AuditLogEntryTypeMetadata_Field, RenderControlType.Context_Field, RenderControlType.ControlAccessBy_Field, RenderControlType.CreatedBy_Field, RenderControlType.DefaultDisplayReport_Field, RenderControlType.DefaultEditForm_Field, RenderControlType.DefaultPickerReport_Field, RenderControlType.DefaultTabletForm_Field, RenderControlType.DefinitionUsedByReport_Field, RenderControlType.DerivedTypes_Field, RenderControlType.FieldGroups_Field, RenderControlType.FieldOverridesForType_Field, RenderControlType.Fields_Field, RenderControlType.Flags_Field, RenderControlType.FormsToEditType_Field, RenderControlType.IndirectInSolution_Field, RenderControlType.Inherits_Field, RenderControlType.InSolution_Field, RenderControlType.InstanceFlags_Field, RenderControlType.InstancesInheritByDefault_Field, RenderControlType.InstancesOfType_Field, RenderControlType.InStructureLevel_Field, RenderControlType.IsOfType_Field, RenderControlType.IsRootForStructureView_Field, RenderControlType.LastModifiedBy_Field, RenderControlType.OnAfterDelete_Field, RenderControlType.OnAfterDeploy_Field, RenderControlType.OnAfterPublish_Field, RenderControlType.OnAfterSave_Field, RenderControlType.OnAfterUpgrade_Field, RenderControlType.OnBeforeDelete_Field, RenderControlType.OnBeforeSave_Field, RenderControlType.OnBeforeUpgrade_Field, RenderControlType.OnDeleteFailed_Field, RenderControlType.OnDeployFailed_Field, RenderControlType.OnPublishFailed_Field, RenderControlType.OnSaveFailed_Field, RenderControlType.Relationships_Field, RenderControlType.ReportTemplatesApplyToType_Field, RenderControlType.ResourceConsoleBehavior_Field, RenderControlType.ResourceHasResourceKeyDataHashes_Field, RenderControlType.ResourceInFolder_Field, RenderControlType.ResourceKeys_Field, RenderControlType.ReverseRelationships_Field, RenderControlType.SecurityOwner_Field, RenderControlType.SelectionBehavior_Field, RenderControlType.ShortcutInFolder_Field, RenderControlType.TriggerForWorkflow_Field, RenderControlType.TypeApiMappings_Field, RenderControlType.TypeConsoleBehavior_Field, RenderControlType.TypeIcon_Field, RenderControlType.TypeIncludedForNewButton_Field, RenderControlType.TypeSuppressedForNewAction_Field, RenderControlType.UsedByResourceReportNode_Field };
			}
		}

		#endregion RenderControlType Public Fields

		#region RenderControlType Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string Control
		{
			get
			{
				return ( string ) this.GetField( "console:control" );
			}
			set
			{
				this.SetField( "console:control", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string DesignControl
		{
			get
			{
				return ( string ) this.GetField( "console:designControl" );
			}
			set
			{
				this.SetField( "console:designControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsHiddenFromFormDesigner
		{
			get
			{
				return ( bool? ) this.GetField( "console:isHiddenFromFormDesigner" );
			}
			set
			{
				this.SetField( "console:isHiddenFromFormDesigner", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MinHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:minHeight" );
			}
			set
			{
				this.SetField( "console:minHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MinHeightMobile
		{
			get
			{
				return ( int? ) this.GetField( "console:minHeightMobile" );
			}
			set
			{
				this.SetField( "console:minHeightMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MinHeightTablet
		{
			get
			{
				return ( int? ) this.GetField( "console:minHeightTablet" );
			}
			set
			{
				this.SetField( "console:minHeightTablet", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MinWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:minWidth" );
			}
			set
			{
				this.SetField( "console:minWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MinWidthMobile
		{
			get
			{
				return ( int? ) this.GetField( "console:minWidthMobile" );
			}
			set
			{
				this.SetField( "console:minWidthMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? MinWidthTablet
		{
			get
			{
				return ( int? ) this.GetField( "console:minWidthTablet" );
			}
			set
			{
				this.SetField( "console:minWidthTablet", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? PagerSupportMobile
		{
			get
			{
				return ( bool? ) this.GetField( "console:pagerSupportMobile" );
			}
			set
			{
				this.SetField( "console:pagerSupportMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RequiresContext
		{
			get
			{
				return ( bool? ) this.GetField( "console:requiresContext" );
			}
			set
			{
				this.SetField( "console:requiresContext", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ViewControl
		{
			get
			{
				return ( string ) this.GetField( "console:viewControl" );
			}
			set
			{
				this.SetField( "console:viewControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AllowEveryoneRead
		{
			get
			{
				return ( bool? ) this.GetField( "core:allowEveryoneRead" );
			}
			set
			{
				this.SetField( "core:allowEveryoneRead", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateType
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateType" );
			}
			set
			{
				this.SetField( "core:canCreateType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassName
		{
			get
			{
				return ( string ) this.GetField( "core:className" );
			}
			set
			{
				this.SetField( "core:className", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ClassType
		{
			get
			{
				return ( string ) this.GetField( "core:classType" );
			}
			set
			{
				this.SetField( "core:classType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? GenerateCode
		{
			get
			{
				return ( bool? ) this.GetField( "core:generateCode" );
			}
			set
			{
				this.SetField( "core:generateCode", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAbstract
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAbstract" );
			}
			set
			{
				this.SetField( "core:isAbstract", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsAdvancedType
		{
			get
			{
				return ( bool? ) this.GetField( "core:isAdvancedType" );
			}
			set
			{
				this.SetField( "core:isAdvancedType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsMetadata
		{
			get
			{
				return ( bool? ) this.GetField( "core:isMetadata" );
			}
			set
			{
				this.SetField( "core:isMetadata", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsSealed
		{
			get
			{
				return ( bool? ) this.GetField( "core:isSealed" );
			}
			set
			{
				this.SetField( "core:isSealed", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SupportMultiTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:supportMultiTypes" );
			}
			set
			{
				this.SetField( "core:supportMultiTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SystemTenantOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:systemTenantOnly" );
			}
			set
			{
				this.SetField( "core:systemTenantOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string TypeScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:typeScriptName" );
			}
			set
			{
				this.SetField( "core:typeScriptName", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AuditLogEntryMetadata AuditLogEntryTypeMetadata
		{
			get
			{
				return this.GetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AuditLogEntryMetadata>( "core:auditLogEntryTypeMetadata", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UiContext Context
		{
			get
			{
				return this.GetLookup<UiContext>( "console:context", Direction.Forward );
			}
			set
			{
				this.SetLookup<UiContext>( "console:context", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<AccessRule> ControlAccessBy
		{
			get
			{
				return this.GetRelationships<AccessRule>( "core:controlAccessBy", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<AccessRule>( "core:controlAccessBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Report DefaultDisplayReport
		{
			get
			{
				return this.GetLookup<Report>( "core:defaultDisplayReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "core:defaultDisplayReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultEditForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultEditForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultEditForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ResourcePicker DefaultPickerReport
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "core:defaultPickerReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "core:defaultPickerReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm DefaultTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "console:defaultTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "console:defaultTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourcePicker> DefinitionUsedByReport
		{
			get
			{
				return this.GetRelationships<ResourcePicker>( "core:definitionUsedByReport", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourcePicker>( "core:definitionUsedByReport", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> DerivedTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:derivedTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:derivedTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<FieldGroup> FieldGroups
		{
			get
			{
				return this.GetRelationships<FieldGroup>( "core:fieldGroups", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<FieldGroup>( "core:fieldGroups", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> FieldOverridesForType
		{
			get
			{
				return this.GetRelationships<Field>( "core:fieldOverridesForType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fieldOverridesForType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Field> Fields
		{
			get
			{
				return this.GetRelationships<Field>( "core:fields", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fields", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<CustomEditForm> FormsToEditType
		{
			get
			{
				return this.GetRelationships<CustomEditForm>( "console:formsToEditType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<CustomEditForm>( "console:formsToEditType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> Inherits
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:inherits", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:inherits", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> InstanceFlags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:instanceFlags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:instanceFlags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? InstanceFlags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:instanceFlags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:instanceFlags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:instanceFlags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType InstancesInheritByDefault
		{
			get
			{
				return this.GetLookup<EntityType>( "core:instancesInheritByDefault", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:instancesInheritByDefault", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Resource> InstancesOfType
		{
			get
			{
				return this.GetRelationships<Resource>( "core:instancesOfType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:instancesOfType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterDeploy
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterDeploy", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterDeploy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterPublish
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterPublish", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterPublish", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnAfterUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onAfterUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onAfterUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeDelete
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeDelete", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeDelete", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeSave
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeSave", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeSave", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnBeforeUpgrade
		{
			get
			{
				return this.GetRelationships<Target>( "core:onBeforeUpgrade", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onBeforeUpgrade", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeleteFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeleteFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeleteFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnDeployFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onDeployFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onDeployFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnPublishFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onPublishFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onPublishFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Target> OnSaveFailed
		{
			get
			{
				return this.GetRelationships<Target>( "core:onSaveFailed", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Target>( "core:onSaveFailed", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> Relationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:relationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:relationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ReportTemplate> ReportTemplatesApplyToType
		{
			get
			{
				return this.GetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportTemplate>( "core:reportTemplatesApplyToType", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKey> ResourceKeys
		{
			get
			{
				return this.GetRelationships<ResourceKey>( "core:resourceKeys", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKey>( "core:resourceKeys", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Relationship> ReverseRelationships
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:reverseRelationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:reverseRelationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceTriggerFilterDef> TriggerForWorkflow
		{
			get
			{
				return this.GetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceTriggerFilterDef>( "core:triggerForWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ApiResourceMapping> TypeApiMappings
		{
			get
			{
				return this.GetRelationships<ApiResourceMapping>( "core:typeApiMappings", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiResourceMapping>( "core:typeApiMappings", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior TypeConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:typeConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IconFileType TypeIcon
		{
			get
			{
				return this.GetLookup<IconFileType>( "console:typeIcon", Direction.Forward );
			}
			set
			{
				this.SetLookup<IconFileType>( "console:typeIcon", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeIncludedForNewButton
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeIncludedForNewButton", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeIncludedForNewButton", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> TypeSuppressedForNewAction
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:typeSuppressedForNewAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceReportNode> UsedByResourceReportNode
		{
			get
			{
				return this.GetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceReportNode>( "core:usedByResourceReportNode", value, Direction.Reverse );
			}
		}



		#endregion RenderControlType Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RenderControlType( CustomRenderControlType entity )
		{
			return entity.Cast<RenderControlType>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RenderControlType( FieldRenderControlType entity )
		{
			return entity.Cast<RenderControlType>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RenderControlType( RelationshipRenderControlType entity )
		{
			return entity.Cast<RenderControlType>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator RenderControlType( StructureRenderControlType entity )
		{
			return entity.Cast<RenderControlType>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RenderControlType type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RenderControlType_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:renderControlType");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An entry for a workflow map.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:replyMapEntry")]
	public class ReplyMapEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReplyMapEntry( )
			: base( typeof( ReplyMapEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReplyMapEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReplyMapEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField RmeOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:rmeOrder" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RmeWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:rmeWorkflow" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReplyMapEntry.RmeOrder_Field, ReplyMapEntry.Alias_Field, ReplyMapEntry.CanDelete_Field, ReplyMapEntry.CanModify_Field, ReplyMapEntry.CreatedDate_Field, ReplyMapEntry.Description_Field, ReplyMapEntry.ModifiedDate_Field, ReplyMapEntry.Name_Field, ReplyMapEntry.CreatedBy_Field, ReplyMapEntry.Flags_Field, ReplyMapEntry.IndirectInSolution_Field, ReplyMapEntry.InSolution_Field, ReplyMapEntry.InStructureLevel_Field, ReplyMapEntry.IsOfType_Field, ReplyMapEntry.IsRootForStructureView_Field, ReplyMapEntry.LastModifiedBy_Field, ReplyMapEntry.ResourceConsoleBehavior_Field, ReplyMapEntry.ResourceHasResourceKeyDataHashes_Field, ReplyMapEntry.ResourceInFolder_Field, ReplyMapEntry.RmeWorkflow_Field, ReplyMapEntry.SecurityOwner_Field, ReplyMapEntry.SelectionBehavior_Field, ReplyMapEntry.ShortcutInFolder_Field };
			}
		}

		#endregion ReplyMapEntry Public Fields

		#region ReplyMapEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? RmeOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:rmeOrder" );
			}
			set
			{
				this.SetField( "core:rmeOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow RmeWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:rmeWorkflow", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:rmeWorkflow", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReplyMapEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReplyMapEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReplyMapEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:replyMapEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A reply to a notification.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:replyRecord")]
	public class ReplyRecord : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReplyRecord( )
			: base( typeof( ReplyRecord ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReplyRecord( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReplyRecord Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField RrReply_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:rrReply" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField RrReplyDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:rrReplyDate" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RrToSend_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:srToReply" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReplyRecord.RrReply_Field, ReplyRecord.RrReplyDate_Field, ReplyRecord.Alias_Field, ReplyRecord.CanDelete_Field, ReplyRecord.CanModify_Field, ReplyRecord.CreatedDate_Field, ReplyRecord.Description_Field, ReplyRecord.ModifiedDate_Field, ReplyRecord.Name_Field, ReplyRecord.CreatedBy_Field, ReplyRecord.Flags_Field, ReplyRecord.IndirectInSolution_Field, ReplyRecord.InSolution_Field, ReplyRecord.InStructureLevel_Field, ReplyRecord.IsOfType_Field, ReplyRecord.IsRootForStructureView_Field, ReplyRecord.LastModifiedBy_Field, ReplyRecord.LogEntriesForObject_Field, ReplyRecord.ResourceConsoleBehavior_Field, ReplyRecord.ResourceHasResourceKeyDataHashes_Field, ReplyRecord.ResourceInFolder_Field, ReplyRecord.RrToSend_Field, ReplyRecord.SecurityOwner_Field, ReplyRecord.SelectionBehavior_Field, ReplyRecord.ShortcutInFolder_Field, ReplyRecord.TasksForRecord_Field };
			}
		}

		#endregion ReplyRecord Public Fields

		#region ReplyRecord Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string RrReply
		{
			get
			{
				return ( string ) this.GetField( "core:rrReply" );
			}
			set
			{
				this.SetField( "core:rrReply", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? RrReplyDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:rrReplyDate" );
			}
			set
			{
				this.SetField( "core:rrReplyDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public SendRecord RrToSend
		{
			get
			{
				return this.GetLookup<SendRecord>( "core:rrToSend", Direction.Reverse );
			}
			set
			{
				this.SetLookup<SendRecord>( "core:rrToSend", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion ReplyRecord Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReplyRecord type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReplyRecord_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:replyRecord");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A platform report.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:report")]
	public class Report : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public Report( )
			: base( typeof( Report ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal Report( IActivationData activationData )
			: base( activationData )
		{

		}

		#region Report Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static XmlField AnalyzerXml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<XmlField>( "core:analyzerXml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static XmlField CalculatedResultXml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<XmlField>( "core:calculatedResultXml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static XmlField ClientAggregateXml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<XmlField>( "core:clientAggregateXml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static XmlField DataViewXml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<XmlField>( "core:dataViewXml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static GuidField DefaultDataViewId_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<GuidField>( "core:defaultDataViewId" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideActionBar_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideActionBar" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideReportHeader_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideReportHeader" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsCalculatedFieldReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:isCalculatedFieldReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static XmlField QueryXml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<XmlField>( "core:queryXml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static XmlField ReportAnalyzerStructureViewXml_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<XmlField>( "core:reportAnalyzerStructureViewXml" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RollupGrandTotals_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:rollupGrandTotals" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RollupOptionLabels_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:rollupOptionLabels" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RollupRowCounts_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:rollupRowCounts" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RollupRowLabels_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:rollupRowLabels" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RollupSubTotals_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:rollupSubTotals" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanCreateDerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.CanCreateDerivedTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideAddButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideAddButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideNewButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnDesktop_Field
		{
			get
			{
				return EDC.ReadiNow.Model.VisualController.HideOnDesktop_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.VisualController.HideOnMobile_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnTablet_Field
		{
			get
			{
				return EDC.ReadiNow.Model.VisualController.HideOnTablet_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideRemoveButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.HideRemoveButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsPrivatelyOwned_Field
		{
			get
			{
				return EDC.ReadiNow.Model.PrivatelyOwnable.IsPrivatelyOwned_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity DrillDownReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:drillDownReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity HasConditions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:hasConditions" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity IsDefaultDisplayReportForTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:defaultDisplayReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity IsDefaultPickerReportForTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourcePicker.IsDefaultPickerReportForTypes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportColumns_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportColumns" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ReportForAccessRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:accessRuleReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ReportForDrillDown_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:drillDownReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportOrderBys_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportOrderBys" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportRowGroups_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportRowGroups" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportStyle_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportStyle" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportUsedByVirtualRelationship_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportUsedByVirtualRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ReportUsesDefinition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourcePicker.ReportUsesDefinition_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ResourcePickerForReportConditionParameter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourcePicker.ResourcePickerForReportConditionParameter_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerConsoleForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerConsoleForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceViewerTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceViewer.ResourceViewerTabletForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RootNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:rootNode" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SecurityReportInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:securityReportInFolder" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { Report.AnalyzerXml_Field, Report.CalculatedResultXml_Field, Report.ClientAggregateXml_Field, Report.DataViewXml_Field, Report.DefaultDataViewId_Field, Report.HideActionBar_Field, Report.HideReportHeader_Field, Report.IsCalculatedFieldReport_Field, Report.QueryXml_Field, Report.ReportAnalyzerStructureViewXml_Field, Report.RollupGrandTotals_Field, Report.RollupOptionLabels_Field, Report.RollupRowCounts_Field, Report.RollupRowLabels_Field, Report.RollupSubTotals_Field, Report.Alias_Field, Report.CanCreate_Field, Report.CanCreateDerivedTypes_Field, Report.CanDelete_Field, Report.CanModify_Field, Report.CreatedDate_Field, Report.Description_Field, Report.HideAddButton_Field, Report.HideNewButton_Field, Report.HideOnDesktop_Field, Report.HideOnMobile_Field, Report.HideOnTablet_Field, Report.HideRemoveButton_Field, Report.IsPrivatelyOwned_Field, Report.ModifiedDate_Field, Report.Name_Field, Report.CreatedBy_Field, Report.DrillDownReport_Field, Report.Flags_Field, Report.HasConditions_Field, Report.IndirectInSolution_Field, Report.InSolution_Field, Report.InStructureLevel_Field, Report.IsDefaultDisplayReportForTypes_Field, Report.IsDefaultPickerReportForTypes_Field, Report.IsOfType_Field, Report.IsRootForStructureView_Field, Report.LastModifiedBy_Field, Report.ReportColumns_Field, Report.ReportForAccessRule_Field, Report.ReportForDrillDown_Field, Report.ReportOrderBys_Field, Report.ReportRowGroups_Field, Report.ReportStyle_Field, Report.ReportUsedByVirtualRelationship_Field, Report.ReportUsesDefinition_Field, Report.ResourceConsoleBehavior_Field, Report.ResourceHasResourceKeyDataHashes_Field, Report.ResourceInFolder_Field, Report.ResourcePickerForReportConditionParameter_Field, Report.ResourceViewerConsoleForm_Field, Report.ResourceViewerTabletForm_Field, Report.RootNode_Field, Report.SecurityOwner_Field, Report.SecurityReportInFolder_Field, Report.SelectionBehavior_Field, Report.ShortcutInFolder_Field };
			}
		}

		#endregion Report Public Fields

		#region Report Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string AnalyzerXml
		{
			get
			{
				return ( string ) this.GetField( "core:analyzerXml" );
			}
			set
			{
				this.SetField( "core:analyzerXml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string CalculatedResultXml
		{
			get
			{
				return ( string ) this.GetField( "core:calculatedResultXml" );
			}
			set
			{
				this.SetField( "core:calculatedResultXml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ClientAggregateXml
		{
			get
			{
				return ( string ) this.GetField( "core:clientAggregateXml" );
			}
			set
			{
				this.SetField( "core:clientAggregateXml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string DataViewXml
		{
			get
			{
				return ( string ) this.GetField( "core:dataViewXml" );
			}
			set
			{
				this.SetField( "core:dataViewXml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public Guid? DefaultDataViewId
		{
			get
			{
				return ( Guid? ) this.GetField( "core:defaultDataViewId" );
			}
			set
			{
				this.SetField( "core:defaultDataViewId", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideActionBar
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideActionBar" );
			}
			set
			{
				this.SetField( "core:hideActionBar", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideReportHeader
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideReportHeader" );
			}
			set
			{
				this.SetField( "core:hideReportHeader", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsCalculatedFieldReport
		{
			get
			{
				return ( bool? ) this.GetField( "core:isCalculatedFieldReport" );
			}
			set
			{
				this.SetField( "core:isCalculatedFieldReport", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string QueryXml
		{
			get
			{
				return ( string ) this.GetField( "core:queryXml" );
			}
			set
			{
				this.SetField( "core:queryXml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ReportAnalyzerStructureViewXml
		{
			get
			{
				return ( string ) this.GetField( "core:reportAnalyzerStructureViewXml" );
			}
			set
			{
				this.SetField( "core:reportAnalyzerStructureViewXml", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RollupGrandTotals
		{
			get
			{
				return ( bool? ) this.GetField( "core:rollupGrandTotals" );
			}
			set
			{
				this.SetField( "core:rollupGrandTotals", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RollupOptionLabels
		{
			get
			{
				return ( bool? ) this.GetField( "core:rollupOptionLabels" );
			}
			set
			{
				this.SetField( "core:rollupOptionLabels", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RollupRowCounts
		{
			get
			{
				return ( bool? ) this.GetField( "core:rollupRowCounts" );
			}
			set
			{
				this.SetField( "core:rollupRowCounts", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RollupRowLabels
		{
			get
			{
				return ( bool? ) this.GetField( "core:rollupRowLabels" );
			}
			set
			{
				this.SetField( "core:rollupRowLabels", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RollupSubTotals
		{
			get
			{
				return ( bool? ) this.GetField( "core:rollupSubTotals" );
			}
			set
			{
				this.SetField( "core:rollupSubTotals", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreate
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreate" );
			}
			set
			{
				this.SetField( "core:canCreate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanCreateDerivedTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateDerivedTypes" );
			}
			set
			{
				this.SetField( "core:canCreateDerivedTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideAddButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideAddButton" );
			}
			set
			{
				this.SetField( "core:hideAddButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideNewButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideNewButton" );
			}
			set
			{
				this.SetField( "core:hideNewButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnDesktop
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnDesktop" );
			}
			set
			{
				this.SetField( "core:hideOnDesktop", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnMobile
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnMobile" );
			}
			set
			{
				this.SetField( "core:hideOnMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnTablet
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnTablet" );
			}
			set
			{
				this.SetField( "core:hideOnTablet", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideRemoveButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideRemoveButton" );
			}
			set
			{
				this.SetField( "core:hideRemoveButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsPrivatelyOwned
		{
			get
			{
				return ( bool? ) this.GetField( "core:isPrivatelyOwned" );
			}
			set
			{
				this.SetField( "core:isPrivatelyOwned", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Report DrillDownReport
		{
			get
			{
				return this.GetLookup<Report>( "core:drillDownReport", Direction.Forward );
			}
			set
			{
				this.SetLookup<Report>( "core:drillDownReport", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ReportCondition> HasConditions
		{
			get
			{
				return this.GetRelationships<ReportCondition>( "core:hasConditions", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportCondition>( "core:hasConditions", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsDefaultDisplayReportForTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isDefaultDisplayReportForTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isDefaultDisplayReportForTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsDefaultPickerReportForTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isDefaultPickerReportForTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isDefaultPickerReportForTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ReportColumn> ReportColumns
		{
			get
			{
				return this.GetRelationships<ReportColumn>( "core:reportColumns", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportColumn>( "core:reportColumns", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public AccessRule ReportForAccessRule
		{
			get
			{
				return this.GetLookup<AccessRule>( "core:reportForAccessRule", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AccessRule>( "core:reportForAccessRule", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Report> ReportForDrillDown
		{
			get
			{
				return this.GetRelationships<Report>( "core:reportForDrillDown", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Report>( "core:reportForDrillDown", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ReportOrderBy> ReportOrderBys
		{
			get
			{
				return this.GetRelationships<ReportOrderBy>( "core:reportOrderBys", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportOrderBy>( "core:reportOrderBys", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ReportRowGroup> ReportRowGroups
		{
			get
			{
				return this.GetRelationships<ReportRowGroup>( "core:reportRowGroups", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportRowGroup>( "core:reportRowGroups", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportStyleEnum ReportStyle
		{
			get
			{
				return this.GetLookup<ReportStyleEnum>( "core:reportStyle", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportStyleEnum>( "core:reportStyle", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ReportStyleEnum_Enumeration? ReportStyle_Enum
		{
			get
			{
				return GetEnum<ReportStyleEnum, ReportStyleEnum_Enumeration>( "core:reportStyle", Direction.Forward, ReportStyleEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:reportStyle", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:reportStyle", new EntityRelationship<ReportStyleEnum>( EDC.ReadiNow.Model.Entity.Get<ReportStyleEnum>( EntityRefHelper.ConvertAliasWithNamespace( ReportStyleEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<VirtualRelationship> ReportUsedByVirtualRelationship
		{
			get
			{
				return this.GetRelationships<VirtualRelationship>( "core:reportUsedByVirtualRelationship", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<VirtualRelationship>( "core:reportUsedByVirtualRelationship", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType ReportUsesDefinition
		{
			get
			{
				return this.GetLookup<EntityType>( "core:reportUsesDefinition", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:reportUsesDefinition", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ReportCondition> ResourcePickerForReportConditionParameter
		{
			get
			{
				return this.GetRelationships<ReportCondition>( "core:resourcePickerForReportConditionParameter", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportCondition>( "core:resourcePickerForReportConditionParameter", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerConsoleForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportNode RootNode
		{
			get
			{
				return this.GetLookup<ReportNode>( "core:rootNode", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportNode>( "core:rootNode", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Folder SecurityReportInFolder
		{
			get
			{
				return this.GetLookup<Folder>( "core:securityReportInFolder", Direction.Forward );
			}
			set
			{
				this.SetLookup<Folder>( "core:securityReportInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion Report Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the Report type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType Report_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:report");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A column in a report
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportColumn")]
	public class ReportColumn : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportColumn( )
			: base( typeof( ReportColumn ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportColumn( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportColumn Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField ColumnDisplayOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:columnDisplayOrder" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ColumnIsHidden_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:columnIsHidden" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ColumnDisplayFormat_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:columnDisplayFormat" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ColumnExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:columnExpression" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ColumnFormattingRule_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:columnFormattingRule" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ColumnForReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportColumns" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ColumnGrouping_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:groupedColumn" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ColumnHasCondition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:columnForCondition" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ColumnRollup_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:rollupColumn" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportColumn.ColumnDisplayOrder_Field, ReportColumn.ColumnIsHidden_Field, ReportColumn.Alias_Field, ReportColumn.CanDelete_Field, ReportColumn.CanModify_Field, ReportColumn.CreatedDate_Field, ReportColumn.Description_Field, ReportColumn.ModifiedDate_Field, ReportColumn.Name_Field, ReportColumn.ColumnDisplayFormat_Field, ReportColumn.ColumnExpression_Field, ReportColumn.ColumnFormattingRule_Field, ReportColumn.ColumnForReport_Field, ReportColumn.ColumnGrouping_Field, ReportColumn.ColumnHasCondition_Field, ReportColumn.ColumnRollup_Field, ReportColumn.CreatedBy_Field, ReportColumn.Flags_Field, ReportColumn.IndirectInSolution_Field, ReportColumn.InSolution_Field, ReportColumn.InStructureLevel_Field, ReportColumn.IsOfType_Field, ReportColumn.IsRootForStructureView_Field, ReportColumn.LastModifiedBy_Field, ReportColumn.ResourceConsoleBehavior_Field, ReportColumn.ResourceHasResourceKeyDataHashes_Field, ReportColumn.ResourceInFolder_Field, ReportColumn.SecurityOwner_Field, ReportColumn.SelectionBehavior_Field, ReportColumn.ShortcutInFolder_Field };
			}
		}

		#endregion ReportColumn Public Fields

		#region ReportColumn Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? ColumnDisplayOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:columnDisplayOrder" );
			}
			set
			{
				this.SetField( "core:columnDisplayOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ColumnIsHidden
		{
			get
			{
				return ( bool? ) this.GetField( "core:columnIsHidden" );
			}
			set
			{
				this.SetField( "core:columnIsHidden", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public DisplayFormat ColumnDisplayFormat
		{
			get
			{
				return this.GetLookup<DisplayFormat>( "core:columnDisplayFormat", Direction.Forward );
			}
			set
			{
				this.SetLookup<DisplayFormat>( "core:columnDisplayFormat", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportExpression ColumnExpression
		{
			get
			{
				return this.GetLookup<ReportExpression>( "core:columnExpression", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportExpression>( "core:columnExpression", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public FormattingRule ColumnFormattingRule
		{
			get
			{
				return this.GetLookup<FormattingRule>( "core:columnFormattingRule", Direction.Forward );
			}
			set
			{
				this.SetLookup<FormattingRule>( "core:columnFormattingRule", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Report ColumnForReport
		{
			get
			{
				return this.GetLookup<Report>( "core:columnForReport", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Report>( "core:columnForReport", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ReportRowGroup> ColumnGrouping
		{
			get
			{
				return this.GetRelationships<ReportRowGroup>( "core:columnGrouping", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportRowGroup>( "core:columnGrouping", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ReportCondition> ColumnHasCondition
		{
			get
			{
				return this.GetRelationships<ReportCondition>( "core:columnHasCondition", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportCondition>( "core:columnHasCondition", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ReportRollup> ColumnRollup
		{
			get
			{
				return this.GetRelationships<ReportRollup>( "core:columnRollup", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportRollup>( "core:columnRollup", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportColumn Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportColumn type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportColumn_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportColumn");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Base type for every possible component of a report. Allows 'create' rules to be assigned to all of the parts of a report.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportComponent")]
	public class ReportComponent : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportComponent( )
			: base( typeof( ReportComponent ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportComponent( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportComponent Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportComponent.Alias_Field, ReportComponent.CanDelete_Field, ReportComponent.CanModify_Field, ReportComponent.CreatedDate_Field, ReportComponent.Description_Field, ReportComponent.ModifiedDate_Field, ReportComponent.Name_Field, ReportComponent.CreatedBy_Field, ReportComponent.Flags_Field, ReportComponent.IndirectInSolution_Field, ReportComponent.InSolution_Field, ReportComponent.InStructureLevel_Field, ReportComponent.IsOfType_Field, ReportComponent.IsRootForStructureView_Field, ReportComponent.LastModifiedBy_Field, ReportComponent.ResourceConsoleBehavior_Field, ReportComponent.ResourceHasResourceKeyDataHashes_Field, ReportComponent.ResourceInFolder_Field, ReportComponent.SecurityOwner_Field, ReportComponent.SelectionBehavior_Field, ReportComponent.ShortcutInFolder_Field };
			}
		}

		#endregion ReportComponent Public Fields

		#region ReportComponent Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportComponent Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( AggregateExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( AggregateReportNode entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( BarFormattingRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ColorFormattingRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ColorRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ColumnReferenceExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ConditionBasedRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( DerivedTypeReportNode entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( DisplayFormat entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( FieldExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( FormattingRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( IconFormattingRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( IconRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( IdExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ImageFormattingRule entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( NodeExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( RelationshipReportNode entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( Report entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportColumn entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportCondition entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportNode entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportOrderBy entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportRollup entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ReportRowGroup entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ResourceExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ResourceReportNode entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( ScriptExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportComponent( StructureViewExpression entity )
		{
			return entity.Cast<ReportComponent>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportComponent type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportComponent_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportComponent");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A filter/condition rule in a report.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportCondition")]
	public class ReportCondition : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportCondition( )
			: base( typeof( ReportCondition ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportCondition( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportCondition Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField ConditionDisplayOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:conditionDisplayOrder" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ConditionIsHidden_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:conditionIsHidden" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ConditionIsLocked_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:conditionIsLocked" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ColumnForCondition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:columnForCondition" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ConditionExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:conditionExpression" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ConditionParameter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:conditionParameter" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ConditionParameterPicker_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:conditionParameterPicker" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Operator_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:operator" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportCondition.ConditionDisplayOrder_Field, ReportCondition.ConditionIsHidden_Field, ReportCondition.ConditionIsLocked_Field, ReportCondition.Alias_Field, ReportCondition.CanDelete_Field, ReportCondition.CanModify_Field, ReportCondition.CreatedDate_Field, ReportCondition.Description_Field, ReportCondition.ModifiedDate_Field, ReportCondition.Name_Field, ReportCondition.ColumnForCondition_Field, ReportCondition.ConditionExpression_Field, ReportCondition.ConditionParameter_Field, ReportCondition.ConditionParameterPicker_Field, ReportCondition.CreatedBy_Field, ReportCondition.Flags_Field, ReportCondition.IndirectInSolution_Field, ReportCondition.InSolution_Field, ReportCondition.InStructureLevel_Field, ReportCondition.IsOfType_Field, ReportCondition.IsRootForStructureView_Field, ReportCondition.LastModifiedBy_Field, ReportCondition.Operator_Field, ReportCondition.ResourceConsoleBehavior_Field, ReportCondition.ResourceHasResourceKeyDataHashes_Field, ReportCondition.ResourceInFolder_Field, ReportCondition.SecurityOwner_Field, ReportCondition.SelectionBehavior_Field, ReportCondition.ShortcutInFolder_Field };
			}
		}

		#endregion ReportCondition Public Fields

		#region ReportCondition Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? ConditionDisplayOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:conditionDisplayOrder" );
			}
			set
			{
				this.SetField( "core:conditionDisplayOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ConditionIsHidden
		{
			get
			{
				return ( bool? ) this.GetField( "core:conditionIsHidden" );
			}
			set
			{
				this.SetField( "core:conditionIsHidden", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ConditionIsLocked
		{
			get
			{
				return ( bool? ) this.GetField( "core:conditionIsLocked" );
			}
			set
			{
				this.SetField( "core:conditionIsLocked", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportColumn ColumnForCondition
		{
			get
			{
				return this.GetLookup<ReportColumn>( "core:columnForCondition", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportColumn>( "core:columnForCondition", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportExpression ConditionExpression
		{
			get
			{
				return this.GetLookup<ReportExpression>( "core:conditionExpression", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportExpression>( "core:conditionExpression", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Parameter ConditionParameter
		{
			get
			{
				return this.GetLookup<Parameter>( "core:conditionParameter", Direction.Forward );
			}
			set
			{
				this.SetLookup<Parameter>( "core:conditionParameter", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ResourcePicker ConditionParameterPicker
		{
			get
			{
				return this.GetLookup<ResourcePicker>( "core:conditionParameterPicker", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourcePicker>( "core:conditionParameterPicker", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public OperatorEnum Operator
		{
			get
			{
				return this.GetLookup<OperatorEnum>( "core:operator", Direction.Forward );
			}
			set
			{
				this.SetLookup<OperatorEnum>( "core:operator", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public OperatorEnum_Enumeration? Operator_Enum
		{
			get
			{
				return GetEnum<OperatorEnum, OperatorEnum_Enumeration>( "core:operator", Direction.Forward, OperatorEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:operator", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:operator", new EntityRelationship<OperatorEnum>( EDC.ReadiNow.Model.Entity.Get<OperatorEnum>( EntityRefHelper.ConvertAliasWithNamespace( OperatorEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportCondition Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportCondition type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportCondition_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportCondition");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An field, calculation or other result in a report.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportExpression")]
	public class ReportExpression : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportExpression( )
			: base( typeof( ReportExpression ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportExpression( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportExpression Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ExpressionForColumn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:columnExpression" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ParentGroupedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:groupedBy" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportExpressionResultType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportExpressionResultType" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportExpression.Alias_Field, ReportExpression.CanDelete_Field, ReportExpression.CanModify_Field, ReportExpression.CreatedDate_Field, ReportExpression.Description_Field, ReportExpression.ModifiedDate_Field, ReportExpression.Name_Field, ReportExpression.CreatedBy_Field, ReportExpression.ExpressionForColumn_Field, ReportExpression.Flags_Field, ReportExpression.IndirectInSolution_Field, ReportExpression.InSolution_Field, ReportExpression.InStructureLevel_Field, ReportExpression.IsOfType_Field, ReportExpression.IsRootForStructureView_Field, ReportExpression.LastModifiedBy_Field, ReportExpression.ParentGroupedBy_Field, ReportExpression.ReportExpressionResultType_Field, ReportExpression.ResourceConsoleBehavior_Field, ReportExpression.ResourceHasResourceKeyDataHashes_Field, ReportExpression.ResourceInFolder_Field, ReportExpression.SecurityOwner_Field, ReportExpression.SelectionBehavior_Field, ReportExpression.ShortcutInFolder_Field };
			}
		}

		#endregion ReportExpression Public Fields

		#region ReportExpression Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public ReportColumn ExpressionForColumn
		{
			get
			{
				return this.GetLookup<ReportColumn>( "core:expressionForColumn", Direction.Reverse );
			}
			set
			{
				this.SetLookup<ReportColumn>( "core:expressionForColumn", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public AggregateReportNode ParentGroupedBy
		{
			get
			{
				return this.GetLookup<AggregateReportNode>( "core:parentGroupedBy", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AggregateReportNode>( "core:parentGroupedBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ActivityArgument ReportExpressionResultType
		{
			get
			{
				return this.GetLookup<ActivityArgument>( "core:reportExpressionResultType", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActivityArgument>( "core:reportExpressionResultType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportExpression Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( AggregateExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( ColumnReferenceExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( FieldExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( IdExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( NodeExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( ResourceExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( ScriptExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportExpression( StructureViewExpression entity )
		{
			return entity.Cast<ReportExpression>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportExpression type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportExpression_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportExpression");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Report link
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:reportLinkControl")]
	public class ReportLinkControl : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportLinkControl( )
			: base( typeof( ReportLinkControl ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportLinkControl( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportLinkControl Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField VisibilityCalculation_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.VisibilityCalculation_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportLinkControl.Alias_Field, ReportLinkControl.CanDelete_Field, ReportLinkControl.CanModify_Field, ReportLinkControl.CreatedDate_Field, ReportLinkControl.Description_Field, ReportLinkControl.HideLabel_Field, ReportLinkControl.MandatoryControl_Field, ReportLinkControl.ModifiedDate_Field, ReportLinkControl.Name_Field, ReportLinkControl.ReadOnlyControl_Field, ReportLinkControl.RenderingBackgroundColor_Field, ReportLinkControl.RenderingHeight_Field, ReportLinkControl.RenderingOrdinal_Field, ReportLinkControl.RenderingWidth_Field, ReportLinkControl.ShowControlHelpText_Field, ReportLinkControl.VisibilityCalculation_Field, ReportLinkControl.ContainedWithinStructureControlOnForm_Field, ReportLinkControl.ControlRelatedEntityDataPathNodes_Field, ReportLinkControl.CreatedBy_Field, ReportLinkControl.Flags_Field, ReportLinkControl.IndirectInSolution_Field, ReportLinkControl.InSolution_Field, ReportLinkControl.InStructureLevel_Field, ReportLinkControl.IsOfType_Field, ReportLinkControl.IsRootForStructureView_Field, ReportLinkControl.LastModifiedBy_Field, ReportLinkControl.ResourceConsoleBehavior_Field, ReportLinkControl.ResourceHasResourceKeyDataHashes_Field, ReportLinkControl.ResourceInFolder_Field, ReportLinkControl.SecurityOwner_Field, ReportLinkControl.SelectionBehavior_Field, ReportLinkControl.ShortcutInFolder_Field };
			}
		}

		#endregion ReportLinkControl Public Fields

		#region ReportLinkControl Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string VisibilityCalculation
		{
			get
			{
				return ( string ) this.GetField( "console:visibilityCalculation" );
			}
			set
			{
				this.SetField( "console:visibilityCalculation", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportLinkControl Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportLinkControl type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportLinkControl_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:reportLinkControl");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A node in the report tree. That is a source of entities, related entities, or grouping information.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportNode")]
	public class ReportNode : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportNode( )
			: base( typeof( ReportNode ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportNode( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportNode Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity NodeUsedByExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:sourceNode" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity NodeUsedByStructureViewExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:structureViewExpressionSourceNode" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ParentAggregatedNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:groupedNode" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ParentReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relatedReportNodes" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelatedReportNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relatedReportNodes" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportNode.Alias_Field, ReportNode.CanDelete_Field, ReportNode.CanModify_Field, ReportNode.CreatedDate_Field, ReportNode.Description_Field, ReportNode.ModifiedDate_Field, ReportNode.Name_Field, ReportNode.CreatedBy_Field, ReportNode.Flags_Field, ReportNode.IndirectInSolution_Field, ReportNode.InSolution_Field, ReportNode.InStructureLevel_Field, ReportNode.IsOfType_Field, ReportNode.IsRootForStructureView_Field, ReportNode.LastModifiedBy_Field, ReportNode.NodeUsedByExpression_Field, ReportNode.NodeUsedByStructureViewExpression_Field, ReportNode.ParentAggregatedNode_Field, ReportNode.ParentReportNode_Field, ReportNode.RelatedReportNodes_Field, ReportNode.ResourceConsoleBehavior_Field, ReportNode.ResourceHasResourceKeyDataHashes_Field, ReportNode.ResourceInFolder_Field, ReportNode.SecurityOwner_Field, ReportNode.SelectionBehavior_Field, ReportNode.ShortcutInFolder_Field };
			}
		}

		#endregion ReportNode Public Fields

		#region ReportNode Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<NodeExpression> NodeUsedByExpression
		{
			get
			{
				return this.GetRelationships<NodeExpression>( "core:nodeUsedByExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<NodeExpression>( "core:nodeUsedByExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<StructureViewExpression> NodeUsedByStructureViewExpression
		{
			get
			{
				return this.GetRelationships<StructureViewExpression>( "core:nodeUsedByStructureViewExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureViewExpression>( "core:nodeUsedByStructureViewExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public AggregateReportNode ParentAggregatedNode
		{
			get
			{
				return this.GetLookup<AggregateReportNode>( "core:parentAggregatedNode", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AggregateReportNode>( "core:parentAggregatedNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public ReportNode ParentReportNode
		{
			get
			{
				return this.GetLookup<ReportNode>( "core:parentReportNode", Direction.Reverse );
			}
			set
			{
				this.SetLookup<ReportNode>( "core:parentReportNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ReportNode> RelatedReportNodes
		{
			get
			{
				return this.GetRelationships<ReportNode>( "core:relatedReportNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportNode>( "core:relatedReportNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportNode Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportNode( AggregateReportNode entity )
		{
			return entity.Cast<ReportNode>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportNode( DerivedTypeReportNode entity )
		{
			return entity.Cast<ReportNode>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportNode( RelationshipReportNode entity )
		{
			return entity.Cast<ReportNode>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ReportNode( ResourceReportNode entity )
		{
			return entity.Cast<ReportNode>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportNode type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportNode_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportNode");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A column in a report
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportOrderBy")]
	public class ReportOrderBy : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportOrderBy( )
			: base( typeof( ReportOrderBy ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportOrderBy( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportOrderBy Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField OrderPriority_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:orderPriority" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ReverseOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:reverseOrder" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity OrderByExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:orderByExpression" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportOrderBy.OrderPriority_Field, ReportOrderBy.ReverseOrder_Field, ReportOrderBy.Alias_Field, ReportOrderBy.CanDelete_Field, ReportOrderBy.CanModify_Field, ReportOrderBy.CreatedDate_Field, ReportOrderBy.Description_Field, ReportOrderBy.ModifiedDate_Field, ReportOrderBy.Name_Field, ReportOrderBy.CreatedBy_Field, ReportOrderBy.Flags_Field, ReportOrderBy.IndirectInSolution_Field, ReportOrderBy.InSolution_Field, ReportOrderBy.InStructureLevel_Field, ReportOrderBy.IsOfType_Field, ReportOrderBy.IsRootForStructureView_Field, ReportOrderBy.LastModifiedBy_Field, ReportOrderBy.OrderByExpression_Field, ReportOrderBy.ResourceConsoleBehavior_Field, ReportOrderBy.ResourceHasResourceKeyDataHashes_Field, ReportOrderBy.ResourceInFolder_Field, ReportOrderBy.SecurityOwner_Field, ReportOrderBy.SelectionBehavior_Field, ReportOrderBy.ShortcutInFolder_Field };
			}
		}

		#endregion ReportOrderBy Public Fields

		#region ReportOrderBy Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? OrderPriority
		{
			get
			{
				return ( int? ) this.GetField( "core:orderPriority" );
			}
			set
			{
				this.SetField( "core:orderPriority", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ReverseOrder
		{
			get
			{
				return ( bool? ) this.GetField( "core:reverseOrder" );
			}
			set
			{
				this.SetField( "core:reverseOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportExpression OrderByExpression
		{
			get
			{
				return this.GetLookup<ReportExpression>( "core:orderByExpression", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportExpression>( "core:orderByExpression", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportOrderBy Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportOrderBy type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportOrderBy_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportOrderBy");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A rollup (summary) of a column.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportRollup")]
	public class ReportRollup : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportRollup( )
			: base( typeof( ReportRollup ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportRollup( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportRollup Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RollupColumn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:rollupColumn" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RollupMethod_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:rollupMethod" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportRollup.Alias_Field, ReportRollup.CanDelete_Field, ReportRollup.CanModify_Field, ReportRollup.CreatedDate_Field, ReportRollup.Description_Field, ReportRollup.ModifiedDate_Field, ReportRollup.Name_Field, ReportRollup.CreatedBy_Field, ReportRollup.Flags_Field, ReportRollup.IndirectInSolution_Field, ReportRollup.InSolution_Field, ReportRollup.InStructureLevel_Field, ReportRollup.IsOfType_Field, ReportRollup.IsRootForStructureView_Field, ReportRollup.LastModifiedBy_Field, ReportRollup.ResourceConsoleBehavior_Field, ReportRollup.ResourceHasResourceKeyDataHashes_Field, ReportRollup.ResourceInFolder_Field, ReportRollup.RollupColumn_Field, ReportRollup.RollupMethod_Field, ReportRollup.SecurityOwner_Field, ReportRollup.SelectionBehavior_Field, ReportRollup.ShortcutInFolder_Field };
			}
		}

		#endregion ReportRollup Public Fields

		#region ReportRollup Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportColumn RollupColumn
		{
			get
			{
				return this.GetLookup<ReportColumn>( "core:rollupColumn", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportColumn>( "core:rollupColumn", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public AggregateMethodEnum RollupMethod
		{
			get
			{
				return this.GetLookup<AggregateMethodEnum>( "core:rollupMethod", Direction.Forward );
			}
			set
			{
				this.SetLookup<AggregateMethodEnum>( "core:rollupMethod", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public AggregateMethodEnum_Enumeration? RollupMethod_Enum
		{
			get
			{
				return GetEnum<AggregateMethodEnum, AggregateMethodEnum_Enumeration>( "core:rollupMethod", Direction.Forward, AggregateMethodEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:rollupMethod", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:rollupMethod", new EntityRelationship<AggregateMethodEnum>( EDC.ReadiNow.Model.Entity.Get<AggregateMethodEnum>( EntityRefHelper.ConvertAliasWithNamespace( AggregateMethodEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportRollup Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportRollup type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportRollup_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportRollup");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A report result row grouping.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportRowGroup")]
	public class ReportRowGroup : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportRowGroup( )
			: base( typeof( ReportRowGroup ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportRowGroup( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportRowGroup Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField GroupingCollapsed_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:groupingCollapsed" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField GroupingPriority_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:groupingPriority" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity GroupedColumn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:groupedColumn" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity GroupingMethod_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:groupingMethod" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportRowGroup.GroupingCollapsed_Field, ReportRowGroup.GroupingPriority_Field, ReportRowGroup.Alias_Field, ReportRowGroup.CanDelete_Field, ReportRowGroup.CanModify_Field, ReportRowGroup.CreatedDate_Field, ReportRowGroup.Description_Field, ReportRowGroup.ModifiedDate_Field, ReportRowGroup.Name_Field, ReportRowGroup.CreatedBy_Field, ReportRowGroup.Flags_Field, ReportRowGroup.GroupedColumn_Field, ReportRowGroup.GroupingMethod_Field, ReportRowGroup.IndirectInSolution_Field, ReportRowGroup.InSolution_Field, ReportRowGroup.InStructureLevel_Field, ReportRowGroup.IsOfType_Field, ReportRowGroup.IsRootForStructureView_Field, ReportRowGroup.LastModifiedBy_Field, ReportRowGroup.ResourceConsoleBehavior_Field, ReportRowGroup.ResourceHasResourceKeyDataHashes_Field, ReportRowGroup.ResourceInFolder_Field, ReportRowGroup.SecurityOwner_Field, ReportRowGroup.SelectionBehavior_Field, ReportRowGroup.ShortcutInFolder_Field };
			}
		}

		#endregion ReportRowGroup Public Fields

		#region ReportRowGroup Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? GroupingCollapsed
		{
			get
			{
				return ( bool? ) this.GetField( "core:groupingCollapsed" );
			}
			set
			{
				this.SetField( "core:groupingCollapsed", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? GroupingPriority
		{
			get
			{
				return ( int? ) this.GetField( "core:groupingPriority" );
			}
			set
			{
				this.SetField( "core:groupingPriority", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ReportColumn GroupedColumn
		{
			get
			{
				return this.GetLookup<ReportColumn>( "core:groupedColumn", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportColumn>( "core:groupedColumn", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public GroupingMethodEnum GroupingMethod
		{
			get
			{
				return this.GetLookup<GroupingMethodEnum>( "core:groupingMethod", Direction.Forward );
			}
			set
			{
				this.SetLookup<GroupingMethodEnum>( "core:groupingMethod", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public GroupingMethodEnum_Enumeration? GroupingMethod_Enum
		{
			get
			{
				return GetEnum<GroupingMethodEnum, GroupingMethodEnum_Enumeration>( "core:groupingMethod", Direction.Forward, GroupingMethodEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:groupingMethod", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:groupingMethod", new EntityRelationship<GroupingMethodEnum>( EDC.ReadiNow.Model.Entity.Get<GroupingMethodEnum>( EntityRefHelper.ConvertAliasWithNamespace( GroupingMethodEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportRowGroup Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportRowGroup type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportRowGroup_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportRowGroup");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="ReportStyleEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportStyleEnum")]
	public class ReportStyleEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportStyleEnum( )
			: base( typeof( ReportStyleEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportStyleEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportStyleEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportStyleEnum.Alias_Field, ReportStyleEnum.CanDelete_Field, ReportStyleEnum.CanModify_Field, ReportStyleEnum.CanModifyProtectedResource_Field, ReportStyleEnum.CreatedDate_Field, ReportStyleEnum.Description_Field, ReportStyleEnum.EnumOrder_Field, ReportStyleEnum.ModifiedDate_Field, ReportStyleEnum.Name_Field, ReportStyleEnum.CreatedBy_Field, ReportStyleEnum.EnumOwner_Field, ReportStyleEnum.Flags_Field, ReportStyleEnum.IndirectInSolution_Field, ReportStyleEnum.InSolution_Field, ReportStyleEnum.InStructureLevel_Field, ReportStyleEnum.IsOfType_Field, ReportStyleEnum.IsRootForStructureView_Field, ReportStyleEnum.LastModifiedBy_Field, ReportStyleEnum.ResourceConsoleBehavior_Field, ReportStyleEnum.ResourceHasResourceKeyDataHashes_Field, ReportStyleEnum.ResourceInFolder_Field, ReportStyleEnum.SecurityOwner_Field, ReportStyleEnum.SelectionBehavior_Field, ReportStyleEnum.ShortcutInFolder_Field };
			}
		}

		#endregion ReportStyleEnum Public Fields

		#region ReportStyleEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ReportStyleEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportStyleEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportStyleEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportStyleEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a ReportStyleEnum_Enumeration value.
		/// </summary>
		public static ReportStyleEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:reportStyle0": return ReportStyleEnum_Enumeration.ReportStyle0;
				case "core:reportStyle1": return ReportStyleEnum_Enumeration.ReportStyle1;
				case "core:reportStyle2": return ReportStyleEnum_Enumeration.ReportStyle2;
				case "core:reportStyle3": return ReportStyleEnum_Enumeration.ReportStyle3;
				case "core:reportStyle4": return ReportStyleEnum_Enumeration.ReportStyle4;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a ReportStyleEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(ReportStyleEnum_Enumeration value)
		{
			switch (value)
			{
				case ReportStyleEnum_Enumeration.ReportStyle0: return "core:reportStyle0";
				case ReportStyleEnum_Enumeration.ReportStyle1: return "core:reportStyle1";
				case ReportStyleEnum_Enumeration.ReportStyle2: return "core:reportStyle2";
				case ReportStyleEnum_Enumeration.ReportStyle3: return "core:reportStyle3";
				case ReportStyleEnum_Enumeration.ReportStyle4: return "core:reportStyle4";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<ReportStyleEnum_Enumeration> GetEnumValues( ReportStyleEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( ReportStyleEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( ReportStyleEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// ReportStyleEnum enumeration type.
	/// </summary>
	public enum ReportStyleEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		ReportStyle0 = 1,

		/// <summary>
		/// 
		/// </summary>
		ReportStyle1 = 2,

		/// <summary>
		/// 
		/// </summary>
		ReportStyle2 = 4,

		/// <summary>
		/// 
		/// </summary>
		ReportStyle3 = 8,

		/// <summary>
		/// 
		/// </summary>
		ReportStyle4 = 16,

	}

	/// <summary>
	/// Represents a template that can be used to generate Word reports.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reportTemplate")]
	public class ReportTemplate : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReportTemplate( )
			: base( typeof( ReportTemplate ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReportTemplate( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReportTemplate Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity LogEntriesForObject_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.LogEntriesForObject_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportTemplateAppliesToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportTemplateAppliesToType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ReportTemplateUsedInActionMenuItems_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:actionMenuItemToReportTemplate" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportTemplateUsesDocument_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportTemplateUsesDocument" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TasksForRecord_Field
		{
			get
			{
				return EDC.ReadiNow.Model.UserResource.TasksForRecord_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReportTemplate.Alias_Field, ReportTemplate.CanDelete_Field, ReportTemplate.CanModify_Field, ReportTemplate.CreatedDate_Field, ReportTemplate.Description_Field, ReportTemplate.ModifiedDate_Field, ReportTemplate.Name_Field, ReportTemplate.CreatedBy_Field, ReportTemplate.Flags_Field, ReportTemplate.IndirectInSolution_Field, ReportTemplate.InSolution_Field, ReportTemplate.InStructureLevel_Field, ReportTemplate.IsOfType_Field, ReportTemplate.IsRootForStructureView_Field, ReportTemplate.LastModifiedBy_Field, ReportTemplate.LogEntriesForObject_Field, ReportTemplate.ReportTemplateAppliesToType_Field, ReportTemplate.ReportTemplateUsedInActionMenuItems_Field, ReportTemplate.ReportTemplateUsesDocument_Field, ReportTemplate.ResourceConsoleBehavior_Field, ReportTemplate.ResourceHasResourceKeyDataHashes_Field, ReportTemplate.ResourceInFolder_Field, ReportTemplate.SecurityOwner_Field, ReportTemplate.SelectionBehavior_Field, ReportTemplate.ShortcutInFolder_Field, ReportTemplate.TasksForRecord_Field };
			}
		}

		#endregion ReportTemplate Public Fields

		#region ReportTemplate Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ManagedObjectLogEntry> LogEntriesForObject
		{
			get
			{
				return this.GetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ManagedObjectLogEntry>( "core:logEntriesForObject", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType ReportTemplateAppliesToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:reportTemplateAppliesToType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:reportTemplateAppliesToType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<GenerateDocumentActionMenuItem> ReportTemplateUsedInActionMenuItems
		{
			get
			{
				return this.GetRelationships<GenerateDocumentActionMenuItem>( "console:reportTemplateUsedInActionMenuItems", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<GenerateDocumentActionMenuItem>( "console:reportTemplateUsedInActionMenuItems", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Document ReportTemplateUsesDocument
		{
			get
			{
				return this.GetLookup<Document>( "core:reportTemplateUsesDocument", Direction.Forward );
			}
			set
			{
				this.SetLookup<Document>( "core:reportTemplateUsesDocument", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<DisplayFormUserTask> TasksForRecord
		{
			get
			{
				return this.GetRelationships<DisplayFormUserTask>( "core:tasksForRecord", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<DisplayFormUserTask>( "core:tasksForRecord", value, Direction.Reverse );
			}
		}



		#endregion ReportTemplate Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReportTemplate type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReportTemplate_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reportTemplate");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// The root resource type from which all other types inherit.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resource")]
	public class Resource : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public Resource( )
			: base( typeof( Resource ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal Resource( IActivationData activationData )
			: base( activationData )
		{

		}

		#region Resource Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<AliasField>( "core:alias" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:canDelete" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:canModify" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:createdDate" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:description" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:modifiedDate" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:name" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:createdBy" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:flags" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:indirectInSolution" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:inSolution" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:inStructureLevel" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:isOfType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:isRootForStructureView" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:lastModifiedBy" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:resourceConsoleBehavior" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceHasResourceKeyDataHashes" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:resourceInFolder" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:securityOwner" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:selectionBehavior" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:shortcutInFolder" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { Resource.Alias_Field, Resource.CanDelete_Field, Resource.CanModify_Field, Resource.CreatedDate_Field, Resource.Description_Field, Resource.ModifiedDate_Field, Resource.Name_Field, Resource.CreatedBy_Field, Resource.Flags_Field, Resource.IndirectInSolution_Field, Resource.InSolution_Field, Resource.InStructureLevel_Field, Resource.IsOfType_Field, Resource.IsRootForStructureView_Field, Resource.LastModifiedBy_Field, Resource.ResourceConsoleBehavior_Field, Resource.ResourceHasResourceKeyDataHashes_Field, Resource.ResourceInFolder_Field, Resource.SecurityOwner_Field, Resource.SelectionBehavior_Field, Resource.ShortcutInFolder_Field };
			}
		}

		#endregion Resource Public Fields

		#region Resource Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion Resource Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AccessRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActingPersonLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActionExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActionMenu entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActionMenuItem entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActivityArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActivityPrompt entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ActivityType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AggregateExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AggregateMethodEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AggregateReportNode entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AliasField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AlignEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Api entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiEndpoint entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiFieldMapping entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiKey entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiMemberMapping entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiRelationshipMapping entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiResourceEndpoint entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiResourceMapping entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApiSpreadsheetEndpoint entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( App entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ApplicationDependency entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Appointment entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AppointmentReminderEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AppPackage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AppPackageDependency entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ArgumentType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AssignToVariable entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AttendeeStatusEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AuditLogEntryMetadata entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AuditLogSettings entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AuditLogSeverityEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AutoNumberField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( AutoNumberFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( BarFormattingRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( BaseUserTask entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( BoolArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( BoolField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CalculatedRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CalculatedResult entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CardinalityEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangeAccessRulePermissionsAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangeAccessRuleQueryAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangePasswordPolicyAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangeUserAccountExpiryAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangeUserAccountPasswordAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangeUserAccountStatusAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChangeUserRoleMembersAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Chart entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChartComponent entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CheckboxKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChoiceOption entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChoiceOptionSet entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChoiceQuestion entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChoiceQuestionOptionsEditor entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ChoiceRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Class entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ClientCachable entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CloneActionEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CloneActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ColorFormattingRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ColorRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ColumnReferenceExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ConditionalFormatIcon entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ConditionBasedRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ConsoleBehavior entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ConsoleTheme entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ControlOnForm entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateAccessRuleAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateApplicationAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateLinkActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateTenantAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateUserAccountAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CreateUserRoleAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CurrencyArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CurrencyField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CurrencyKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CurrencyKFieldRenderControl2 entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CustomEditForm entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CustomEditFormControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( CustomRenderControlType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DataLabelPosEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateAndTimeKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateAndTimeKFieldRenderControl2 entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateColFmtEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateKFieldRenderControl2 entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateTimeArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateTimeColFmtEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DateTimeField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DayOfWeekEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DecimalArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DecimalField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DecimalKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DecimalKFieldRenderControl2 entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DecisionActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Definition entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeleteAccessRuleAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeleteActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeleteApplicationAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeleteTenantAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeleteUserAccountAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeleteUserRoleAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DeployApplicationAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DerivedTypeReportNode entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DirectionEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DisplayFormActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DisplayFormat entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DisplayFormUserTask entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Document entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DocumentFolder entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DocumentRevision entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DocumentType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( DropDownRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EmailAlarm entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EmailAlarmActionEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EmailContact entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EmailMessage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EmailNotifier entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EmailTypeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EnableableItem entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EnableAccessRuleAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EntityType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EntityWithArgsAndExits entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EnumType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EnumValue entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Event entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EventEmail entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EventEmailPriorityEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EventLogSettings entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( EventStatusEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ExitPoint entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ExpireUserAccountAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ExportFileTypeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ExportToActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FeatureSwitchType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Field entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldControlOnForm entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldGroup entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldRenderControlType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldRepresentsEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FieldTypeDisplayName entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FileNameUploadControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FileRevisionControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FileType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Folder entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ForEachResource entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( FormattingRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GenerateDocActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GenerateDocumentActionMenuItem entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GetResourcesActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GroupingMethodEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GuidArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GuidField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( GuidFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( HeaderColumnContainerControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( HorizontalStackContainerControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ICalUidContainer entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IconFileType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IconFormattingRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IconRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IdentityProvider entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IdentityProviderUser entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IdExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImageControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImageFileNameUploadControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImageFileType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImageFormattingRule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImageRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImageScaleEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImapEmailProvider entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImportableType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImportConfig entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImportFileTypeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ImportRun entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Inbox entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( InboxEmailAction entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( InboxProvider entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( InlineRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IntegerArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( IntField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LargeTextBoxKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LockUserAccountAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LogActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LogActivityLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LogActivityResourceLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LogoffAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LogonAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( LogSeverityEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ManagedObjectLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ManagedType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MapControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MarkerShapeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MessageQueueRequest entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MonthOfYearEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MultiChoiceRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MultilineRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( MultiRelationshipControlBehavior entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NamedReference entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NavContainer entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NavigationConfigButton entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NavigationElement entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NavSection entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NodeExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Notification entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Notifier entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NotifyActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NumericKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NumericKFieldRenderControl2 entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( NumericQuestion entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ObjectArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( OidcIdentityProvider entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( OidcIdentityProviderUser entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( OperatorEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Parameter entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PasswordPolicy entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PasswordResetRecord entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Permission entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Person entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PhoneContact entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PhoneTypeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PhotoFileType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PrivateContentSection entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PrivatelyOwnable entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ProcessInboxesAction entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PromptUserActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PromptUserTask entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ProtectableType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ProxyInboxProvider entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( PublishApplicationAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReadiNowIdentityProvider entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReceivedEmailMessage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReceivedICalEmailMessage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RecordChangeAuditPolicy entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RecordChangeLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RelatedEntityDataPathNode entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Relationship entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RelationshipControlFilterDetails entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RelationshipControlOnForm entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RelationshipRenderControlType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RelationshipReportNode entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RelTypeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RenameUserAccountAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RenameUserRoleAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RenderControlType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReplyMapEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReplyRecord entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Report entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportColumn entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportComponent entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportCondition entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportLinkControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportNode entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportOrderBy entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportRollup entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportRowGroup entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportStyleEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReportTemplate entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceFlagsEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceKey entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceKeyDataHash entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceKeyRelationship entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceListArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourcePicker entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceReportNode entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceTriggerFilterDef entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ResourceViewer entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ReviewSurveyActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Role entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( RunTraceLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Schedule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScheduleAction entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScheduleCron entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScheduleDailyRepeat entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScheduledImportConfig entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScheduledItem entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScheduleOneOff entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Schema entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ScriptExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SecurableEntity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SelfServeComponent entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SendEmailActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SendRecord entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SentEmailMessage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SentICalEmailMessage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SetChoiceActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SetRelationshipActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ShowTimeAsEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SingleLineTextControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SizeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SmsSendRecord entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Solution entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StackMethodEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StartSurveyActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StateInfoEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StaticPage entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StringArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StringField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StringPattern entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StructureControlOnForm entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StructureLevel entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StructureRenderControlType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StructureView entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StructureViewExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( StructureViewRelationshipControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Subject entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SubjectNavigationAccessEditor entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SubjectRecordAccessEditor entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyAnswer entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyAttachment entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyCampaign entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyOutcome entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyPersonCampaign entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyQuestion entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyResponse entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveySection entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveySectionsEditor entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyStatusEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SurveyTargetCampaign entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SwitchActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SwitchKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( SystemSchedule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TabContainerControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TabRelationshipRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Target entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TargetCampaignSurveyTakerPicker entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TargetCampaignTargetsEditor entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TaskStatusEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Tenant entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TenantEmailSetting entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TenantGeneralSettings entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TenantImageSettings entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TenantLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TenantRollbackAuditLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Termination entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TextBoxKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TextQuestion entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ThumbnailFileType entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( ThumbnailSizeEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TimeArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TimeColFmtEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TimeField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TimeKFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TimeKFieldRenderControl2 entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TopMenu entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TopNavigationStyleEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Transition entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TransitionStart entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TransitionTask entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TriggeredOnEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TwilioNotifier entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( TypedArgument entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UiContext entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UpdateFieldActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UserAccount entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UserAccountStatusEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UserResource entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UserSurvey entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( UserSurveyTask entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( VerticalStackContainerControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( VirtualRelationship entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( VisualController entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WfActivity entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WfArgumentInstance entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WfExpression entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WfTrigger entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WfTriggerOnSchedule entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WfTriggerUserUpdatesResource entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( Workflow entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowActionMenuItem entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowButtonControl entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowEventEnum entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowProxy entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowRun entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowRunFailedLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowRunLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowRunState entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( WorkflowUserActionLogEntry entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( XmlField entity )
		{
			return entity.Cast<Resource>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator Resource( XmlFieldRenderControl entity )
		{
			return entity.Cast<Resource>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the Resource type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType Resource_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resource");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An argument that can hold a reference
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceArgument")]
	public class ResourceArgument : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceArgument( )
			: base( typeof( ResourceArgument ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceArgument( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceArgument Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ArgumentIsMandatory_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.ArgumentIsMandatory_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DefaultExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.DefaultExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromArgument_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.ArgumentInstanceFromArgument_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ConformsToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TypedArgument.ConformsToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InputToActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.InputToActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InternalsFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.InternalsFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity OutputFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.OutputFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity PopulatedByExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.PopulatedByExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceParameterValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceParameterValue" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity VariableInWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.VariableInWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceArgument.Alias_Field, ResourceArgument.ArgumentIsMandatory_Field, ResourceArgument.CanDelete_Field, ResourceArgument.CanModify_Field, ResourceArgument.CreatedDate_Field, ResourceArgument.DefaultExpression_Field, ResourceArgument.Description_Field, ResourceArgument.ModifiedDate_Field, ResourceArgument.Name_Field, ResourceArgument.ArgumentInstanceFromArgument_Field, ResourceArgument.ConformsToType_Field, ResourceArgument.CreatedBy_Field, ResourceArgument.Flags_Field, ResourceArgument.IndirectInSolution_Field, ResourceArgument.InputToActivity_Field, ResourceArgument.InSolution_Field, ResourceArgument.InStructureLevel_Field, ResourceArgument.InternalsFromActivity_Field, ResourceArgument.IsOfType_Field, ResourceArgument.IsRootForStructureView_Field, ResourceArgument.LastModifiedBy_Field, ResourceArgument.OutputFromActivity_Field, ResourceArgument.PopulatedByExpression_Field, ResourceArgument.ResourceConsoleBehavior_Field, ResourceArgument.ResourceHasResourceKeyDataHashes_Field, ResourceArgument.ResourceInFolder_Field, ResourceArgument.ResourceParameterValue_Field, ResourceArgument.SecurityOwner_Field, ResourceArgument.SelectionBehavior_Field, ResourceArgument.ShortcutInFolder_Field, ResourceArgument.VariableInWorkflow_Field };
			}
		}

		#endregion ResourceArgument Public Fields

		#region ResourceArgument Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ArgumentIsMandatory
		{
			get
			{
				return ( bool? ) this.GetField( "core:argumentIsMandatory" );
			}
			set
			{
				this.SetField( "core:argumentIsMandatory", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DefaultExpression
		{
			get
			{
				return ( string ) this.GetField( "core:defaultExpression" );
			}
			set
			{
				this.SetField( "core:defaultExpression", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromArgument
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromArgument", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromArgument", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType ConformsToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:conformsToType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:conformsToType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public EntityWithArgsAndExits InputToActivity
		{
			get
			{
				return this.GetLookup<EntityWithArgsAndExits>( "core:inputToActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EntityWithArgsAndExits>( "core:inputToActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public EntityWithArgsAndExits InternalsFromActivity
		{
			get
			{
				return this.GetLookup<EntityWithArgsAndExits>( "core:internalsFromActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EntityWithArgsAndExits>( "core:internalsFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public EntityWithArgsAndExits OutputFromActivity
		{
			get
			{
				return this.GetLookup<EntityWithArgsAndExits>( "core:outputFromActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EntityWithArgsAndExits>( "core:outputFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfExpression> PopulatedByExpression
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:populatedByExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:populatedByExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Resource ResourceParameterValue
		{
			get
			{
				return this.GetLookup<Resource>( "core:resourceParameterValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:resourceParameterValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow VariableInWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:variableInWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:variableInWorkflow", value, Direction.Reverse );
			}
		}



		#endregion ResourceArgument Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceArgument type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceArgument_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceArgument");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Represents a resource being shown or used in a report.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceExpression")]
	public class ResourceExpression : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceExpression( )
			: base( typeof( ResourceExpression ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceExpression( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceExpression Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ExpressionForColumn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportExpression.ExpressionForColumn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ParentGroupedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportExpression.ParentGroupedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ReportExpressionResultType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportExpression.ReportExpressionResultType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SourceNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.NodeExpression.SourceNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceExpression.Alias_Field, ResourceExpression.CanDelete_Field, ResourceExpression.CanModify_Field, ResourceExpression.CreatedDate_Field, ResourceExpression.Description_Field, ResourceExpression.ModifiedDate_Field, ResourceExpression.Name_Field, ResourceExpression.CreatedBy_Field, ResourceExpression.ExpressionForColumn_Field, ResourceExpression.Flags_Field, ResourceExpression.IndirectInSolution_Field, ResourceExpression.InSolution_Field, ResourceExpression.InStructureLevel_Field, ResourceExpression.IsOfType_Field, ResourceExpression.IsRootForStructureView_Field, ResourceExpression.LastModifiedBy_Field, ResourceExpression.ParentGroupedBy_Field, ResourceExpression.ReportExpressionResultType_Field, ResourceExpression.ResourceConsoleBehavior_Field, ResourceExpression.ResourceHasResourceKeyDataHashes_Field, ResourceExpression.ResourceInFolder_Field, ResourceExpression.SecurityOwner_Field, ResourceExpression.SelectionBehavior_Field, ResourceExpression.ShortcutInFolder_Field, ResourceExpression.SourceNode_Field };
			}
		}

		#endregion ResourceExpression Public Fields

		#region ResourceExpression Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public ReportColumn ExpressionForColumn
		{
			get
			{
				return this.GetLookup<ReportColumn>( "core:expressionForColumn", Direction.Reverse );
			}
			set
			{
				this.SetLookup<ReportColumn>( "core:expressionForColumn", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AggregateReportNode ParentGroupedBy
		{
			get
			{
				return this.GetLookup<AggregateReportNode>( "core:parentGroupedBy", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AggregateReportNode>( "core:parentGroupedBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ActivityArgument ReportExpressionResultType
		{
			get
			{
				return this.GetLookup<ActivityArgument>( "core:reportExpressionResultType", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActivityArgument>( "core:reportExpressionResultType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ReportNode SourceNode
		{
			get
			{
				return this.GetLookup<ReportNode>( "core:sourceNode", Direction.Forward );
			}
			set
			{
				this.SetLookup<ReportNode>( "core:sourceNode", value, Direction.Forward );
			}
		}



		#endregion ResourceExpression Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceExpression type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceExpression_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceExpression");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="ResourceFlagsEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceFlagsEnum")]
	public class ResourceFlagsEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceFlagsEnum( )
			: base( typeof( ResourceFlagsEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceFlagsEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceFlagsEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity FlagUsedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:flags" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity FlagUsedByInstance_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:instanceFlags" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceFlagsEnum.Alias_Field, ResourceFlagsEnum.CanDelete_Field, ResourceFlagsEnum.CanModify_Field, ResourceFlagsEnum.CanModifyProtectedResource_Field, ResourceFlagsEnum.CreatedDate_Field, ResourceFlagsEnum.Description_Field, ResourceFlagsEnum.EnumOrder_Field, ResourceFlagsEnum.ModifiedDate_Field, ResourceFlagsEnum.Name_Field, ResourceFlagsEnum.CreatedBy_Field, ResourceFlagsEnum.EnumOwner_Field, ResourceFlagsEnum.Flags_Field, ResourceFlagsEnum.FlagUsedBy_Field, ResourceFlagsEnum.FlagUsedByInstance_Field, ResourceFlagsEnum.IndirectInSolution_Field, ResourceFlagsEnum.InSolution_Field, ResourceFlagsEnum.InStructureLevel_Field, ResourceFlagsEnum.IsOfType_Field, ResourceFlagsEnum.IsRootForStructureView_Field, ResourceFlagsEnum.LastModifiedBy_Field, ResourceFlagsEnum.ResourceConsoleBehavior_Field, ResourceFlagsEnum.ResourceHasResourceKeyDataHashes_Field, ResourceFlagsEnum.ResourceInFolder_Field, ResourceFlagsEnum.SecurityOwner_Field, ResourceFlagsEnum.SelectionBehavior_Field, ResourceFlagsEnum.ShortcutInFolder_Field };
			}
		}

		#endregion ResourceFlagsEnum Public Fields

		#region ResourceFlagsEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Resource> FlagUsedBy
		{
			get
			{
				return this.GetRelationships<Resource>( "core:flagUsedBy", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:flagUsedBy", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> FlagUsedByInstance
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:flagUsedByInstance", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:flagUsedByInstance", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourceFlagsEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceFlagsEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceFlagsEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceFlagsEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a ResourceFlagsEnum_Enumeration value.
		/// </summary>
		public static ResourceFlagsEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:systemFlag": return ResourceFlagsEnum_Enumeration.SystemFlag;
				case "core:readOnlyFlag": return ResourceFlagsEnum_Enumeration.ReadOnlyFlag;
				case "core:noDeleteFlag": return ResourceFlagsEnum_Enumeration.NoDeleteFlag;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a ResourceFlagsEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(ResourceFlagsEnum_Enumeration value)
		{
			switch (value)
			{
				case ResourceFlagsEnum_Enumeration.SystemFlag: return "core:systemFlag";
				case ResourceFlagsEnum_Enumeration.ReadOnlyFlag: return "core:readOnlyFlag";
				case ResourceFlagsEnum_Enumeration.NoDeleteFlag: return "core:noDeleteFlag";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<ResourceFlagsEnum_Enumeration> GetEnumValues( ResourceFlagsEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( ResourceFlagsEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( ResourceFlagsEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// ResourceFlagsEnum enumeration type.
	/// </summary>
	public enum ResourceFlagsEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		SystemFlag = 1,

		/// <summary>
		/// 
		/// </summary>
		ReadOnlyFlag = 2,

		/// <summary>
		/// 
		/// </summary>
		NoDeleteFlag = 4,

	}

	/// <summary>
	/// Fields to consist a key of a resource .
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceKey")]
	public class ResourceKey : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceKey( )
			: base( typeof( ResourceKey ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceKey( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceKey Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField MergeDuplicates_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:mergeDuplicates" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ResourceKeyMessage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:resourceKeyMessage" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity KeyAppliesToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:keyAppliesToType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity KeyFields_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:fieldInKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceKeyDataHashAppliesToResourceKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ResourceKeyRelationships_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relationshipInResourceKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceKey.MergeDuplicates_Field, ResourceKey.ResourceKeyMessage_Field, ResourceKey.Alias_Field, ResourceKey.CanDelete_Field, ResourceKey.CanModify_Field, ResourceKey.CanModifyProtectedResource_Field, ResourceKey.CreatedDate_Field, ResourceKey.Description_Field, ResourceKey.ModifiedDate_Field, ResourceKey.Name_Field, ResourceKey.CreatedBy_Field, ResourceKey.Flags_Field, ResourceKey.IndirectInSolution_Field, ResourceKey.InSolution_Field, ResourceKey.InStructureLevel_Field, ResourceKey.IsOfType_Field, ResourceKey.IsRootForStructureView_Field, ResourceKey.KeyAppliesToType_Field, ResourceKey.KeyFields_Field, ResourceKey.LastModifiedBy_Field, ResourceKey.ResourceConsoleBehavior_Field, ResourceKey.ResourceHasResourceKeyDataHashes_Field, ResourceKey.ResourceInFolder_Field, ResourceKey.ResourceKeyDataHashes_Field, ResourceKey.ResourceKeyRelationships_Field, ResourceKey.SecurityOwner_Field, ResourceKey.SelectionBehavior_Field, ResourceKey.ShortcutInFolder_Field };
			}
		}

		#endregion ResourceKey Public Fields

		#region ResourceKey Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? MergeDuplicates
		{
			get
			{
				return ( bool? ) this.GetField( "core:mergeDuplicates" );
			}
			set
			{
				this.SetField( "core:mergeDuplicates", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ResourceKeyMessage
		{
			get
			{
				return ( string ) this.GetField( "core:resourceKeyMessage" );
			}
			set
			{
				this.SetField( "core:resourceKeyMessage", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType KeyAppliesToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:keyAppliesToType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:keyAppliesToType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Field> KeyFields
		{
			get
			{
				return this.GetRelationships<Field>( "core:keyFields", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:keyFields", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceKeyDataHashes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceKeyDataHashes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyRelationship> ResourceKeyRelationships
		{
			get
			{
				return this.GetRelationships<ResourceKeyRelationship>( "core:resourceKeyRelationships", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyRelationship>( "core:resourceKeyRelationships", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourceKey Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceKey type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceKey_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceKey");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// The hash of the fields for a particular resource key and resource.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceKeyDataHash")]
	public class ResourceKeyDataHash : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceKeyDataHash( )
			: base( typeof( ResourceKeyDataHash ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceKeyDataHash( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceKeyDataHash Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField DataHash_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:dataHash" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ResourceKeyDataHashAppliesToResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceHasResourceKeyDataHashes" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceKeyDataHashAppliesToResourceKey_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceKeyDataHashAppliesToResourceKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceKeyDataHash.DataHash_Field, ResourceKeyDataHash.Alias_Field, ResourceKeyDataHash.CanDelete_Field, ResourceKeyDataHash.CanModify_Field, ResourceKeyDataHash.CreatedDate_Field, ResourceKeyDataHash.Description_Field, ResourceKeyDataHash.ModifiedDate_Field, ResourceKeyDataHash.Name_Field, ResourceKeyDataHash.CreatedBy_Field, ResourceKeyDataHash.Flags_Field, ResourceKeyDataHash.IndirectInSolution_Field, ResourceKeyDataHash.InSolution_Field, ResourceKeyDataHash.InStructureLevel_Field, ResourceKeyDataHash.IsOfType_Field, ResourceKeyDataHash.IsRootForStructureView_Field, ResourceKeyDataHash.LastModifiedBy_Field, ResourceKeyDataHash.ResourceConsoleBehavior_Field, ResourceKeyDataHash.ResourceHasResourceKeyDataHashes_Field, ResourceKeyDataHash.ResourceInFolder_Field, ResourceKeyDataHash.ResourceKeyDataHashAppliesToResource_Field, ResourceKeyDataHash.ResourceKeyDataHashAppliesToResourceKey_Field, ResourceKeyDataHash.SecurityOwner_Field, ResourceKeyDataHash.SelectionBehavior_Field, ResourceKeyDataHash.ShortcutInFolder_Field };
			}
		}

		#endregion ResourceKeyDataHash Public Fields

		#region ResourceKeyDataHash Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string DataHash
		{
			get
			{
				return ( string ) this.GetField( "core:dataHash" );
			}
			set
			{
				this.SetField( "core:dataHash", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Resource ResourceKeyDataHashAppliesToResource
		{
			get
			{
				return this.GetLookup<Resource>( "core:resourceKeyDataHashAppliesToResource", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Resource>( "core:resourceKeyDataHashAppliesToResource", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ResourceKey ResourceKeyDataHashAppliesToResourceKey
		{
			get
			{
				return this.GetLookup<ResourceKey>( "core:resourceKeyDataHashAppliesToResourceKey", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourceKey>( "core:resourceKeyDataHashAppliesToResourceKey", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourceKeyDataHash Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceKeyDataHash type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceKeyDataHash_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceKeyDataHash");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Represents a relationship and direction that are are part of a resource key.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceKeyRelationship")]
	public class ResourceKeyRelationship : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceKeyRelationship( )
			: base( typeof( ResourceKeyRelationship ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceKeyRelationship( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceKeyRelationship Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity FieldsInRelationshipKey_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:fieldsInRelationshipKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity KeyRelationship_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:keyRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity KeyRelationshipDirection_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:keyRelationshipDirection" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity RelationshipInResourceKey_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:relationshipInResourceKey" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceKeyRelationship.Alias_Field, ResourceKeyRelationship.CanDelete_Field, ResourceKeyRelationship.CanModify_Field, ResourceKeyRelationship.CanModifyProtectedResource_Field, ResourceKeyRelationship.CreatedDate_Field, ResourceKeyRelationship.Description_Field, ResourceKeyRelationship.ModifiedDate_Field, ResourceKeyRelationship.Name_Field, ResourceKeyRelationship.CreatedBy_Field, ResourceKeyRelationship.FieldsInRelationshipKey_Field, ResourceKeyRelationship.Flags_Field, ResourceKeyRelationship.IndirectInSolution_Field, ResourceKeyRelationship.InSolution_Field, ResourceKeyRelationship.InStructureLevel_Field, ResourceKeyRelationship.IsOfType_Field, ResourceKeyRelationship.IsRootForStructureView_Field, ResourceKeyRelationship.KeyRelationship_Field, ResourceKeyRelationship.KeyRelationshipDirection_Field, ResourceKeyRelationship.LastModifiedBy_Field, ResourceKeyRelationship.RelationshipInResourceKey_Field, ResourceKeyRelationship.ResourceConsoleBehavior_Field, ResourceKeyRelationship.ResourceHasResourceKeyDataHashes_Field, ResourceKeyRelationship.ResourceInFolder_Field, ResourceKeyRelationship.SecurityOwner_Field, ResourceKeyRelationship.SelectionBehavior_Field, ResourceKeyRelationship.ShortcutInFolder_Field };
			}
		}

		#endregion ResourceKeyRelationship Public Fields

		#region ResourceKeyRelationship Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Field> FieldsInRelationshipKey
		{
			get
			{
				return this.GetRelationships<Field>( "core:fieldsInRelationshipKey", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:fieldsInRelationshipKey", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Relationship KeyRelationship
		{
			get
			{
				return this.GetLookup<Relationship>( "core:keyRelationship", Direction.Forward );
			}
			set
			{
				this.SetLookup<Relationship>( "core:keyRelationship", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public DirectionEnum KeyRelationshipDirection
		{
			get
			{
				return this.GetLookup<DirectionEnum>( "core:keyRelationshipDirection", Direction.Forward );
			}
			set
			{
				this.SetLookup<DirectionEnum>( "core:keyRelationshipDirection", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public DirectionEnum_Enumeration? KeyRelationshipDirection_Enum
		{
			get
			{
				return GetEnum<DirectionEnum, DirectionEnum_Enumeration>( "core:keyRelationshipDirection", Direction.Forward, DirectionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:keyRelationshipDirection", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:keyRelationshipDirection", new EntityRelationship<DirectionEnum>( EDC.ReadiNow.Model.Entity.Get<DirectionEnum>( EntityRefHelper.ConvertAliasWithNamespace( DirectionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ResourceKey RelationshipInResourceKey
		{
			get
			{
				return this.GetLookup<ResourceKey>( "core:relationshipInResourceKey", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourceKey>( "core:relationshipInResourceKey", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourceKeyRelationship Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceKeyRelationship type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceKeyRelationship_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceKeyRelationship");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An argument that can hold a list of references
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceListArgument")]
	public class ResourceListArgument : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceListArgument( )
			: base( typeof( ResourceListArgument ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceListArgument( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceListArgument Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ArgumentIsMandatory_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.ArgumentIsMandatory_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DefaultExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.DefaultExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromArgument_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.ArgumentInstanceFromArgument_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ConformsToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TypedArgument.ConformsToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InputToActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.InputToActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity InternalsFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.InternalsFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity OutputFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.OutputFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity PopulatedByExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.PopulatedByExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceListParameterValues_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceListParameterValues" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity VariableInWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActivityArgument.VariableInWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceListArgument.Alias_Field, ResourceListArgument.ArgumentIsMandatory_Field, ResourceListArgument.CanDelete_Field, ResourceListArgument.CanModify_Field, ResourceListArgument.CreatedDate_Field, ResourceListArgument.DefaultExpression_Field, ResourceListArgument.Description_Field, ResourceListArgument.ModifiedDate_Field, ResourceListArgument.Name_Field, ResourceListArgument.ArgumentInstanceFromArgument_Field, ResourceListArgument.ConformsToType_Field, ResourceListArgument.CreatedBy_Field, ResourceListArgument.Flags_Field, ResourceListArgument.IndirectInSolution_Field, ResourceListArgument.InputToActivity_Field, ResourceListArgument.InSolution_Field, ResourceListArgument.InStructureLevel_Field, ResourceListArgument.InternalsFromActivity_Field, ResourceListArgument.IsOfType_Field, ResourceListArgument.IsRootForStructureView_Field, ResourceListArgument.LastModifiedBy_Field, ResourceListArgument.OutputFromActivity_Field, ResourceListArgument.PopulatedByExpression_Field, ResourceListArgument.ResourceConsoleBehavior_Field, ResourceListArgument.ResourceHasResourceKeyDataHashes_Field, ResourceListArgument.ResourceInFolder_Field, ResourceListArgument.ResourceListParameterValues_Field, ResourceListArgument.SecurityOwner_Field, ResourceListArgument.SelectionBehavior_Field, ResourceListArgument.ShortcutInFolder_Field, ResourceListArgument.VariableInWorkflow_Field };
			}
		}

		#endregion ResourceListArgument Public Fields

		#region ResourceListArgument Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ArgumentIsMandatory
		{
			get
			{
				return ( bool? ) this.GetField( "core:argumentIsMandatory" );
			}
			set
			{
				this.SetField( "core:argumentIsMandatory", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DefaultExpression
		{
			get
			{
				return ( string ) this.GetField( "core:defaultExpression" );
			}
			set
			{
				this.SetField( "core:defaultExpression", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromArgument
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromArgument", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromArgument", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType ConformsToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:conformsToType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:conformsToType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public EntityWithArgsAndExits InputToActivity
		{
			get
			{
				return this.GetLookup<EntityWithArgsAndExits>( "core:inputToActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EntityWithArgsAndExits>( "core:inputToActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public EntityWithArgsAndExits InternalsFromActivity
		{
			get
			{
				return this.GetLookup<EntityWithArgsAndExits>( "core:internalsFromActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EntityWithArgsAndExits>( "core:internalsFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public EntityWithArgsAndExits OutputFromActivity
		{
			get
			{
				return this.GetLookup<EntityWithArgsAndExits>( "core:outputFromActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<EntityWithArgsAndExits>( "core:outputFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfExpression> PopulatedByExpression
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:populatedByExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:populatedByExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Resource> ResourceListParameterValues
		{
			get
			{
				return this.GetRelationships<Resource>( "core:resourceListParameterValues", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "core:resourceListParameterValues", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow VariableInWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:variableInWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:variableInWorkflow", value, Direction.Reverse );
			}
		}



		#endregion ResourceListArgument Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceListArgument type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceListArgument_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceListArgument");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A control that can be used to pick resources. E.g. a report or a structure view (Hirarchy object).
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourcePicker")]
	public class ResourcePicker : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourcePicker( )
			: base( typeof( ResourcePicker ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourcePicker( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourcePicker Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity IsDefaultPickerReportForTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:defaultPickerReport" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ReportUsesDefinition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportUsesDefinition" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ResourcePickerForReportConditionParameter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:conditionParameterPicker" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourcePicker.Alias_Field, ResourcePicker.CanDelete_Field, ResourcePicker.CanModify_Field, ResourcePicker.CreatedDate_Field, ResourcePicker.Description_Field, ResourcePicker.ModifiedDate_Field, ResourcePicker.Name_Field, ResourcePicker.CreatedBy_Field, ResourcePicker.Flags_Field, ResourcePicker.IndirectInSolution_Field, ResourcePicker.InSolution_Field, ResourcePicker.InStructureLevel_Field, ResourcePicker.IsDefaultPickerReportForTypes_Field, ResourcePicker.IsOfType_Field, ResourcePicker.IsRootForStructureView_Field, ResourcePicker.LastModifiedBy_Field, ResourcePicker.ReportUsesDefinition_Field, ResourcePicker.ResourceConsoleBehavior_Field, ResourcePicker.ResourceHasResourceKeyDataHashes_Field, ResourcePicker.ResourceInFolder_Field, ResourcePicker.ResourcePickerForReportConditionParameter_Field, ResourcePicker.SecurityOwner_Field, ResourcePicker.SelectionBehavior_Field, ResourcePicker.ShortcutInFolder_Field };
			}
		}

		#endregion ResourcePicker Public Fields

		#region ResourcePicker Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsDefaultPickerReportForTypes
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isDefaultPickerReportForTypes", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isDefaultPickerReportForTypes", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType ReportUsesDefinition
		{
			get
			{
				return this.GetLookup<EntityType>( "core:reportUsesDefinition", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:reportUsesDefinition", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ReportCondition> ResourcePickerForReportConditionParameter
		{
			get
			{
				return this.GetRelationships<ReportCondition>( "core:resourcePickerForReportConditionParameter", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ReportCondition>( "core:resourcePickerForReportConditionParameter", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourcePicker Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourcePicker( Report entity )
		{
			return entity.Cast<ResourcePicker>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourcePicker( StructureView entity )
		{
			return entity.Cast<ResourcePicker>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourcePicker type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourcePicker_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourcePicker");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A node in the report tree that returns resources.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceReportNode")]
	public class ResourceReportNode : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceReportNode( )
			: base( typeof( ResourceReportNode ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceReportNode( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceReportNode Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField ExactType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:exactType" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField TargetMustExist_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:targetMustExist" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField TargetNeedNotExist_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:targetNeedNotExist" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity NodeUsedByExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.NodeUsedByExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity NodeUsedByStructureViewExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.NodeUsedByStructureViewExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ParentAggregatedNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.ParentAggregatedNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ParentReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.ParentReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelatedReportNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ReportNode.RelatedReportNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceReportNodeType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceReportNodeType" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceReportNode.ExactType_Field, ResourceReportNode.TargetMustExist_Field, ResourceReportNode.TargetNeedNotExist_Field, ResourceReportNode.Alias_Field, ResourceReportNode.CanDelete_Field, ResourceReportNode.CanModify_Field, ResourceReportNode.CreatedDate_Field, ResourceReportNode.Description_Field, ResourceReportNode.ModifiedDate_Field, ResourceReportNode.Name_Field, ResourceReportNode.CreatedBy_Field, ResourceReportNode.Flags_Field, ResourceReportNode.IndirectInSolution_Field, ResourceReportNode.InSolution_Field, ResourceReportNode.InStructureLevel_Field, ResourceReportNode.IsOfType_Field, ResourceReportNode.IsRootForStructureView_Field, ResourceReportNode.LastModifiedBy_Field, ResourceReportNode.NodeUsedByExpression_Field, ResourceReportNode.NodeUsedByStructureViewExpression_Field, ResourceReportNode.ParentAggregatedNode_Field, ResourceReportNode.ParentReportNode_Field, ResourceReportNode.RelatedReportNodes_Field, ResourceReportNode.ResourceConsoleBehavior_Field, ResourceReportNode.ResourceHasResourceKeyDataHashes_Field, ResourceReportNode.ResourceInFolder_Field, ResourceReportNode.ResourceReportNodeType_Field, ResourceReportNode.SecurityOwner_Field, ResourceReportNode.SelectionBehavior_Field, ResourceReportNode.ShortcutInFolder_Field };
			}
		}

		#endregion ResourceReportNode Public Fields

		#region ResourceReportNode Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? ExactType
		{
			get
			{
				return ( bool? ) this.GetField( "core:exactType" );
			}
			set
			{
				this.SetField( "core:exactType", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? TargetMustExist
		{
			get
			{
				return ( bool? ) this.GetField( "core:targetMustExist" );
			}
			set
			{
				this.SetField( "core:targetMustExist", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? TargetNeedNotExist
		{
			get
			{
				return ( bool? ) this.GetField( "core:targetNeedNotExist" );
			}
			set
			{
				this.SetField( "core:targetNeedNotExist", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<NodeExpression> NodeUsedByExpression
		{
			get
			{
				return this.GetRelationships<NodeExpression>( "core:nodeUsedByExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<NodeExpression>( "core:nodeUsedByExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<StructureViewExpression> NodeUsedByStructureViewExpression
		{
			get
			{
				return this.GetRelationships<StructureViewExpression>( "core:nodeUsedByStructureViewExpression", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureViewExpression>( "core:nodeUsedByStructureViewExpression", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public AggregateReportNode ParentAggregatedNode
		{
			get
			{
				return this.GetLookup<AggregateReportNode>( "core:parentAggregatedNode", Direction.Reverse );
			}
			set
			{
				this.SetLookup<AggregateReportNode>( "core:parentAggregatedNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public ReportNode ParentReportNode
		{
			get
			{
				return this.GetLookup<ReportNode>( "core:parentReportNode", Direction.Reverse );
			}
			set
			{
				this.SetLookup<ReportNode>( "core:parentReportNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ReportNode> RelatedReportNodes
		{
			get
			{
				return this.GetRelationships<ReportNode>( "core:relatedReportNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ReportNode>( "core:relatedReportNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType ResourceReportNodeType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:resourceReportNodeType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:resourceReportNodeType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourceReportNode Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceReportNode( DerivedTypeReportNode entity )
		{
			return entity.Cast<ResourceReportNode>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceReportNode( RelationshipReportNode entity )
		{
			return entity.Cast<ResourceReportNode>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceReportNode type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceReportNode_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceReportNode");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An interface type that holds filtering information related to resources for triggering and auditing.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceTriggerFilterDef")]
	public class ResourceTriggerFilterDef : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceTriggerFilterDef( )
			: base( typeof( ResourceTriggerFilterDef ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceTriggerFilterDef( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceTriggerFilterDef Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RtfdRunInForeground_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:rtfdRunInForeground" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TriggerEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnableableItem.TriggerEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity TriggeredOnType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:triggeredOnType" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity UpdatedFieldsToTriggerOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:updatedFieldsToTriggerOn" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity UpdatedRelationshipsToTriggerOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:updatedRelationshipsToTriggerOn" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceTriggerFilterDef.RtfdRunInForeground_Field, ResourceTriggerFilterDef.Alias_Field, ResourceTriggerFilterDef.CanDelete_Field, ResourceTriggerFilterDef.CanModify_Field, ResourceTriggerFilterDef.CreatedDate_Field, ResourceTriggerFilterDef.Description_Field, ResourceTriggerFilterDef.ModifiedDate_Field, ResourceTriggerFilterDef.Name_Field, ResourceTriggerFilterDef.TriggerEnabled_Field, ResourceTriggerFilterDef.CreatedBy_Field, ResourceTriggerFilterDef.Flags_Field, ResourceTriggerFilterDef.IndirectInSolution_Field, ResourceTriggerFilterDef.InSolution_Field, ResourceTriggerFilterDef.InStructureLevel_Field, ResourceTriggerFilterDef.IsOfType_Field, ResourceTriggerFilterDef.IsRootForStructureView_Field, ResourceTriggerFilterDef.LastModifiedBy_Field, ResourceTriggerFilterDef.ResourceConsoleBehavior_Field, ResourceTriggerFilterDef.ResourceHasResourceKeyDataHashes_Field, ResourceTriggerFilterDef.ResourceInFolder_Field, ResourceTriggerFilterDef.SecurityOwner_Field, ResourceTriggerFilterDef.SelectionBehavior_Field, ResourceTriggerFilterDef.ShortcutInFolder_Field, ResourceTriggerFilterDef.TriggeredOnType_Field, ResourceTriggerFilterDef.UpdatedFieldsToTriggerOn_Field, ResourceTriggerFilterDef.UpdatedRelationshipsToTriggerOn_Field };
			}
		}

		#endregion ResourceTriggerFilterDef Public Fields

		#region ResourceTriggerFilterDef Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RtfdRunInForeground
		{
			get
			{
				return ( bool? ) this.GetField( "core:rtfdRunInForeground" );
			}
			set
			{
				this.SetField( "core:rtfdRunInForeground", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TriggerEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:triggerEnabled" );
			}
			set
			{
				this.SetField( "core:triggerEnabled", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType TriggeredOnType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:triggeredOnType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:triggeredOnType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Field> UpdatedFieldsToTriggerOn
		{
			get
			{
				return this.GetRelationships<Field>( "core:updatedFieldsToTriggerOn", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:updatedFieldsToTriggerOn", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Relationship> UpdatedRelationshipsToTriggerOn
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:updatedRelationshipsToTriggerOn", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:updatedRelationshipsToTriggerOn", value, Direction.Forward );
			}
		}



		#endregion ResourceTriggerFilterDef Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceTriggerFilterDef( RecordChangeAuditPolicy entity )
		{
			return entity.Cast<ResourceTriggerFilterDef>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceTriggerFilterDef( WfTriggerUserUpdatesResource entity )
		{
			return entity.Cast<ResourceTriggerFilterDef>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceTriggerFilterDef type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceTriggerFilterDef_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceTriggerFilterDef");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// The 'Resource Viewer' type
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:resourceViewer")]
	public class ResourceViewer : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ResourceViewer( )
			: base( typeof( ResourceViewer ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ResourceViewer( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ResourceViewer Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CanCreate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:canCreate" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField CanCreateDerivedTypes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:canCreateDerivedTypes" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideAddButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideAddButton" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideNewButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideNewButton" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideRemoveButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideRemoveButton" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceViewerConsoleForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceViewerConsoleForm" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ResourceViewerTabletForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:resourceViewerTabletForm" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ResourceViewer.CanCreate_Field, ResourceViewer.CanCreateDerivedTypes_Field, ResourceViewer.HideAddButton_Field, ResourceViewer.HideNewButton_Field, ResourceViewer.HideRemoveButton_Field, ResourceViewer.Alias_Field, ResourceViewer.CanDelete_Field, ResourceViewer.CanModify_Field, ResourceViewer.CreatedDate_Field, ResourceViewer.Description_Field, ResourceViewer.ModifiedDate_Field, ResourceViewer.Name_Field, ResourceViewer.CreatedBy_Field, ResourceViewer.Flags_Field, ResourceViewer.IndirectInSolution_Field, ResourceViewer.InSolution_Field, ResourceViewer.InStructureLevel_Field, ResourceViewer.IsOfType_Field, ResourceViewer.IsRootForStructureView_Field, ResourceViewer.LastModifiedBy_Field, ResourceViewer.ResourceConsoleBehavior_Field, ResourceViewer.ResourceHasResourceKeyDataHashes_Field, ResourceViewer.ResourceInFolder_Field, ResourceViewer.ResourceViewerConsoleForm_Field, ResourceViewer.ResourceViewerTabletForm_Field, ResourceViewer.SecurityOwner_Field, ResourceViewer.SelectionBehavior_Field, ResourceViewer.ShortcutInFolder_Field };
			}
		}

		#endregion ResourceViewer Public Fields

		#region ResourceViewer Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CanCreate
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreate" );
			}
			set
			{
				this.SetField( "core:canCreate", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? CanCreateDerivedTypes
		{
			get
			{
				return ( bool? ) this.GetField( "core:canCreateDerivedTypes" );
			}
			set
			{
				this.SetField( "core:canCreateDerivedTypes", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideAddButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideAddButton" );
			}
			set
			{
				this.SetField( "core:hideAddButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideNewButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideNewButton" );
			}
			set
			{
				this.SetField( "core:hideNewButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideRemoveButton
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideRemoveButton" );
			}
			set
			{
				this.SetField( "core:hideRemoveButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerConsoleForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerConsoleForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public CustomEditForm ResourceViewerTabletForm
		{
			get
			{
				return this.GetLookup<CustomEditForm>( "core:resourceViewerTabletForm", Direction.Forward );
			}
			set
			{
				this.SetLookup<CustomEditForm>( "core:resourceViewerTabletForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion ResourceViewer Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( CalculatedRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( ChoiceQuestionOptionsEditor entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( ChoiceRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( DropDownRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( ImageRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( InlineRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( MultiChoiceRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( MultilineRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( RelationshipControlOnForm entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( Report entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( StructureViewRelationshipControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( SubjectNavigationAccessEditor entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( SubjectRecordAccessEditor entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( SurveySectionsEditor entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( TabRelationshipRenderControl entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( TargetCampaignSurveyTakerPicker entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator ResourceViewer( TargetCampaignTargetsEditor entity )
		{
			return entity.Cast<ResourceViewer>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ResourceViewer type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ResourceViewer_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:resourceViewer");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Assign a survey result to a person for them to review.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:reviewSurveyActivity")]
	public class ReviewSurveyActivity : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public ReviewSurveyActivity( )
			: base( typeof( ReviewSurveyActivity ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal ReviewSurveyActivity( IActivationData activationData )
			: base( activationData )
		{

		}

		#region ReviewSurveyActivity Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DesignerData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.DesignerData_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ArgumentInstanceFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainingWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ContainingWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExitPoints_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.ExitPoints_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExpressionMap_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ExpressionMap_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ForwardTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ForwardTransitions_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InternalArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InternalArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OutputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.OutputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TransitionsForActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.TransitionsForActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { ReviewSurveyActivity.Alias_Field, ReviewSurveyActivity.CanDelete_Field, ReviewSurveyActivity.CanModify_Field, ReviewSurveyActivity.CanModifyProtectedResource_Field, ReviewSurveyActivity.CreatedDate_Field, ReviewSurveyActivity.Description_Field, ReviewSurveyActivity.DesignerData_Field, ReviewSurveyActivity.ModifiedDate_Field, ReviewSurveyActivity.Name_Field, ReviewSurveyActivity.ArgumentInstanceFromActivity_Field, ReviewSurveyActivity.ContainingWorkflow_Field, ReviewSurveyActivity.CreatedBy_Field, ReviewSurveyActivity.ExitPoints_Field, ReviewSurveyActivity.ExpressionMap_Field, ReviewSurveyActivity.Flags_Field, ReviewSurveyActivity.ForwardTransitions_Field, ReviewSurveyActivity.IndirectInSolution_Field, ReviewSurveyActivity.InputArguments_Field, ReviewSurveyActivity.InSolution_Field, ReviewSurveyActivity.InStructureLevel_Field, ReviewSurveyActivity.InternalArguments_Field, ReviewSurveyActivity.IsOfType_Field, ReviewSurveyActivity.IsRootForStructureView_Field, ReviewSurveyActivity.LastModifiedBy_Field, ReviewSurveyActivity.OutputArguments_Field, ReviewSurveyActivity.ResourceConsoleBehavior_Field, ReviewSurveyActivity.ResourceHasResourceKeyDataHashes_Field, ReviewSurveyActivity.ResourceInFolder_Field, ReviewSurveyActivity.SecurityOwner_Field, ReviewSurveyActivity.SelectionBehavior_Field, ReviewSurveyActivity.ShortcutInFolder_Field, ReviewSurveyActivity.TransitionsForActivity_Field };
			}
		}

		#endregion ReviewSurveyActivity Public Fields

		#region ReviewSurveyActivity Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DesignerData
		{
			get
			{
				return ( string ) this.GetField( "core:designerData" );
			}
			set
			{
				this.SetField( "core:designerData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromActivity
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow ContainingWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:containingWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:containingWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ExitPoint> ExitPoints
		{
			get
			{
				return this.GetRelationships<ExitPoint>( "core:exitPoints", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ExitPoint>( "core:exitPoints", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<WfExpression> ExpressionMap
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:expressionMap", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:expressionMap", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ForwardTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:forwardTransitions", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:forwardTransitions", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:inputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:inputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InternalArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:internalArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:internalArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> OutputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:outputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:outputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Transition> TransitionsForActivity
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitionsForActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitionsForActivity", value, Direction.Reverse );
			}
		}



		#endregion ReviewSurveyActivity Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the ReviewSurveyActivity type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType ReviewSurveyActivity_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:reviewSurveyActivity");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Represents a user role definition
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:role")]
	public class Role : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public Role( )
			: base( typeof( Role ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal Role( IActivationData activationData )
			: base( activationData )
		{

		}

		#region Role Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity AllowAccess_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Subject.AllowAccess_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity IncludedByRoles_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:includesRoles" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity IncludesRoles_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:includesRoles" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RoleFromAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:actionRequiresRole" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RoleMembers_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:userHasRole" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { Role.Alias_Field, Role.CanDelete_Field, Role.CanModify_Field, Role.CreatedDate_Field, Role.Description_Field, Role.ModifiedDate_Field, Role.Name_Field, Role.AllowAccess_Field, Role.CreatedBy_Field, Role.Flags_Field, Role.IncludedByRoles_Field, Role.IncludesRoles_Field, Role.IndirectInSolution_Field, Role.InSolution_Field, Role.InStructureLevel_Field, Role.IsOfType_Field, Role.IsRootForStructureView_Field, Role.LastModifiedBy_Field, Role.ResourceConsoleBehavior_Field, Role.ResourceHasResourceKeyDataHashes_Field, Role.ResourceInFolder_Field, Role.RoleFromAction_Field, Role.RoleMembers_Field, Role.SecurityOwner_Field, Role.SelectionBehavior_Field, Role.ShortcutInFolder_Field };
			}
		}

		#endregion Role Public Fields

		#region Role Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<AccessRule> AllowAccess
		{
			get
			{
				return this.GetRelationships<AccessRule>( "core:allowAccess", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<AccessRule>( "core:allowAccess", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Role> IncludedByRoles
		{
			get
			{
				return this.GetRelationships<Role>( "core:includedByRoles", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Role>( "core:includedByRoles", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Role> IncludesRoles
		{
			get
			{
				return this.GetRelationships<Role>( "core:includesRoles", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Role>( "core:includesRoles", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<ActionMenuItem> RoleFromAction
		{
			get
			{
				return this.GetRelationships<ActionMenuItem>( "core:roleFromAction", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenuItem>( "core:roleFromAction", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<UserAccount> RoleMembers
		{
			get
			{
				return this.GetRelationships<UserAccount>( "core:roleMembers", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<UserAccount>( "core:roleMembers", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion Role Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the Role type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType Role_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:role");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A trace log entry for a workflow run.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:runTraceLogEntry")]
	public class RunTraceLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public RunTraceLogEntry( )
			: base( typeof( RunTraceLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal RunTraceLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region RunTraceLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField WorkflowRunTraceStep_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:workflowRunTraceStep" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField LogEventTime_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEventTime_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField WrleStepName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WrleStepName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField WrleWorkflowName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WrleWorkflowName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity WorkflowRunBeingLogged_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WorkflowRunBeingLogged_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity WorkflowRunInError_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WorkflowRunInError_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { RunTraceLogEntry.WorkflowRunTraceStep_Field, RunTraceLogEntry.Alias_Field, RunTraceLogEntry.CanDelete_Field, RunTraceLogEntry.CanModify_Field, RunTraceLogEntry.CreatedDate_Field, RunTraceLogEntry.Description_Field, RunTraceLogEntry.LogEventTime_Field, RunTraceLogEntry.ModifiedDate_Field, RunTraceLogEntry.Name_Field, RunTraceLogEntry.WrleStepName_Field, RunTraceLogEntry.WrleWorkflowName_Field, RunTraceLogEntry.CreatedBy_Field, RunTraceLogEntry.Flags_Field, RunTraceLogEntry.IndirectInSolution_Field, RunTraceLogEntry.InSolution_Field, RunTraceLogEntry.InStructureLevel_Field, RunTraceLogEntry.IsOfType_Field, RunTraceLogEntry.IsRootForStructureView_Field, RunTraceLogEntry.LastModifiedBy_Field, RunTraceLogEntry.LogEntrySeverity_Field, RunTraceLogEntry.ResourceConsoleBehavior_Field, RunTraceLogEntry.ResourceHasResourceKeyDataHashes_Field, RunTraceLogEntry.ResourceInFolder_Field, RunTraceLogEntry.SecurityOwner_Field, RunTraceLogEntry.SelectionBehavior_Field, RunTraceLogEntry.ShortcutInFolder_Field, RunTraceLogEntry.WorkflowRunBeingLogged_Field, RunTraceLogEntry.WorkflowRunInError_Field };
			}
		}

		#endregion RunTraceLogEntry Public Fields

		#region RunTraceLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? WorkflowRunTraceStep
		{
			get
			{
				return ( int? ) this.GetField( "core:workflowRunTraceStep" );
			}
			set
			{
				this.SetField( "core:workflowRunTraceStep", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? LogEventTime
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:logEventTime" );
			}
			set
			{
				this.SetField( "core:logEventTime", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string WrleStepName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleStepName" );
			}
			set
			{
				this.SetField( "core:wrleStepName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string WrleWorkflowName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleWorkflowName" );
			}
			set
			{
				this.SetField( "core:wrleWorkflowName", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public LogSeverityEnum LogEntrySeverity
		{
			get
			{
				return this.GetLookup<LogSeverityEnum>( "core:logEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<LogSeverityEnum>( "core:logEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public LogSeverityEnum_Enumeration? LogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<LogSeverityEnum, LogSeverityEnum_Enumeration>( "core:logEntrySeverity", Direction.Forward, LogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:logEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:logEntrySeverity", new EntityRelationship<LogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<LogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( LogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public WorkflowRun WorkflowRunBeingLogged
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunBeingLogged", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunBeingLogged", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public WorkflowRun WorkflowRunInError
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunInError", Direction.Reverse );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunInError", value, Direction.Reverse );
			}
		}



		#endregion RunTraceLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the RunTraceLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType RunTraceLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:runTraceLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

}