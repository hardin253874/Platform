//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Copyright 2011-2016 Global Software Innovation Pty Ltd
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

using EDC.ReadiNow.Model.Internal;

namespace EDC.ReadiNow.Model
{
	/// <summary>
	/// Implementation for the <see cref="VerticalStackContainerControl" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:verticalStackContainerControl")]
	public class VerticalStackContainerControl : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public VerticalStackContainerControl( )
			: base( typeof( VerticalStackContainerControl ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal VerticalStackContainerControl( IActivationData activationData )
			: base( activationData )
		{

		}

		#region VerticalStackContainerControl Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ContainedControlsOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.StructureControlOnForm.ContainedControlsOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { VerticalStackContainerControl.Alias_Field, VerticalStackContainerControl.CanDelete_Field, VerticalStackContainerControl.CanModify_Field, VerticalStackContainerControl.CreatedDate_Field, VerticalStackContainerControl.Description_Field, VerticalStackContainerControl.HideLabel_Field, VerticalStackContainerControl.MandatoryControl_Field, VerticalStackContainerControl.ModifiedDate_Field, VerticalStackContainerControl.Name_Field, VerticalStackContainerControl.ReadOnlyControl_Field, VerticalStackContainerControl.RenderingBackgroundColor_Field, VerticalStackContainerControl.RenderingHeight_Field, VerticalStackContainerControl.RenderingOrdinal_Field, VerticalStackContainerControl.RenderingWidth_Field, VerticalStackContainerControl.ShowControlHelpText_Field, VerticalStackContainerControl.ContainedControlsOnForm_Field, VerticalStackContainerControl.ContainedWithinStructureControlOnForm_Field, VerticalStackContainerControl.ControlRelatedEntityDataPathNodes_Field, VerticalStackContainerControl.CreatedBy_Field, VerticalStackContainerControl.Flags_Field, VerticalStackContainerControl.IndirectInSolution_Field, VerticalStackContainerControl.InSolution_Field, VerticalStackContainerControl.InStructureLevel_Field, VerticalStackContainerControl.IsOfType_Field, VerticalStackContainerControl.IsRootForStructureView_Field, VerticalStackContainerControl.LastModifiedBy_Field, VerticalStackContainerControl.ResourceConsoleBehavior_Field, VerticalStackContainerControl.ResourceHasResourceKeyDataHashes_Field, VerticalStackContainerControl.ResourceInFolder_Field, VerticalStackContainerControl.SecurityOwner_Field, VerticalStackContainerControl.SelectionBehavior_Field, VerticalStackContainerControl.ShortcutInFolder_Field };
			}
		}

		#endregion VerticalStackContainerControl Public Fields

		#region VerticalStackContainerControl Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ControlOnForm> ContainedControlsOnForm
		{
			get
			{
				return this.GetRelationships<ControlOnForm>( "console:containedControlsOnForm", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ControlOnForm>( "console:containedControlsOnForm", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion VerticalStackContainerControl Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the VerticalStackContainerControl type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType VerticalStackContainerControl_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:verticalStackContainerControl");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Describes a relationship that is composed implicitly built from other relationships via one or more reports.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:virtualRelationship")]
	public class VirtualRelationship : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public VirtualRelationship( )
			: base( typeof( VirtualRelationship ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal VirtualRelationship( IActivationData activationData )
			: base( activationData )
		{

		}

		#region VirtualRelationship Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CascadeDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.CascadeDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CascadeDeleteTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.CascadeDeleteTo_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField DefaultFromUseCurrent_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.DefaultFromUseCurrent_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField DefaultToUseCurrent_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.DefaultToUseCurrent_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ExcludeFromPublish_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ExcludeFromPublish_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField FromName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.FromName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField FromScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.FromScriptName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField GenerateCode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.GenerateCode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnFromType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.HideOnFromType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnFromTypeDefaultForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.HideOnFromTypeDefaultForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.HideOnToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideOnToTypeDefaultForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.HideOnToTypeDefaultForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ImplicitInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ImplicitInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsRelationshipReadOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.IsRelationshipReadOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField RelationshipIsMandatory_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RelationshipIsMandatory_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField ReverseAlias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ReverseAlias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReverseImplicitInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ReverseImplicitInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField RevRelationshipIsMandatory_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RevRelationshipIsMandatory_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SecuresFrom_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.SecuresFrom_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SecuresFromReadOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.SecuresFromReadOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SecuresTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.SecuresTo_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SecuresToReadOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.SecuresToReadOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowRelationshipHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ShowRelationshipHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField SystemTenantOnly_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Schema.SystemTenantOnly_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ToName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ToName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ToScriptName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ToScriptName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField WarnOnDeleteTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.WarnOnDeleteTo_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Cardinality_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.Cardinality_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CloneAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.CloneAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity DefaultPointTo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.DefaultPointTo_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity FromType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.FromType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity FromTypeDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.FromTypeDefaultValue_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity IsStructureHierarchyRelationshipFor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.IsStructureHierarchyRelationshipFor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity IsStructureMembersRelationshipFor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.IsStructureMembersRelationshipFor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipInFromTypeGroup_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RelationshipInFromTypeGroup_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity RelationshipInKey_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RelationshipInKey_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelationshipInToTypeGroup_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RelationshipInToTypeGroup_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity RelationshipUsedByApiMappings_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RelationshipUsedByApiMappings_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity RelType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RelType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ReverseCloneAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ReverseCloneAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity RRenderingControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.RRenderingControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ToType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ToTypeDefaultValue_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.ToTypeDefaultValue_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity UsedByRelationshipReportNode_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Relationship.UsedByRelationshipReportNode_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity VirtualRelationshipReport_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:reportUsedByVirtualRelationship" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { VirtualRelationship.Alias_Field, VirtualRelationship.CanDelete_Field, VirtualRelationship.CanModify_Field, VirtualRelationship.CanModifyProtectedResource_Field, VirtualRelationship.CascadeDelete_Field, VirtualRelationship.CascadeDeleteTo_Field, VirtualRelationship.CreatedDate_Field, VirtualRelationship.DefaultFromUseCurrent_Field, VirtualRelationship.DefaultToUseCurrent_Field, VirtualRelationship.Description_Field, VirtualRelationship.ExcludeFromPublish_Field, VirtualRelationship.FromName_Field, VirtualRelationship.FromScriptName_Field, VirtualRelationship.GenerateCode_Field, VirtualRelationship.HideOnFromType_Field, VirtualRelationship.HideOnFromTypeDefaultForm_Field, VirtualRelationship.HideOnToType_Field, VirtualRelationship.HideOnToTypeDefaultForm_Field, VirtualRelationship.ImplicitInSolution_Field, VirtualRelationship.IsRelationshipReadOnly_Field, VirtualRelationship.ModifiedDate_Field, VirtualRelationship.Name_Field, VirtualRelationship.RelationshipIsMandatory_Field, VirtualRelationship.ReverseAlias_Field, VirtualRelationship.ReverseImplicitInSolution_Field, VirtualRelationship.RevRelationshipIsMandatory_Field, VirtualRelationship.SecuresFrom_Field, VirtualRelationship.SecuresFromReadOnly_Field, VirtualRelationship.SecuresTo_Field, VirtualRelationship.SecuresToReadOnly_Field, VirtualRelationship.ShowRelationshipHelpText_Field, VirtualRelationship.SystemTenantOnly_Field, VirtualRelationship.ToName_Field, VirtualRelationship.ToScriptName_Field, VirtualRelationship.WarnOnDeleteTo_Field, VirtualRelationship.Cardinality_Field, VirtualRelationship.CloneAction_Field, VirtualRelationship.CreatedBy_Field, VirtualRelationship.DefaultPointTo_Field, VirtualRelationship.Flags_Field, VirtualRelationship.FromType_Field, VirtualRelationship.FromTypeDefaultValue_Field, VirtualRelationship.IndirectInSolution_Field, VirtualRelationship.InSolution_Field, VirtualRelationship.InStructureLevel_Field, VirtualRelationship.IsOfType_Field, VirtualRelationship.IsRootForStructureView_Field, VirtualRelationship.IsStructureHierarchyRelationshipFor_Field, VirtualRelationship.IsStructureMembersRelationshipFor_Field, VirtualRelationship.LastModifiedBy_Field, VirtualRelationship.RelationshipInFromTypeGroup_Field, VirtualRelationship.RelationshipInKey_Field, VirtualRelationship.RelationshipInToTypeGroup_Field, VirtualRelationship.RelationshipUsedByApiMappings_Field, VirtualRelationship.RelType_Field, VirtualRelationship.ResourceConsoleBehavior_Field, VirtualRelationship.ResourceHasResourceKeyDataHashes_Field, VirtualRelationship.ResourceInFolder_Field, VirtualRelationship.ReverseCloneAction_Field, VirtualRelationship.RRenderingControl_Field, VirtualRelationship.SecurityOwner_Field, VirtualRelationship.SelectionBehavior_Field, VirtualRelationship.ShortcutInFolder_Field, VirtualRelationship.ToType_Field, VirtualRelationship.ToTypeDefaultValue_Field, VirtualRelationship.UsedByRelationshipReportNode_Field, VirtualRelationship.VirtualRelationshipReport_Field };
			}
		}

		#endregion VirtualRelationship Public Fields

		#region VirtualRelationship Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CascadeDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:cascadeDelete" );
			}
			set
			{
				this.SetField( "core:cascadeDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CascadeDeleteTo
		{
			get
			{
				return ( bool? ) this.GetField( "core:cascadeDeleteTo" );
			}
			set
			{
				this.SetField( "core:cascadeDeleteTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? DefaultFromUseCurrent
		{
			get
			{
				return ( bool? ) this.GetField( "core:defaultFromUseCurrent" );
			}
			set
			{
				this.SetField( "core:defaultFromUseCurrent", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? DefaultToUseCurrent
		{
			get
			{
				return ( bool? ) this.GetField( "core:defaultToUseCurrent" );
			}
			set
			{
				this.SetField( "core:defaultToUseCurrent", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ExcludeFromPublish
		{
			get
			{
				return ( bool? ) this.GetField( "core:excludeFromPublish" );
			}
			set
			{
				this.SetField( "core:excludeFromPublish", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string FromName
		{
			get
			{
				return ( string ) this.GetField( "core:fromName" );
			}
			set
			{
				this.SetField( "core:fromName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string FromScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:fromScriptName" );
			}
			set
			{
				this.SetField( "core:fromScriptName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? GenerateCode
		{
			get
			{
				return ( bool? ) this.GetField( "core:generateCode" );
			}
			set
			{
				this.SetField( "core:generateCode", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnFromType
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnFromType" );
			}
			set
			{
				this.SetField( "core:hideOnFromType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnFromTypeDefaultForm
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnFromTypeDefaultForm" );
			}
			set
			{
				this.SetField( "core:hideOnFromTypeDefaultForm", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnToType
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnToType" );
			}
			set
			{
				this.SetField( "core:hideOnToType", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideOnToTypeDefaultForm
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnToTypeDefaultForm" );
			}
			set
			{
				this.SetField( "core:hideOnToTypeDefaultForm", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ImplicitInSolution
		{
			get
			{
				return ( bool? ) this.GetField( "core:implicitInSolution" );
			}
			set
			{
				this.SetField( "core:implicitInSolution", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsRelationshipReadOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:isRelationshipReadOnly" );
			}
			set
			{
				this.SetField( "core:isRelationshipReadOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? RelationshipIsMandatory
		{
			get
			{
				return ( bool? ) this.GetField( "core:relationshipIsMandatory" );
			}
			set
			{
				this.SetField( "core:relationshipIsMandatory", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ReverseAlias
		{
			get
			{
				return ( string ) this.GetField( "core:reverseAlias" );
			}
			set
			{
				this.SetField( "core:reverseAlias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReverseImplicitInSolution
		{
			get
			{
				return ( bool? ) this.GetField( "core:reverseImplicitInSolution" );
			}
			set
			{
				this.SetField( "core:reverseImplicitInSolution", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? RevRelationshipIsMandatory
		{
			get
			{
				return ( bool? ) this.GetField( "core:revRelationshipIsMandatory" );
			}
			set
			{
				this.SetField( "core:revRelationshipIsMandatory", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SecuresFrom
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesFrom" );
			}
			set
			{
				this.SetField( "core:securesFrom", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SecuresFromReadOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesFromReadOnly" );
			}
			set
			{
				this.SetField( "core:securesFromReadOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SecuresTo
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesTo" );
			}
			set
			{
				this.SetField( "core:securesTo", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SecuresToReadOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:securesToReadOnly" );
			}
			set
			{
				this.SetField( "core:securesToReadOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowRelationshipHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "core:showRelationshipHelpText" );
			}
			set
			{
				this.SetField( "core:showRelationshipHelpText", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? SystemTenantOnly
		{
			get
			{
				return ( bool? ) this.GetField( "core:systemTenantOnly" );
			}
			set
			{
				this.SetField( "core:systemTenantOnly", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ToName
		{
			get
			{
				return ( string ) this.GetField( "core:toName" );
			}
			set
			{
				this.SetField( "core:toName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ToScriptName
		{
			get
			{
				return ( string ) this.GetField( "core:toScriptName" );
			}
			set
			{
				this.SetField( "core:toScriptName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? WarnOnDeleteTo
		{
			get
			{
				return ( bool? ) this.GetField( "core:warnOnDeleteTo" );
			}
			set
			{
				this.SetField( "core:warnOnDeleteTo", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CardinalityEnum Cardinality
		{
			get
			{
				return this.GetLookup<CardinalityEnum>( "core:cardinality", Direction.Forward );
			}
			set
			{
				this.SetLookup<CardinalityEnum>( "core:cardinality", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public CardinalityEnum_Enumeration? Cardinality_Enum
		{
			get
			{
				return GetEnum<CardinalityEnum, CardinalityEnum_Enumeration>( "core:cardinality", Direction.Forward, CardinalityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:cardinality", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:cardinality", new EntityRelationship<CardinalityEnum>( EDC.ReadiNow.Model.Entity.Get<CardinalityEnum>( EntityRefHelper.ConvertAliasWithNamespace( CardinalityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CloneActionEnum CloneAction
		{
			get
			{
				return this.GetLookup<CloneActionEnum>( "core:cloneAction", Direction.Forward );
			}
			set
			{
				this.SetLookup<CloneActionEnum>( "core:cloneAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public CloneActionEnum_Enumeration? CloneAction_Enum
		{
			get
			{
				return GetEnum<CloneActionEnum, CloneActionEnum_Enumeration>( "core:cloneAction", Direction.Forward, CloneActionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:cloneAction", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:cloneAction", new EntityRelationship<CloneActionEnum>( EDC.ReadiNow.Model.Entity.Get<CloneActionEnum>( EntityRefHelper.ConvertAliasWithNamespace( CloneActionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Resource DefaultPointTo
		{
			get
			{
				return this.GetLookup<Resource>( "core:defaultPointTo", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:defaultPointTo", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType FromType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:fromType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:fromType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Resource FromTypeDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "core:fromTypeDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:fromTypeDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsStructureHierarchyRelationshipFor
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isStructureHierarchyRelationshipFor", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isStructureHierarchyRelationshipFor", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsStructureMembersRelationshipFor
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isStructureMembersRelationshipFor", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isStructureMembersRelationshipFor", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FieldGroup RelationshipInFromTypeGroup
		{
			get
			{
				return this.GetLookup<FieldGroup>( "core:relationshipInFromTypeGroup", Direction.Forward );
			}
			set
			{
				this.SetLookup<FieldGroup>( "core:relationshipInFromTypeGroup", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyRelationship> RelationshipInKey
		{
			get
			{
				return this.GetRelationships<ResourceKeyRelationship>( "core:relationshipInKey", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyRelationship>( "core:relationshipInKey", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public FieldGroup RelationshipInToTypeGroup
		{
			get
			{
				return this.GetLookup<FieldGroup>( "core:relationshipInToTypeGroup", Direction.Forward );
			}
			set
			{
				this.SetLookup<FieldGroup>( "core:relationshipInToTypeGroup", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<ApiRelationshipMapping> RelationshipUsedByApiMappings
		{
			get
			{
				return this.GetRelationships<ApiRelationshipMapping>( "core:relationshipUsedByApiMappings", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<ApiRelationshipMapping>( "core:relationshipUsedByApiMappings", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public RelTypeEnum RelType
		{
			get
			{
				return this.GetLookup<RelTypeEnum>( "core:relType", Direction.Forward );
			}
			set
			{
				this.SetLookup<RelTypeEnum>( "core:relType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public RelTypeEnum_Enumeration? RelType_Enum
		{
			get
			{
				return GetEnum<RelTypeEnum, RelTypeEnum_Enumeration>( "core:relType", Direction.Forward, RelTypeEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:relType", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:relType", new EntityRelationship<RelTypeEnum>( EDC.ReadiNow.Model.Entity.Get<RelTypeEnum>( EntityRefHelper.ConvertAliasWithNamespace( RelTypeEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public CloneActionEnum ReverseCloneAction
		{
			get
			{
				return this.GetLookup<CloneActionEnum>( "core:reverseCloneAction", Direction.Forward );
			}
			set
			{
				this.SetLookup<CloneActionEnum>( "core:reverseCloneAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public CloneActionEnum_Enumeration? ReverseCloneAction_Enum
		{
			get
			{
				return GetEnum<CloneActionEnum, CloneActionEnum_Enumeration>( "core:reverseCloneAction", Direction.Forward, CloneActionEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:reverseCloneAction", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:reverseCloneAction", new EntityRelationship<CloneActionEnum>( EDC.ReadiNow.Model.Entity.Get<CloneActionEnum>( EntityRefHelper.ConvertAliasWithNamespace( CloneActionEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<RelationshipControlOnForm> RRenderingControl
		{
			get
			{
				return this.GetRelationships<RelationshipControlOnForm>( "console:rRenderingControl", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipControlOnForm>( "console:rRenderingControl", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType ToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:toType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:toType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Resource ToTypeDefaultValue
		{
			get
			{
				return this.GetLookup<Resource>( "core:toTypeDefaultValue", Direction.Forward );
			}
			set
			{
				this.SetLookup<Resource>( "core:toTypeDefaultValue", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<RelationshipReportNode> UsedByRelationshipReportNode
		{
			get
			{
				return this.GetRelationships<RelationshipReportNode>( "core:usedByRelationshipReportNode", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<RelationshipReportNode>( "core:usedByRelationshipReportNode", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Report> VirtualRelationshipReport
		{
			get
			{
				return this.GetRelationships<Report>( "core:virtualRelationshipReport", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Report>( "core:virtualRelationshipReport", value, Direction.Reverse );
			}
		}



		#endregion VirtualRelationship Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the VirtualRelationship type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType VirtualRelationship_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:virtualRelationship");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A type to control the resources to appear on different devices.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:visualController")]
	public class VisualController : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public VisualController( )
			: base( typeof( VisualController ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal VisualController( IActivationData activationData )
			: base( activationData )
		{

		}

		#region VisualController Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnDesktop_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnDesktop" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnMobile_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnMobile" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HideOnTablet_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hideOnTablet" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { VisualController.HideOnDesktop_Field, VisualController.HideOnMobile_Field, VisualController.HideOnTablet_Field, VisualController.Alias_Field, VisualController.CanDelete_Field, VisualController.CanModify_Field, VisualController.CreatedDate_Field, VisualController.Description_Field, VisualController.ModifiedDate_Field, VisualController.Name_Field, VisualController.CreatedBy_Field, VisualController.Flags_Field, VisualController.IndirectInSolution_Field, VisualController.InSolution_Field, VisualController.InStructureLevel_Field, VisualController.IsOfType_Field, VisualController.IsRootForStructureView_Field, VisualController.LastModifiedBy_Field, VisualController.ResourceConsoleBehavior_Field, VisualController.ResourceHasResourceKeyDataHashes_Field, VisualController.ResourceInFolder_Field, VisualController.SecurityOwner_Field, VisualController.SelectionBehavior_Field, VisualController.ShortcutInFolder_Field };
			}
		}

		#endregion VisualController Public Fields

		#region VisualController Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnDesktop
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnDesktop" );
			}
			set
			{
				this.SetField( "core:hideOnDesktop", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnMobile
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnMobile" );
			}
			set
			{
				this.SetField( "core:hideOnMobile", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HideOnTablet
		{
			get
			{
				return ( bool? ) this.GetField( "core:hideOnTablet" );
			}
			set
			{
				this.SetField( "core:hideOnTablet", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion VisualController Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( Chart entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( Folder entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( NavContainer entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( NavSection entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( PrivateContentSection entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( Report entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( Solution entity )
		{
			return entity.Cast<VisualController>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator VisualController( TopMenu entity )
		{
			return entity.Cast<VisualController>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the VisualController type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType VisualController_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:visualController");
			}
		}
		
		#endregion Additional Static Content

	}

}