//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Copyright 2011-2016 Global Software Innovation Pty Ltd
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;

using EDC.ReadiNow.Model.Internal;

namespace EDC.ReadiNow.Model
{
	/// <summary>
	/// A step in a workflow, from basic operations to workflows themselves
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:wfActivity")]
	public class WfActivity : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WfActivity( )
			: base( typeof( WfActivity ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WfActivity( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WfActivity Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField DesignerData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:designerData" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:argumentInstanceActivity" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ContainingWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:containedActivities" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ExpressionMap_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:expressionMap" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ForwardTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:fromActivity" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity TransitionsForActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:toActivity" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WfActivity.DesignerData_Field, WfActivity.Alias_Field, WfActivity.CanDelete_Field, WfActivity.CanModify_Field, WfActivity.CanModifyProtectedResource_Field, WfActivity.CreatedDate_Field, WfActivity.Description_Field, WfActivity.ModifiedDate_Field, WfActivity.Name_Field, WfActivity.ArgumentInstanceFromActivity_Field, WfActivity.ContainingWorkflow_Field, WfActivity.CreatedBy_Field, WfActivity.ExpressionMap_Field, WfActivity.Flags_Field, WfActivity.ForwardTransitions_Field, WfActivity.IndirectInSolution_Field, WfActivity.InSolution_Field, WfActivity.InStructureLevel_Field, WfActivity.IsOfType_Field, WfActivity.IsRootForStructureView_Field, WfActivity.LastModifiedBy_Field, WfActivity.ResourceConsoleBehavior_Field, WfActivity.ResourceHasResourceKeyDataHashes_Field, WfActivity.ResourceInFolder_Field, WfActivity.SecurityOwner_Field, WfActivity.SelectionBehavior_Field, WfActivity.ShortcutInFolder_Field, WfActivity.TransitionsForActivity_Field };
			}
		}

		#endregion WfActivity Public Fields

		#region WfActivity Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string DesignerData
		{
			get
			{
				return ( string ) this.GetField( "core:designerData" );
			}
			set
			{
				this.SetField( "core:designerData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromActivity
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Workflow ContainingWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:containingWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:containingWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<WfExpression> ExpressionMap
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:expressionMap", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:expressionMap", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ForwardTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:forwardTransitions", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:forwardTransitions", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<Transition> TransitionsForActivity
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitionsForActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitionsForActivity", value, Direction.Reverse );
			}
		}



		#endregion WfActivity Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( AssignToVariable entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( CloneActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( CreateActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( CreateLinkActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( DecisionActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( DeleteActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( DisplayFormActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( ExportToActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( ForEachResource entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( GenerateDocActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( GetResourcesActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( LogActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( NotifyActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( PromptUserActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( ReviewSurveyActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( SendEmailActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( SetChoiceActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( SetRelationshipActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( StartSurveyActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( SwitchActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( UpdateFieldActivity entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( Workflow entity )
		{
			return entity.Cast<WfActivity>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfActivity( WorkflowProxy entity )
		{
			return entity.Cast<WfActivity>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WfActivity type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WfActivity_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:wfActivity");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An argument and activity instance
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:wfArgumentInstance")]
	public class WfArgumentInstance : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WfArgumentInstance( )
			: base( typeof( WfArgumentInstance ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WfArgumentInstance( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WfArgumentInstance Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ArgumentInstanceActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:argumentInstanceActivity" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ArgumentInstanceArgument_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:argumentInstanceArgument" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InstanceConformsToType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:instanceConformsToType" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ReferencedInWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:expressionParameters" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WfArgumentInstance.Alias_Field, WfArgumentInstance.CanDelete_Field, WfArgumentInstance.CanModify_Field, WfArgumentInstance.CreatedDate_Field, WfArgumentInstance.Description_Field, WfArgumentInstance.ModifiedDate_Field, WfArgumentInstance.Name_Field, WfArgumentInstance.ArgumentInstanceActivity_Field, WfArgumentInstance.ArgumentInstanceArgument_Field, WfArgumentInstance.CreatedBy_Field, WfArgumentInstance.Flags_Field, WfArgumentInstance.IndirectInSolution_Field, WfArgumentInstance.InSolution_Field, WfArgumentInstance.InstanceConformsToType_Field, WfArgumentInstance.InStructureLevel_Field, WfArgumentInstance.IsOfType_Field, WfArgumentInstance.IsRootForStructureView_Field, WfArgumentInstance.LastModifiedBy_Field, WfArgumentInstance.ReferencedInWorkflow_Field, WfArgumentInstance.ResourceConsoleBehavior_Field, WfArgumentInstance.ResourceHasResourceKeyDataHashes_Field, WfArgumentInstance.ResourceInFolder_Field, WfArgumentInstance.SecurityOwner_Field, WfArgumentInstance.SelectionBehavior_Field, WfArgumentInstance.ShortcutInFolder_Field };
			}
		}

		#endregion WfArgumentInstance Public Fields

		#region WfArgumentInstance Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WfActivity ArgumentInstanceActivity
		{
			get
			{
				return this.GetLookup<WfActivity>( "core:argumentInstanceActivity", Direction.Forward );
			}
			set
			{
				this.SetLookup<WfActivity>( "core:argumentInstanceActivity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ActivityArgument ArgumentInstanceArgument
		{
			get
			{
				return this.GetLookup<ActivityArgument>( "core:argumentInstanceArgument", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActivityArgument>( "core:argumentInstanceArgument", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public EntityType InstanceConformsToType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:instanceConformsToType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:instanceConformsToType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Workflow ReferencedInWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:referencedInWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:referencedInWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion WfArgumentInstance Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WfArgumentInstance type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WfArgumentInstance_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:wfArgumentInstance");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An expression used to populate a workflow argument
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:wfExpression")]
	public class WfExpression : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WfExpression( )
			: base( typeof( WfExpression ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WfExpression( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WfExpression Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField ExpressionString_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:expressionString" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField IsTemplateString_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:isTemplateString" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ArgumentToPopulate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:argumentToPopulate" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ExpressionInActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:expressionMap" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WfExpressionKnownEntities_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:wfExpressionKnownEntities" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WfExpression.ExpressionString_Field, WfExpression.IsTemplateString_Field, WfExpression.Alias_Field, WfExpression.CanDelete_Field, WfExpression.CanModify_Field, WfExpression.CreatedDate_Field, WfExpression.Description_Field, WfExpression.ModifiedDate_Field, WfExpression.Name_Field, WfExpression.ArgumentToPopulate_Field, WfExpression.CreatedBy_Field, WfExpression.ExpressionInActivity_Field, WfExpression.Flags_Field, WfExpression.IndirectInSolution_Field, WfExpression.InSolution_Field, WfExpression.InStructureLevel_Field, WfExpression.IsOfType_Field, WfExpression.IsRootForStructureView_Field, WfExpression.LastModifiedBy_Field, WfExpression.ResourceConsoleBehavior_Field, WfExpression.ResourceHasResourceKeyDataHashes_Field, WfExpression.ResourceInFolder_Field, WfExpression.SecurityOwner_Field, WfExpression.SelectionBehavior_Field, WfExpression.ShortcutInFolder_Field, WfExpression.WfExpressionKnownEntities_Field };
			}
		}

		#endregion WfExpression Public Fields

		#region WfExpression Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string ExpressionString
		{
			get
			{
				return ( string ) this.GetField( "core:expressionString" );
			}
			set
			{
				this.SetField( "core:expressionString", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? IsTemplateString
		{
			get
			{
				return ( bool? ) this.GetField( "core:isTemplateString" );
			}
			set
			{
				this.SetField( "core:isTemplateString", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ActivityArgument ArgumentToPopulate
		{
			get
			{
				return this.GetLookup<ActivityArgument>( "core:argumentToPopulate", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActivityArgument>( "core:argumentToPopulate", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public WfActivity ExpressionInActivity
		{
			get
			{
				return this.GetLookup<WfActivity>( "core:expressionInActivity", Direction.Reverse );
			}
			set
			{
				this.SetLookup<WfActivity>( "core:expressionInActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<NamedReference> WfExpressionKnownEntities
		{
			get
			{
				return this.GetRelationships<NamedReference>( "core:wfExpressionKnownEntities", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NamedReference>( "core:wfExpressionKnownEntities", value, Direction.Forward );
			}
		}



		#endregion WfExpression Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WfExpression type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WfExpression_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:wfExpression");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A type of trigger that relates an action to a workflow. The workflow arguments are filled in by the trigger.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:wfTrigger")]
	public class WfTrigger : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WfTrigger( )
			: base( typeof( WfTrigger ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WfTrigger( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WfTrigger Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TriggerEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnableableItem.TriggerEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WorkflowToRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowToRun" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WfTrigger.Alias_Field, WfTrigger.CanDelete_Field, WfTrigger.CanModify_Field, WfTrigger.CreatedDate_Field, WfTrigger.Description_Field, WfTrigger.ModifiedDate_Field, WfTrigger.Name_Field, WfTrigger.TriggerEnabled_Field, WfTrigger.CreatedBy_Field, WfTrigger.Flags_Field, WfTrigger.IndirectInSolution_Field, WfTrigger.InSolution_Field, WfTrigger.InStructureLevel_Field, WfTrigger.IsOfType_Field, WfTrigger.IsRootForStructureView_Field, WfTrigger.LastModifiedBy_Field, WfTrigger.ResourceConsoleBehavior_Field, WfTrigger.ResourceHasResourceKeyDataHashes_Field, WfTrigger.ResourceInFolder_Field, WfTrigger.SecurityOwner_Field, WfTrigger.SelectionBehavior_Field, WfTrigger.ShortcutInFolder_Field, WfTrigger.WorkflowToRun_Field };
			}
		}

		#endregion WfTrigger Public Fields

		#region WfTrigger Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TriggerEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:triggerEnabled" );
			}
			set
			{
				this.SetField( "core:triggerEnabled", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow WorkflowToRun
		{
			get
			{
				return this.GetLookup<Workflow>( "core:workflowToRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:workflowToRun", value, Direction.Forward );
			}
		}



		#endregion WfTrigger Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfTrigger( WfTriggerOnSchedule entity )
		{
			return entity.Cast<WfTrigger>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WfTrigger( WfTriggerUserUpdatesResource entity )
		{
			return entity.Cast<WfTrigger>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WfTrigger type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WfTrigger_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:wfTrigger");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A trigger that is tripped on a specified schedule to run a workflow.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:wfTriggerOnSchedule")]
	public class WfTriggerOnSchedule : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WfTriggerOnSchedule( )
			: base( typeof( WfTriggerOnSchedule ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WfTriggerOnSchedule( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WfTriggerOnSchedule Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TriggerEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnableableItem.TriggerEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ScheduleForTrigger_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ScheduledItem.ScheduleForTrigger_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity WorkflowToRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfTrigger.WorkflowToRun_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WfTriggerOnSchedule.Alias_Field, WfTriggerOnSchedule.CanDelete_Field, WfTriggerOnSchedule.CanModify_Field, WfTriggerOnSchedule.CreatedDate_Field, WfTriggerOnSchedule.Description_Field, WfTriggerOnSchedule.ModifiedDate_Field, WfTriggerOnSchedule.Name_Field, WfTriggerOnSchedule.TriggerEnabled_Field, WfTriggerOnSchedule.CreatedBy_Field, WfTriggerOnSchedule.Flags_Field, WfTriggerOnSchedule.IndirectInSolution_Field, WfTriggerOnSchedule.InSolution_Field, WfTriggerOnSchedule.InStructureLevel_Field, WfTriggerOnSchedule.IsOfType_Field, WfTriggerOnSchedule.IsRootForStructureView_Field, WfTriggerOnSchedule.LastModifiedBy_Field, WfTriggerOnSchedule.ResourceConsoleBehavior_Field, WfTriggerOnSchedule.ResourceHasResourceKeyDataHashes_Field, WfTriggerOnSchedule.ResourceInFolder_Field, WfTriggerOnSchedule.ScheduleForTrigger_Field, WfTriggerOnSchedule.SecurityOwner_Field, WfTriggerOnSchedule.SelectionBehavior_Field, WfTriggerOnSchedule.ShortcutInFolder_Field, WfTriggerOnSchedule.WorkflowToRun_Field };
			}
		}

		#endregion WfTriggerOnSchedule Public Fields

		#region WfTriggerOnSchedule Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TriggerEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:triggerEnabled" );
			}
			set
			{
				this.SetField( "core:triggerEnabled", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Schedule> ScheduleForTrigger
		{
			get
			{
				return this.GetRelationships<Schedule>( "core:scheduleForTrigger", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Schedule>( "core:scheduleForTrigger", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Workflow WorkflowToRun
		{
			get
			{
				return this.GetLookup<Workflow>( "core:workflowToRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:workflowToRun", value, Direction.Forward );
			}
		}



		#endregion WfTriggerOnSchedule Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WfTriggerOnSchedule type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WfTriggerOnSchedule_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:wfTriggerOnSchedule");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A workflow trigger that is tripped when the user updates the given fields or relations on a specified type of resource.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:wfTriggerUserUpdatesResource")]
	public class WfTriggerUserUpdatesResource : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WfTriggerUserUpdatesResource( )
			: base( typeof( WfTriggerUserUpdatesResource ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WfTriggerUserUpdatesResource( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WfTriggerUserUpdatesResource Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField RtfdRunInForeground_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.RtfdRunInForeground_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField TriggerEnabled_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnableableItem.TriggerEnabled_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity TriggeredOnType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.TriggeredOnType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity TriggeringCondition_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:triggeringCondition" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity UpdatedFieldsToTriggerOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.UpdatedFieldsToTriggerOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity UpdatedRelationshipsToTriggerOn_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ResourceTriggerFilterDef.UpdatedRelationshipsToTriggerOn_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity WorkflowToRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfTrigger.WorkflowToRun_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WfTriggerUserUpdatesResource.Alias_Field, WfTriggerUserUpdatesResource.CanDelete_Field, WfTriggerUserUpdatesResource.CanModify_Field, WfTriggerUserUpdatesResource.CreatedDate_Field, WfTriggerUserUpdatesResource.Description_Field, WfTriggerUserUpdatesResource.ModifiedDate_Field, WfTriggerUserUpdatesResource.Name_Field, WfTriggerUserUpdatesResource.RtfdRunInForeground_Field, WfTriggerUserUpdatesResource.TriggerEnabled_Field, WfTriggerUserUpdatesResource.CreatedBy_Field, WfTriggerUserUpdatesResource.Flags_Field, WfTriggerUserUpdatesResource.IndirectInSolution_Field, WfTriggerUserUpdatesResource.InSolution_Field, WfTriggerUserUpdatesResource.InStructureLevel_Field, WfTriggerUserUpdatesResource.IsOfType_Field, WfTriggerUserUpdatesResource.IsRootForStructureView_Field, WfTriggerUserUpdatesResource.LastModifiedBy_Field, WfTriggerUserUpdatesResource.ResourceConsoleBehavior_Field, WfTriggerUserUpdatesResource.ResourceHasResourceKeyDataHashes_Field, WfTriggerUserUpdatesResource.ResourceInFolder_Field, WfTriggerUserUpdatesResource.SecurityOwner_Field, WfTriggerUserUpdatesResource.SelectionBehavior_Field, WfTriggerUserUpdatesResource.ShortcutInFolder_Field, WfTriggerUserUpdatesResource.TriggeredOnType_Field, WfTriggerUserUpdatesResource.TriggeringCondition_Field, WfTriggerUserUpdatesResource.UpdatedFieldsToTriggerOn_Field, WfTriggerUserUpdatesResource.UpdatedRelationshipsToTriggerOn_Field, WfTriggerUserUpdatesResource.WorkflowToRun_Field };
			}
		}

		#endregion WfTriggerUserUpdatesResource Public Fields

		#region WfTriggerUserUpdatesResource Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? RtfdRunInForeground
		{
			get
			{
				return ( bool? ) this.GetField( "core:rtfdRunInForeground" );
			}
			set
			{
				this.SetField( "core:rtfdRunInForeground", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? TriggerEnabled
		{
			get
			{
				return ( bool? ) this.GetField( "core:triggerEnabled" );
			}
			set
			{
				this.SetField( "core:triggerEnabled", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EntityType TriggeredOnType
		{
			get
			{
				return this.GetLookup<EntityType>( "core:triggeredOnType", Direction.Forward );
			}
			set
			{
				this.SetLookup<EntityType>( "core:triggeredOnType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public TriggeredOnEnum TriggeringCondition
		{
			get
			{
				return this.GetLookup<TriggeredOnEnum>( "core:triggeringCondition", Direction.Forward );
			}
			set
			{
				this.SetLookup<TriggeredOnEnum>( "core:triggeringCondition", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public TriggeredOnEnum_Enumeration? TriggeringCondition_Enum
		{
			get
			{
				return GetEnum<TriggeredOnEnum, TriggeredOnEnum_Enumeration>( "core:triggeringCondition", Direction.Forward, TriggeredOnEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:triggeringCondition", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:triggeringCondition", new EntityRelationship<TriggeredOnEnum>( EDC.ReadiNow.Model.Entity.Get<TriggeredOnEnum>( EntityRefHelper.ConvertAliasWithNamespace( TriggeredOnEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Field> UpdatedFieldsToTriggerOn
		{
			get
			{
				return this.GetRelationships<Field>( "core:updatedFieldsToTriggerOn", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Field>( "core:updatedFieldsToTriggerOn", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Relationship> UpdatedRelationshipsToTriggerOn
		{
			get
			{
				return this.GetRelationships<Relationship>( "core:updatedRelationshipsToTriggerOn", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Relationship>( "core:updatedRelationshipsToTriggerOn", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Workflow WorkflowToRun
		{
			get
			{
				return this.GetLookup<Workflow>( "core:workflowToRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:workflowToRun", value, Direction.Forward );
			}
		}



		#endregion WfTriggerUserUpdatesResource Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WfTriggerUserUpdatesResource type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WfTriggerUserUpdatesResource_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:wfTriggerUserUpdatesResource");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="Workflow" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflow")]
	public class Workflow : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public Workflow( )
			: base( typeof( Workflow ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal Workflow( IActivationData activationData )
			: base( activationData )
		{

		}

		#region Workflow Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField WorkflowHasErrors_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:workflowHasErrors" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField WorkflowRunAsOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:workflowRunAsOwner" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField WorkflowUpdateHash_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:workflowUpdateHash" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField WorkflowVersion_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:workflowVersion" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DesignerData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.DesignerData_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ArgumentInstanceFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ContainedActivities_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:containedActivities" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainingWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ContainingWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExitPoints_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.ExitPoints_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExpressionMap_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ExpressionMap_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ExpressionParameters_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:expressionParameters" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity FirstActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:firstActivity" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ForwardTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ForwardTransitions_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InputArgumentForAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:inputArgumentForAction" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity InputArgumentForRelatedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:inputArgumentForRelatedResource" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InternalArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InternalArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OutputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.OutputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RunningInstances_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowBeingRun" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Terminations_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:terminations" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Transitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:transitions" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TransitionsForActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.TransitionsForActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity Variables_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:variables" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WfNewerVersion_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:wfNewerVersion" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity WfOlderVersion_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:wfNewerVersion" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity WorkflowUsedInActionMenuItems_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:actionMenuItemToWorkflow" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { Workflow.WorkflowHasErrors_Field, Workflow.WorkflowRunAsOwner_Field, Workflow.WorkflowUpdateHash_Field, Workflow.WorkflowVersion_Field, Workflow.Alias_Field, Workflow.CanDelete_Field, Workflow.CanModify_Field, Workflow.CanModifyProtectedResource_Field, Workflow.CreatedDate_Field, Workflow.Description_Field, Workflow.DesignerData_Field, Workflow.ModifiedDate_Field, Workflow.Name_Field, Workflow.ArgumentInstanceFromActivity_Field, Workflow.ContainedActivities_Field, Workflow.ContainingWorkflow_Field, Workflow.CreatedBy_Field, Workflow.ExitPoints_Field, Workflow.ExpressionMap_Field, Workflow.ExpressionParameters_Field, Workflow.FirstActivity_Field, Workflow.Flags_Field, Workflow.ForwardTransitions_Field, Workflow.IndirectInSolution_Field, Workflow.InputArgumentForAction_Field, Workflow.InputArgumentForRelatedResource_Field, Workflow.InputArguments_Field, Workflow.InSolution_Field, Workflow.InStructureLevel_Field, Workflow.InternalArguments_Field, Workflow.IsOfType_Field, Workflow.IsRootForStructureView_Field, Workflow.LastModifiedBy_Field, Workflow.OutputArguments_Field, Workflow.ResourceConsoleBehavior_Field, Workflow.ResourceHasResourceKeyDataHashes_Field, Workflow.ResourceInFolder_Field, Workflow.RunningInstances_Field, Workflow.SecurityOwner_Field, Workflow.SelectionBehavior_Field, Workflow.ShortcutInFolder_Field, Workflow.Terminations_Field, Workflow.Transitions_Field, Workflow.TransitionsForActivity_Field, Workflow.Variables_Field, Workflow.WfNewerVersion_Field, Workflow.WfOlderVersion_Field, Workflow.WorkflowUsedInActionMenuItems_Field };
			}
		}

		#endregion Workflow Public Fields

		#region Workflow Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? WorkflowHasErrors
		{
			get
			{
				return ( bool? ) this.GetField( "core:workflowHasErrors" );
			}
			set
			{
				this.SetField( "core:workflowHasErrors", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? WorkflowRunAsOwner
		{
			get
			{
				return ( bool? ) this.GetField( "core:workflowRunAsOwner" );
			}
			set
			{
				this.SetField( "core:workflowRunAsOwner", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string WorkflowUpdateHash
		{
			get
			{
				return ( string ) this.GetField( "core:workflowUpdateHash" );
			}
			set
			{
				this.SetField( "core:workflowUpdateHash", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? WorkflowVersion
		{
			get
			{
				return ( int? ) this.GetField( "core:workflowVersion" );
			}
			set
			{
				this.SetField( "core:workflowVersion", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DesignerData
		{
			get
			{
				return ( string ) this.GetField( "core:designerData" );
			}
			set
			{
				this.SetField( "core:designerData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromActivity
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<WfActivity> ContainedActivities
		{
			get
			{
				return this.GetRelationships<WfActivity>( "core:containedActivities", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfActivity>( "core:containedActivities", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow ContainingWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:containingWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:containingWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ExitPoint> ExitPoints
		{
			get
			{
				return this.GetRelationships<ExitPoint>( "core:exitPoints", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ExitPoint>( "core:exitPoints", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<WfExpression> ExpressionMap
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:expressionMap", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:expressionMap", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ExpressionParameters
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:expressionParameters", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:expressionParameters", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WfActivity FirstActivity
		{
			get
			{
				return this.GetLookup<WfActivity>( "core:firstActivity", Direction.Forward );
			}
			set
			{
				this.SetLookup<WfActivity>( "core:firstActivity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ForwardTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:forwardTransitions", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:forwardTransitions", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ActivityArgument InputArgumentForAction
		{
			get
			{
				return this.GetLookup<ActivityArgument>( "core:inputArgumentForAction", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActivityArgument>( "core:inputArgumentForAction", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ActivityArgument InputArgumentForRelatedResource
		{
			get
			{
				return this.GetLookup<ActivityArgument>( "core:inputArgumentForRelatedResource", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActivityArgument>( "core:inputArgumentForRelatedResource", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:inputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:inputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InternalArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:internalArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:internalArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> OutputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:outputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:outputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<WorkflowRun> RunningInstances
		{
			get
			{
				return this.GetRelationships<WorkflowRun>( "core:runningInstances", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WorkflowRun>( "core:runningInstances", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Termination> Terminations
		{
			get
			{
				return this.GetRelationships<Termination>( "core:terminations", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Termination>( "core:terminations", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Transition> Transitions
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitions", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitions", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Transition> TransitionsForActivity
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitionsForActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitionsForActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> Variables
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:variables", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:variables", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow WfNewerVersion
		{
			get
			{
				return this.GetLookup<Workflow>( "core:wfNewerVersion", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:wfNewerVersion", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public Workflow WfOlderVersion
		{
			get
			{
				return this.GetLookup<Workflow>( "core:wfOlderVersion", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:wfOlderVersion", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<WorkflowActionMenuItem> WorkflowUsedInActionMenuItems
		{
			get
			{
				return this.GetRelationships<WorkflowActionMenuItem>( "console:workflowUsedInActionMenuItems", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WorkflowActionMenuItem>( "console:workflowUsedInActionMenuItems", value, Direction.Reverse );
			}
		}



		#endregion Workflow Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the Workflow type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType Workflow_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflow");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// An action menu item that depends on a workflow.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:workflowActionMenuItem")]
	public class WorkflowActionMenuItem : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowActionMenuItem( )
			: base( typeof( WorkflowActionMenuItem ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowActionMenuItem( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowActionMenuItem Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AppliesToMultiSelection_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.AppliesToMultiSelection_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField AppliesToSelection_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.AppliesToSelection_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ControlAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ControlAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ControlActionData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ControlActionData_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField EmptySelectName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.EmptySelectName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField HtmlActionMethod_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.HtmlActionMethod_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField HtmlActionState_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.HtmlActionState_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField HtmlActionTarget_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.HtmlActionTarget_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsActionButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsActionButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsActionItem_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsActionItem_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsContextMenu_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsContextMenu_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsDoubleClickAction_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsDoubleClickAction_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsMenuSeparator_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsMenuSeparator_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsStackedLandingPage_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsStackedLandingPage_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField IsSystem_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.IsSystem_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField MenuIconUrl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.MenuIconUrl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField MenuOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.MenuOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField MultiSelectName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.MultiSelectName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionAppliesToMenu_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionAppliesToMenu_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionAppliesToRelationshipControlBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionAppliesToRelationshipControlBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionIncludedAsButton_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionIncludedAsButton_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ActionMenuItemToWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:actionMenuItemToWorkflow" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionRequiresExpression_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionRequiresExpression_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionRequiresPermission_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionRequiresPermission_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionRequiresRole_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionRequiresRole_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActionSuppressedOnMenu_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActionMenuItem.ActionSuppressedOnMenu_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowActionMenuItem.Alias_Field, WorkflowActionMenuItem.AppliesToMultiSelection_Field, WorkflowActionMenuItem.AppliesToSelection_Field, WorkflowActionMenuItem.CanDelete_Field, WorkflowActionMenuItem.CanModify_Field, WorkflowActionMenuItem.ControlAction_Field, WorkflowActionMenuItem.ControlActionData_Field, WorkflowActionMenuItem.CreatedDate_Field, WorkflowActionMenuItem.Description_Field, WorkflowActionMenuItem.EmptySelectName_Field, WorkflowActionMenuItem.HtmlActionMethod_Field, WorkflowActionMenuItem.HtmlActionState_Field, WorkflowActionMenuItem.HtmlActionTarget_Field, WorkflowActionMenuItem.IsActionButton_Field, WorkflowActionMenuItem.IsActionItem_Field, WorkflowActionMenuItem.IsContextMenu_Field, WorkflowActionMenuItem.IsDoubleClickAction_Field, WorkflowActionMenuItem.IsMenuSeparator_Field, WorkflowActionMenuItem.IsStackedLandingPage_Field, WorkflowActionMenuItem.IsSystem_Field, WorkflowActionMenuItem.MenuIconUrl_Field, WorkflowActionMenuItem.MenuOrder_Field, WorkflowActionMenuItem.ModifiedDate_Field, WorkflowActionMenuItem.MultiSelectName_Field, WorkflowActionMenuItem.Name_Field, WorkflowActionMenuItem.ActionAppliesToMenu_Field, WorkflowActionMenuItem.ActionAppliesToRelationshipControlBehavior_Field, WorkflowActionMenuItem.ActionIncludedAsButton_Field, WorkflowActionMenuItem.ActionMenuItemToWorkflow_Field, WorkflowActionMenuItem.ActionRequiresExpression_Field, WorkflowActionMenuItem.ActionRequiresPermission_Field, WorkflowActionMenuItem.ActionRequiresRole_Field, WorkflowActionMenuItem.ActionSuppressedOnMenu_Field, WorkflowActionMenuItem.CreatedBy_Field, WorkflowActionMenuItem.Flags_Field, WorkflowActionMenuItem.IndirectInSolution_Field, WorkflowActionMenuItem.InSolution_Field, WorkflowActionMenuItem.InStructureLevel_Field, WorkflowActionMenuItem.IsOfType_Field, WorkflowActionMenuItem.IsRootForStructureView_Field, WorkflowActionMenuItem.LastModifiedBy_Field, WorkflowActionMenuItem.ResourceConsoleBehavior_Field, WorkflowActionMenuItem.ResourceHasResourceKeyDataHashes_Field, WorkflowActionMenuItem.ResourceInFolder_Field, WorkflowActionMenuItem.SecurityOwner_Field, WorkflowActionMenuItem.SelectionBehavior_Field, WorkflowActionMenuItem.ShortcutInFolder_Field };
			}
		}

		#endregion WorkflowActionMenuItem Public Fields

		#region WorkflowActionMenuItem Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AppliesToMultiSelection
		{
			get
			{
				return ( bool? ) this.GetField( "console:appliesToMultiSelection" );
			}
			set
			{
				this.SetField( "console:appliesToMultiSelection", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? AppliesToSelection
		{
			get
			{
				return ( bool? ) this.GetField( "console:appliesToSelection" );
			}
			set
			{
				this.SetField( "console:appliesToSelection", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ControlAction
		{
			get
			{
				return ( string ) this.GetField( "console:controlAction" );
			}
			set
			{
				this.SetField( "console:controlAction", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ControlActionData
		{
			get
			{
				return ( string ) this.GetField( "console:controlActionData" );
			}
			set
			{
				this.SetField( "console:controlActionData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string EmptySelectName
		{
			get
			{
				return ( string ) this.GetField( "core:emptySelectName" );
			}
			set
			{
				this.SetField( "core:emptySelectName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string HtmlActionMethod
		{
			get
			{
				return ( string ) this.GetField( "core:htmlActionMethod" );
			}
			set
			{
				this.SetField( "core:htmlActionMethod", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string HtmlActionState
		{
			get
			{
				return ( string ) this.GetField( "core:htmlActionState" );
			}
			set
			{
				this.SetField( "core:htmlActionState", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string HtmlActionTarget
		{
			get
			{
				return ( string ) this.GetField( "core:htmlActionTarget" );
			}
			set
			{
				this.SetField( "core:htmlActionTarget", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsActionButton
		{
			get
			{
				return ( bool? ) this.GetField( "console:isActionButton" );
			}
			set
			{
				this.SetField( "console:isActionButton", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsActionItem
		{
			get
			{
				return ( bool? ) this.GetField( "console:isActionItem" );
			}
			set
			{
				this.SetField( "console:isActionItem", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsContextMenu
		{
			get
			{
				return ( bool? ) this.GetField( "console:isContextMenu" );
			}
			set
			{
				this.SetField( "console:isContextMenu", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsDoubleClickAction
		{
			get
			{
				return ( bool? ) this.GetField( "console:isDoubleClickAction" );
			}
			set
			{
				this.SetField( "console:isDoubleClickAction", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsMenuSeparator
		{
			get
			{
				return ( bool? ) this.GetField( "console:isMenuSeparator" );
			}
			set
			{
				this.SetField( "console:isMenuSeparator", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsStackedLandingPage
		{
			get
			{
				return ( bool? ) this.GetField( "console:isStackedLandingPage" );
			}
			set
			{
				this.SetField( "console:isStackedLandingPage", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? IsSystem
		{
			get
			{
				return ( bool? ) this.GetField( "console:isSystem" );
			}
			set
			{
				this.SetField( "console:isSystem", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string MenuIconUrl
		{
			get
			{
				return ( string ) this.GetField( "console:menuIconUrl" );
			}
			set
			{
				this.SetField( "console:menuIconUrl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? MenuOrder
		{
			get
			{
				return ( int? ) this.GetField( "console:menuOrder" );
			}
			set
			{
				this.SetField( "console:menuOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string MultiSelectName
		{
			get
			{
				return ( string ) this.GetField( "core:multiSelectName" );
			}
			set
			{
				this.SetField( "core:multiSelectName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ActionMenu ActionAppliesToMenu
		{
			get
			{
				return this.GetLookup<ActionMenu>( "console:actionAppliesToMenu", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActionMenu>( "console:actionAppliesToMenu", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<MultiRelationshipControlBehavior> ActionAppliesToRelationshipControlBehavior
		{
			get
			{
				return this.GetRelationships<MultiRelationshipControlBehavior>( "console:actionAppliesToRelationshipControlBehavior", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<MultiRelationshipControlBehavior>( "console:actionAppliesToRelationshipControlBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> ActionIncludedAsButton
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:actionIncludedAsButton", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:actionIncludedAsButton", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow ActionMenuItemToWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "console:actionMenuItemToWorkflow", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "console:actionMenuItemToWorkflow", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ActionExpression ActionRequiresExpression
		{
			get
			{
				return this.GetLookup<ActionExpression>( "console:actionRequiresExpression", Direction.Forward );
			}
			set
			{
				this.SetLookup<ActionExpression>( "console:actionRequiresExpression", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<Permission> ActionRequiresPermission
		{
			get
			{
				return this.GetRelationships<Permission>( "console:actionRequiresPermission", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Permission>( "console:actionRequiresPermission", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Role ActionRequiresRole
		{
			get
			{
				return this.GetLookup<Role>( "core:actionRequiresRole", Direction.Forward );
			}
			set
			{
				this.SetLookup<Role>( "core:actionRequiresRole", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActionMenu> ActionSuppressedOnMenu
		{
			get
			{
				return this.GetRelationships<ActionMenu>( "console:actionSuppressedOnMenu", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActionMenu>( "console:actionSuppressedOnMenu", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion WorkflowActionMenuItem Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowActionMenuItem type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowActionMenuItem_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:workflowActionMenuItem");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Allows the user to trigger a workflow
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("console:workflowButtonControl")]
	public class WorkflowButtonControl : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowButtonControl( )
			: base( typeof( WorkflowButtonControl ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowButtonControl( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowButtonControl Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField WbcHideSuccessConfirmation_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "console:wbcHideSuccessConfirmation" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField HideLabel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.HideLabel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField MandatoryControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.MandatoryControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ReadOnlyControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ReadOnlyControl_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField RenderingBackgroundColor_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingBackgroundColor_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingHeight_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingHeight_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingOrdinal_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingOrdinal_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField RenderingWidth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.RenderingWidth_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField ShowControlHelpText_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ShowControlHelpText_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainedWithinStructureControlOnForm_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ContainedWithinStructureControlOnForm_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ControlRelatedEntityDataPathNodes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ControlOnForm.ControlRelatedEntityDataPathNodes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WbcDisableControlBasedOnRelationshipControl_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:wbcDisableControlBasedOnRelationshipControl" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WbcDisableControlBasedOnResources_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:wbcDisableControlBasedOnResources" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WbcResourceInputParameter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:wbcResourceInputParameter" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WbcWorkflowToRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "console:wbcWorkflowToRun" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowButtonControl.WbcHideSuccessConfirmation_Field, WorkflowButtonControl.Alias_Field, WorkflowButtonControl.CanDelete_Field, WorkflowButtonControl.CanModify_Field, WorkflowButtonControl.CreatedDate_Field, WorkflowButtonControl.Description_Field, WorkflowButtonControl.HideLabel_Field, WorkflowButtonControl.MandatoryControl_Field, WorkflowButtonControl.ModifiedDate_Field, WorkflowButtonControl.Name_Field, WorkflowButtonControl.ReadOnlyControl_Field, WorkflowButtonControl.RenderingBackgroundColor_Field, WorkflowButtonControl.RenderingHeight_Field, WorkflowButtonControl.RenderingOrdinal_Field, WorkflowButtonControl.RenderingWidth_Field, WorkflowButtonControl.ShowControlHelpText_Field, WorkflowButtonControl.ContainedWithinStructureControlOnForm_Field, WorkflowButtonControl.ControlRelatedEntityDataPathNodes_Field, WorkflowButtonControl.CreatedBy_Field, WorkflowButtonControl.Flags_Field, WorkflowButtonControl.IndirectInSolution_Field, WorkflowButtonControl.InSolution_Field, WorkflowButtonControl.InStructureLevel_Field, WorkflowButtonControl.IsOfType_Field, WorkflowButtonControl.IsRootForStructureView_Field, WorkflowButtonControl.LastModifiedBy_Field, WorkflowButtonControl.ResourceConsoleBehavior_Field, WorkflowButtonControl.ResourceHasResourceKeyDataHashes_Field, WorkflowButtonControl.ResourceInFolder_Field, WorkflowButtonControl.SecurityOwner_Field, WorkflowButtonControl.SelectionBehavior_Field, WorkflowButtonControl.ShortcutInFolder_Field, WorkflowButtonControl.WbcDisableControlBasedOnRelationshipControl_Field, WorkflowButtonControl.WbcDisableControlBasedOnResources_Field, WorkflowButtonControl.WbcResourceInputParameter_Field, WorkflowButtonControl.WbcWorkflowToRun_Field };
			}
		}

		#endregion WorkflowButtonControl Public Fields

		#region WorkflowButtonControl Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? WbcHideSuccessConfirmation
		{
			get
			{
				return ( bool? ) this.GetField( "console:wbcHideSuccessConfirmation" );
			}
			set
			{
				this.SetField( "console:wbcHideSuccessConfirmation", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? HideLabel
		{
			get
			{
				return ( bool? ) this.GetField( "console:hideLabel" );
			}
			set
			{
				this.SetField( "console:hideLabel", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? MandatoryControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:mandatoryControl" );
			}
			set
			{
				this.SetField( "console:mandatoryControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ReadOnlyControl
		{
			get
			{
				return ( bool? ) this.GetField( "console:readOnlyControl" );
			}
			set
			{
				this.SetField( "console:readOnlyControl", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string RenderingBackgroundColor
		{
			get
			{
				return ( string ) this.GetField( "console:renderingBackgroundColor" );
			}
			set
			{
				this.SetField( "console:renderingBackgroundColor", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingHeight
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingHeight" );
			}
			set
			{
				this.SetField( "console:renderingHeight", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingOrdinal
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingOrdinal" );
			}
			set
			{
				this.SetField( "console:renderingOrdinal", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? RenderingWidth
		{
			get
			{
				return ( int? ) this.GetField( "console:renderingWidth" );
			}
			set
			{
				this.SetField( "console:renderingWidth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? ShowControlHelpText
		{
			get
			{
				return ( bool? ) this.GetField( "console:showControlHelpText" );
			}
			set
			{
				this.SetField( "console:showControlHelpText", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public StructureControlOnForm ContainedWithinStructureControlOnForm
		{
			get
			{
				return this.GetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", Direction.Reverse );
			}
			set
			{
				this.SetLookup<StructureControlOnForm>( "console:containedWithinStructureControlOnForm", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<RelatedEntityDataPathNode> ControlRelatedEntityDataPathNodes
		{
			get
			{
				return this.GetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<RelatedEntityDataPathNode>( "console:controlRelatedEntityDataPathNodes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public RelationshipControlOnForm WbcDisableControlBasedOnRelationshipControl
		{
			get
			{
				return this.GetLookup<RelationshipControlOnForm>( "console:wbcDisableControlBasedOnRelationshipControl", Direction.Forward );
			}
			set
			{
				this.SetLookup<RelationshipControlOnForm>( "console:wbcDisableControlBasedOnRelationshipControl", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<Resource> WbcDisableControlBasedOnResources
		{
			get
			{
				return this.GetRelationships<Resource>( "console:wbcDisableControlBasedOnResources", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<Resource>( "console:wbcDisableControlBasedOnResources", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ResourceArgument WbcResourceInputParameter
		{
			get
			{
				return this.GetLookup<ResourceArgument>( "console:wbcResourceInputParameter", Direction.Forward );
			}
			set
			{
				this.SetLookup<ResourceArgument>( "console:wbcResourceInputParameter", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow WbcWorkflowToRun
		{
			get
			{
				return this.GetLookup<Workflow>( "console:wbcWorkflowToRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "console:wbcWorkflowToRun", value, Direction.Forward );
			}
		}



		#endregion WorkflowButtonControl Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowButtonControl type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowButtonControl_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("console:workflowButtonControl");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// Implementation for the <see cref="WorkflowEventEnum" /> class.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowEventEnum")]
	public class WorkflowEventEnum : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowEventEnum( )
			: base( typeof( WorkflowEventEnum ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowEventEnum( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowEventEnum Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity EventBackingClass_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:eventBackingClass" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowEventEnum.Alias_Field, WorkflowEventEnum.CanDelete_Field, WorkflowEventEnum.CanModify_Field, WorkflowEventEnum.CanModifyProtectedResource_Field, WorkflowEventEnum.CreatedDate_Field, WorkflowEventEnum.Description_Field, WorkflowEventEnum.EnumOrder_Field, WorkflowEventEnum.ModifiedDate_Field, WorkflowEventEnum.Name_Field, WorkflowEventEnum.CreatedBy_Field, WorkflowEventEnum.EnumOwner_Field, WorkflowEventEnum.EventBackingClass_Field, WorkflowEventEnum.Flags_Field, WorkflowEventEnum.IndirectInSolution_Field, WorkflowEventEnum.InSolution_Field, WorkflowEventEnum.InStructureLevel_Field, WorkflowEventEnum.IsOfType_Field, WorkflowEventEnum.IsRootForStructureView_Field, WorkflowEventEnum.LastModifiedBy_Field, WorkflowEventEnum.ResourceConsoleBehavior_Field, WorkflowEventEnum.ResourceHasResourceKeyDataHashes_Field, WorkflowEventEnum.ResourceInFolder_Field, WorkflowEventEnum.SecurityOwner_Field, WorkflowEventEnum.SelectionBehavior_Field, WorkflowEventEnum.ShortcutInFolder_Field };
			}
		}

		#endregion WorkflowEventEnum Public Fields

		#region WorkflowEventEnum Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Class EventBackingClass
		{
			get
			{
				return this.GetLookup<Class>( "core:eventBackingClass", Direction.Forward );
			}
			set
			{
				this.SetLookup<Class>( "core:eventBackingClass", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion WorkflowEventEnum Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowEventEnum type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowEventEnum_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowEventEnum");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a WorkflowEventEnum_Enumeration value.
		/// </summary>
		public static WorkflowEventEnum_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:timeoutEvent": return WorkflowEventEnum_Enumeration.TimeoutEvent;
				case "core:userCompletesTaskEvent": return WorkflowEventEnum_Enumeration.UserCompletesTaskEvent;
				case "core:childWorkflowCompletedEvent": return WorkflowEventEnum_Enumeration.ChildWorkflowCompletedEvent;
				case "core:promptUserTaskCompletedEvent": return WorkflowEventEnum_Enumeration.PromptUserTaskCompletedEvent;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a WorkflowEventEnum_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(WorkflowEventEnum_Enumeration value)
		{
			switch (value)
			{
				case WorkflowEventEnum_Enumeration.TimeoutEvent: return "core:timeoutEvent";
				case WorkflowEventEnum_Enumeration.UserCompletesTaskEvent: return "core:userCompletesTaskEvent";
				case WorkflowEventEnum_Enumeration.ChildWorkflowCompletedEvent: return "core:childWorkflowCompletedEvent";
				case WorkflowEventEnum_Enumeration.PromptUserTaskCompletedEvent: return "core:promptUserTaskCompletedEvent";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<WorkflowEventEnum_Enumeration> GetEnumValues( WorkflowEventEnum_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( WorkflowEventEnum_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( WorkflowEventEnum_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// WorkflowEventEnum enumeration type.
	/// </summary>
	public enum WorkflowEventEnum_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		TimeoutEvent = 1,

		/// <summary>
		/// 
		/// </summary>
		UserCompletesTaskEvent = 2,

		/// <summary>
		/// 
		/// </summary>
		ChildWorkflowCompletedEvent = 4,

		/// <summary>
		/// 
		/// </summary>
		PromptUserTaskCompletedEvent = 8,

	}

	/// <summary>
	/// Run another workflow and wait for results.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowProxy")]
	public class WorkflowProxy : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowProxy( )
			: base( typeof( WorkflowProxy ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowProxy( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowProxy Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField DesignerData_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.DesignerData_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ArgumentInstanceFromActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ArgumentInstanceFromActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ContainingWorkflow_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ContainingWorkflow_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExitPoints_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.ExitPoints_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ExpressionMap_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ExpressionMap_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity ForwardTransitions_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.ForwardTransitions_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InternalArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.InternalArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity OutputArguments_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EntityWithArgsAndExits.OutputArguments_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity TransitionsForActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WfActivity.TransitionsForActivity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WorkflowToProxy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowToProxy" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowProxy.Alias_Field, WorkflowProxy.CanDelete_Field, WorkflowProxy.CanModify_Field, WorkflowProxy.CanModifyProtectedResource_Field, WorkflowProxy.CreatedDate_Field, WorkflowProxy.Description_Field, WorkflowProxy.DesignerData_Field, WorkflowProxy.ModifiedDate_Field, WorkflowProxy.Name_Field, WorkflowProxy.ArgumentInstanceFromActivity_Field, WorkflowProxy.ContainingWorkflow_Field, WorkflowProxy.CreatedBy_Field, WorkflowProxy.ExitPoints_Field, WorkflowProxy.ExpressionMap_Field, WorkflowProxy.Flags_Field, WorkflowProxy.ForwardTransitions_Field, WorkflowProxy.IndirectInSolution_Field, WorkflowProxy.InputArguments_Field, WorkflowProxy.InSolution_Field, WorkflowProxy.InStructureLevel_Field, WorkflowProxy.InternalArguments_Field, WorkflowProxy.IsOfType_Field, WorkflowProxy.IsRootForStructureView_Field, WorkflowProxy.LastModifiedBy_Field, WorkflowProxy.OutputArguments_Field, WorkflowProxy.ResourceConsoleBehavior_Field, WorkflowProxy.ResourceHasResourceKeyDataHashes_Field, WorkflowProxy.ResourceInFolder_Field, WorkflowProxy.SecurityOwner_Field, WorkflowProxy.SelectionBehavior_Field, WorkflowProxy.ShortcutInFolder_Field, WorkflowProxy.TransitionsForActivity_Field, WorkflowProxy.WorkflowToProxy_Field };
			}
		}

		#endregion WorkflowProxy Public Fields

		#region WorkflowProxy Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string DesignerData
		{
			get
			{
				return ( string ) this.GetField( "core:designerData" );
			}
			set
			{
				this.SetField( "core:designerData", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<WfArgumentInstance> ArgumentInstanceFromActivity
		{
			get
			{
				return this.GetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WfArgumentInstance>( "core:argumentInstanceFromActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public Workflow ContainingWorkflow
		{
			get
			{
				return this.GetLookup<Workflow>( "core:containingWorkflow", Direction.Reverse );
			}
			set
			{
				this.SetLookup<Workflow>( "core:containingWorkflow", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ExitPoint> ExitPoints
		{
			get
			{
				return this.GetRelationships<ExitPoint>( "core:exitPoints", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ExitPoint>( "core:exitPoints", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<WfExpression> ExpressionMap
		{
			get
			{
				return this.GetRelationships<WfExpression>( "core:expressionMap", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WfExpression>( "core:expressionMap", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<TransitionStart> ForwardTransitions
		{
			get
			{
				return this.GetRelationships<TransitionStart>( "core:forwardTransitions", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<TransitionStart>( "core:forwardTransitions", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:inputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:inputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> InternalArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:internalArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:internalArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ActivityArgument> OutputArguments
		{
			get
			{
				return this.GetRelationships<ActivityArgument>( "core:outputArguments", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ActivityArgument>( "core:outputArguments", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public IEntityCollection<Transition> TransitionsForActivity
		{
			get
			{
				return this.GetRelationships<Transition>( "core:transitionsForActivity", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<Transition>( "core:transitionsForActivity", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow WorkflowToProxy
		{
			get
			{
				return this.GetLookup<Workflow>( "core:workflowToProxy", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:workflowToProxy", value, Direction.Forward );
			}
		}



		#endregion WorkflowProxy Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowProxy type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowProxy_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowProxy");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A running instance of a workflow that has been triggered.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowRun")]
	public class WorkflowRun : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowRun( )
			: base( typeof( WorkflowRun ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowRun( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowRun Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField HasTimeout_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:hasTimeout" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField RunCompletedAt_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:runCompletedAt" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField RunStepCounter_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:runStepCounter" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static BoolField RunTrace_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<BoolField>( "core:runTrace" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField TaskId_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:taskId" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField TotalTimeMs_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:totalTimeMs" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static IntField TriggerDepth_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<IntField>( "core:triggerDepth" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ChildRuns_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:childRuns" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ErrorLogEntry_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:errorLogEntry" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity ParentRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:childRuns" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity PendingActivity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:pendingActivity" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity RunLog_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowRunBeingLogged" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity StateInfo_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:stateInfo" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity TaskWithinWorkflowRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowRunForTask" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity TriggerForRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:triggerForRun" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity TriggeringUser_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:triggeringUser" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WorkflowBeingRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowBeingRun" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WorkflowRunExitPoint_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowRunExitPoint" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WorkflowRunStatus_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowRunStatus" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowRun.HasTimeout_Field, WorkflowRun.RunCompletedAt_Field, WorkflowRun.RunStepCounter_Field, WorkflowRun.RunTrace_Field, WorkflowRun.TaskId_Field, WorkflowRun.TotalTimeMs_Field, WorkflowRun.TriggerDepth_Field, WorkflowRun.Alias_Field, WorkflowRun.CanDelete_Field, WorkflowRun.CanModify_Field, WorkflowRun.CreatedDate_Field, WorkflowRun.Description_Field, WorkflowRun.ModifiedDate_Field, WorkflowRun.Name_Field, WorkflowRun.ChildRuns_Field, WorkflowRun.CreatedBy_Field, WorkflowRun.ErrorLogEntry_Field, WorkflowRun.Flags_Field, WorkflowRun.IndirectInSolution_Field, WorkflowRun.InSolution_Field, WorkflowRun.InStructureLevel_Field, WorkflowRun.IsOfType_Field, WorkflowRun.IsRootForStructureView_Field, WorkflowRun.LastModifiedBy_Field, WorkflowRun.ParentRun_Field, WorkflowRun.PendingActivity_Field, WorkflowRun.ResourceConsoleBehavior_Field, WorkflowRun.ResourceHasResourceKeyDataHashes_Field, WorkflowRun.ResourceInFolder_Field, WorkflowRun.RunLog_Field, WorkflowRun.SecurityOwner_Field, WorkflowRun.SelectionBehavior_Field, WorkflowRun.ShortcutInFolder_Field, WorkflowRun.StateInfo_Field, WorkflowRun.TaskWithinWorkflowRun_Field, WorkflowRun.TriggerForRun_Field, WorkflowRun.TriggeringUser_Field, WorkflowRun.WorkflowBeingRun_Field, WorkflowRun.WorkflowRunExitPoint_Field, WorkflowRun.WorkflowRunStatus_Field };
			}
		}

		#endregion WorkflowRun Public Fields

		#region WorkflowRun Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? HasTimeout
		{
			get
			{
				return ( bool? ) this.GetField( "core:hasTimeout" );
			}
			set
			{
				this.SetField( "core:hasTimeout", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? RunCompletedAt
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:runCompletedAt" );
			}
			set
			{
				this.SetField( "core:runCompletedAt", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? RunStepCounter
		{
			get
			{
				return ( int? ) this.GetField( "core:runStepCounter" );
			}
			set
			{
				this.SetField( "core:runStepCounter", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public bool? RunTrace
		{
			get
			{
				return ( bool? ) this.GetField( "core:runTrace" );
			}
			set
			{
				this.SetField( "core:runTrace", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string TaskId
		{
			get
			{
				return ( string ) this.GetField( "core:taskId" );
			}
			set
			{
				this.SetField( "core:taskId", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? TotalTimeMs
		{
			get
			{
				return ( int? ) this.GetField( "core:totalTimeMs" );
			}
			set
			{
				this.SetField( "core:totalTimeMs", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public int? TriggerDepth
		{
			get
			{
				return ( int? ) this.GetField( "core:triggerDepth" );
			}
			set
			{
				this.SetField( "core:triggerDepth", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<WorkflowRun> ChildRuns
		{
			get
			{
				return this.GetRelationships<WorkflowRun>( "core:childRuns", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<WorkflowRun>( "core:childRuns", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WorkflowRunLogEntry ErrorLogEntry
		{
			get
			{
				return this.GetLookup<WorkflowRunLogEntry>( "core:errorLogEntry", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRunLogEntry>( "core:errorLogEntry", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public WorkflowRun ParentRun
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:parentRun", Direction.Reverse );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:parentRun", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WfActivity PendingActivity
		{
			get
			{
				return this.GetLookup<WfActivity>( "core:pendingActivity", Direction.Forward );
			}
			set
			{
				this.SetLookup<WfActivity>( "core:pendingActivity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<WorkflowRunLogEntry> RunLog
		{
			get
			{
				return this.GetRelationships<WorkflowRunLogEntry>( "core:runLog", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<WorkflowRunLogEntry>( "core:runLog", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public IEntityCollection<StateInfoEntry> StateInfo
		{
			get
			{
				return this.GetRelationships<StateInfoEntry>( "core:stateInfo", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StateInfoEntry>( "core:stateInfo", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public IEntityCollection<BaseUserTask> TaskWithinWorkflowRun
		{
			get
			{
				return this.GetRelationships<BaseUserTask>( "core:taskWithinWorkflowRun", Direction.Reverse ).Entities;
			}
			set
			{
				this.SetRelationships<BaseUserTask>( "core:taskWithinWorkflowRun", value, Direction.Reverse );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WfTrigger TriggerForRun
		{
			get
			{
				return this.GetLookup<WfTrigger>( "core:triggerForRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<WfTrigger>( "core:triggerForRun", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public UserAccount TriggeringUser
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:triggeringUser", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:triggeringUser", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public Workflow WorkflowBeingRun
		{
			get
			{
				return this.GetLookup<Workflow>( "core:workflowBeingRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<Workflow>( "core:workflowBeingRun", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public ExitPoint WorkflowRunExitPoint
		{
			get
			{
				return this.GetLookup<ExitPoint>( "core:workflowRunExitPoint", Direction.Forward );
			}
			set
			{
				this.SetLookup<ExitPoint>( "core:workflowRunExitPoint", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WorkflowRunState WorkflowRunStatus
		{
			get
			{
				return this.GetLookup<WorkflowRunState>( "core:workflowRunStatus", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRunState>( "core:workflowRunStatus", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public WorkflowRunState_Enumeration? WorkflowRunStatus_Enum
		{
			get
			{
				return GetEnum<WorkflowRunState, WorkflowRunState_Enumeration>( "core:workflowRunStatus", Direction.Forward, WorkflowRunState.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:workflowRunStatus", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:workflowRunStatus", new EntityRelationship<WorkflowRunState>( EDC.ReadiNow.Model.Entity.Get<WorkflowRunState>( EntityRefHelper.ConvertAliasWithNamespace( WorkflowRunState.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		



		#endregion WorkflowRun Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowRun type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowRun_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowRun");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A log entry generated by a failure during a workflow run.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowRunFailedLogEntry")]
	public class WorkflowRunFailedLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowRunFailedLogEntry( )
			: base( typeof( WorkflowRunFailedLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowRunFailedLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowRunFailedLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField LogEventTime_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEventTime_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField WrleStepName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WrleStepName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField WrleWorkflowName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WrleWorkflowName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity ActivityBeingRun_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:activityBeingRun" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity WorkflowRunBeingLogged_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WorkflowRunBeingLogged_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity WorkflowRunInError_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WorkflowRunInError_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowRunFailedLogEntry.Alias_Field, WorkflowRunFailedLogEntry.CanDelete_Field, WorkflowRunFailedLogEntry.CanModify_Field, WorkflowRunFailedLogEntry.CreatedDate_Field, WorkflowRunFailedLogEntry.Description_Field, WorkflowRunFailedLogEntry.LogEventTime_Field, WorkflowRunFailedLogEntry.ModifiedDate_Field, WorkflowRunFailedLogEntry.Name_Field, WorkflowRunFailedLogEntry.WrleStepName_Field, WorkflowRunFailedLogEntry.WrleWorkflowName_Field, WorkflowRunFailedLogEntry.ActivityBeingRun_Field, WorkflowRunFailedLogEntry.CreatedBy_Field, WorkflowRunFailedLogEntry.Flags_Field, WorkflowRunFailedLogEntry.IndirectInSolution_Field, WorkflowRunFailedLogEntry.InSolution_Field, WorkflowRunFailedLogEntry.InStructureLevel_Field, WorkflowRunFailedLogEntry.IsOfType_Field, WorkflowRunFailedLogEntry.IsRootForStructureView_Field, WorkflowRunFailedLogEntry.LastModifiedBy_Field, WorkflowRunFailedLogEntry.LogEntrySeverity_Field, WorkflowRunFailedLogEntry.ResourceConsoleBehavior_Field, WorkflowRunFailedLogEntry.ResourceHasResourceKeyDataHashes_Field, WorkflowRunFailedLogEntry.ResourceInFolder_Field, WorkflowRunFailedLogEntry.SecurityOwner_Field, WorkflowRunFailedLogEntry.SelectionBehavior_Field, WorkflowRunFailedLogEntry.ShortcutInFolder_Field, WorkflowRunFailedLogEntry.WorkflowRunBeingLogged_Field, WorkflowRunFailedLogEntry.WorkflowRunInError_Field };
			}
		}

		#endregion WorkflowRunFailedLogEntry Public Fields

		#region WorkflowRunFailedLogEntry Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? LogEventTime
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:logEventTime" );
			}
			set
			{
				this.SetField( "core:logEventTime", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string WrleStepName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleStepName" );
			}
			set
			{
				this.SetField( "core:wrleStepName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string WrleWorkflowName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleWorkflowName" );
			}
			set
			{
				this.SetField( "core:wrleWorkflowName", value);
			}
		}

		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WfActivity ActivityBeingRun
		{
			get
			{
				return this.GetLookup<WfActivity>( "core:activityBeingRun", Direction.Forward );
			}
			set
			{
				this.SetLookup<WfActivity>( "core:activityBeingRun", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public LogSeverityEnum LogEntrySeverity
		{
			get
			{
				return this.GetLookup<LogSeverityEnum>( "core:logEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<LogSeverityEnum>( "core:logEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public LogSeverityEnum_Enumeration? LogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<LogSeverityEnum, LogSeverityEnum_Enumeration>( "core:logEntrySeverity", Direction.Forward, LogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:logEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:logEntrySeverity", new EntityRelationship<LogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<LogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( LogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public WorkflowRun WorkflowRunBeingLogged
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunBeingLogged", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunBeingLogged", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public WorkflowRun WorkflowRunInError
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunInError", Direction.Reverse );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunInError", value, Direction.Reverse );
			}
		}



		#endregion WorkflowRunFailedLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowRunFailedLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowRunFailedLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowRunFailedLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A generic log message for a running workflow
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowRunLogEntry")]
	public class WorkflowRunLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowRunLogEntry( )
			: base( typeof( WorkflowRunLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowRunLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowRunLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField WrleStepName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:wrleStepName" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField WrleWorkflowName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:wrleWorkflowName" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField LogEventTime_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEventTime_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity WorkflowRunBeingLogged_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:workflowRunBeingLogged" );
			}
		}

		/// <summary>
		/// Public static accessor to the direct reverse relationship.
		/// </summary>
		public static IEntity WorkflowRunInError_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:errorLogEntry" );
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowRunLogEntry.WrleStepName_Field, WorkflowRunLogEntry.WrleWorkflowName_Field, WorkflowRunLogEntry.Alias_Field, WorkflowRunLogEntry.CanDelete_Field, WorkflowRunLogEntry.CanModify_Field, WorkflowRunLogEntry.CreatedDate_Field, WorkflowRunLogEntry.Description_Field, WorkflowRunLogEntry.LogEventTime_Field, WorkflowRunLogEntry.ModifiedDate_Field, WorkflowRunLogEntry.Name_Field, WorkflowRunLogEntry.CreatedBy_Field, WorkflowRunLogEntry.Flags_Field, WorkflowRunLogEntry.IndirectInSolution_Field, WorkflowRunLogEntry.InSolution_Field, WorkflowRunLogEntry.InStructureLevel_Field, WorkflowRunLogEntry.IsOfType_Field, WorkflowRunLogEntry.IsRootForStructureView_Field, WorkflowRunLogEntry.LastModifiedBy_Field, WorkflowRunLogEntry.LogEntrySeverity_Field, WorkflowRunLogEntry.ResourceConsoleBehavior_Field, WorkflowRunLogEntry.ResourceHasResourceKeyDataHashes_Field, WorkflowRunLogEntry.ResourceInFolder_Field, WorkflowRunLogEntry.SecurityOwner_Field, WorkflowRunLogEntry.SelectionBehavior_Field, WorkflowRunLogEntry.ShortcutInFolder_Field, WorkflowRunLogEntry.WorkflowRunBeingLogged_Field, WorkflowRunLogEntry.WorkflowRunInError_Field };
			}
		}

		#endregion WorkflowRunLogEntry Public Fields

		#region WorkflowRunLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string WrleStepName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleStepName" );
			}
			set
			{
				this.SetField( "core:wrleStepName", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string WrleWorkflowName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleWorkflowName" );
			}
			set
			{
				this.SetField( "core:wrleWorkflowName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? LogEventTime
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:logEventTime" );
			}
			set
			{
				this.SetField( "core:logEventTime", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public LogSeverityEnum LogEntrySeverity
		{
			get
			{
				return this.GetLookup<LogSeverityEnum>( "core:logEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<LogSeverityEnum>( "core:logEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public LogSeverityEnum_Enumeration? LogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<LogSeverityEnum, LogSeverityEnum_Enumeration>( "core:logEntrySeverity", Direction.Forward, LogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:logEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:logEntrySeverity", new EntityRelationship<LogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<LogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( LogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public WorkflowRun WorkflowRunBeingLogged
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunBeingLogged", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunBeingLogged", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directreverse relationship.
		/// </summary>
		public WorkflowRun WorkflowRunInError
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunInError", Direction.Reverse );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunInError", value, Direction.Reverse );
			}
		}



		#endregion WorkflowRunLogEntry Public Properties

		#region Type casting

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WorkflowRunLogEntry( LogActivityLogEntry entity )
		{
			return entity.Cast<WorkflowRunLogEntry>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WorkflowRunLogEntry( LogActivityResourceLogEntry entity )
		{
			return entity.Cast<WorkflowRunLogEntry>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WorkflowRunLogEntry( RunTraceLogEntry entity )
		{
			return entity.Cast<WorkflowRunLogEntry>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WorkflowRunLogEntry( WorkflowRunFailedLogEntry entity )
		{
			return entity.Cast<WorkflowRunLogEntry>( );
		}

		/// <summary>
		/// Explicit cast from the specified type to the current type.
		/// </summary>
		public static explicit operator WorkflowRunLogEntry( WorkflowUserActionLogEntry entity )
		{
			return entity.Cast<WorkflowRunLogEntry>( );
		}

		#endregion Type casting

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowRunLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowRunLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowRunLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

	/// <summary>
	/// A possible state a workflow can be in.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowRunState")]
	public class WorkflowRunState : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowRunState( )
			: base( typeof( WorkflowRunState ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowRunState( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowRunState Public Fields

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModifyProtectedResource_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ProtectableType.CanModifyProtectedResource_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static IntField EnumOrder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOrder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity EnumOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.EnumValue.EnumOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowRunState.Alias_Field, WorkflowRunState.CanDelete_Field, WorkflowRunState.CanModify_Field, WorkflowRunState.CanModifyProtectedResource_Field, WorkflowRunState.CreatedDate_Field, WorkflowRunState.Description_Field, WorkflowRunState.EnumOrder_Field, WorkflowRunState.ModifiedDate_Field, WorkflowRunState.Name_Field, WorkflowRunState.CreatedBy_Field, WorkflowRunState.EnumOwner_Field, WorkflowRunState.Flags_Field, WorkflowRunState.IndirectInSolution_Field, WorkflowRunState.InSolution_Field, WorkflowRunState.InStructureLevel_Field, WorkflowRunState.IsOfType_Field, WorkflowRunState.IsRootForStructureView_Field, WorkflowRunState.LastModifiedBy_Field, WorkflowRunState.ResourceConsoleBehavior_Field, WorkflowRunState.ResourceHasResourceKeyDataHashes_Field, WorkflowRunState.ResourceInFolder_Field, WorkflowRunState.SecurityOwner_Field, WorkflowRunState.SelectionBehavior_Field, WorkflowRunState.ShortcutInFolder_Field };
			}
		}

		#endregion WorkflowRunState Public Fields

		#region WorkflowRunState Public Properties

		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModifyProtectedResource
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModifyProtectedResource" );
			}
			set
			{
				this.SetField( "core:canModifyProtectedResource", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public int? EnumOrder
		{
			get
			{
				return ( int? ) this.GetField( "core:enumOrder" );
			}
			set
			{
				this.SetField( "core:enumOrder", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public EnumType EnumOwner
		{
			get
			{
				return this.GetLookup<EnumType>( "core:enumOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<EnumType>( "core:enumOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}



		#endregion WorkflowRunState Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowRunState type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowRunState_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowRunState");
			}
		}
		
		#endregion Additional Static Content

		#region Static Enum Converters
		/// <summary>
		/// Converts an enumValue alias to a WorkflowRunState_Enumeration value.
		/// </summary>
		public static WorkflowRunState_Enumeration? ConvertAliasToEnum(string nsAlias)
		{
			switch (nsAlias)
			{
				case "core:workflowRunQueued": return WorkflowRunState_Enumeration.WorkflowRunQueued;
				case "core:workflowRunStarted": return WorkflowRunState_Enumeration.WorkflowRunStarted;
				case "core:workflowRunPaused": return WorkflowRunState_Enumeration.WorkflowRunPaused;
				case "core:workflowRunCompleted": return WorkflowRunState_Enumeration.WorkflowRunCompleted;
				case "core:workflowRunFailed": return WorkflowRunState_Enumeration.WorkflowRunFailed;
				case "core:workflowRunCancelled": return WorkflowRunState_Enumeration.WorkflowRunCancelled;
				default: return null;
			}
		}
	
		/// <summary>
		/// Converts a WorkflowRunState_Enumeration to its alias string.
		/// </summary>
		public static string ConvertEnumToAlias(WorkflowRunState_Enumeration value)
		{
			switch (value)
			{
				case WorkflowRunState_Enumeration.WorkflowRunQueued: return "core:workflowRunQueued";
				case WorkflowRunState_Enumeration.WorkflowRunStarted: return "core:workflowRunStarted";
				case WorkflowRunState_Enumeration.WorkflowRunPaused: return "core:workflowRunPaused";
				case WorkflowRunState_Enumeration.WorkflowRunCompleted: return "core:workflowRunCompleted";
				case WorkflowRunState_Enumeration.WorkflowRunFailed: return "core:workflowRunFailed";
				case WorkflowRunState_Enumeration.WorkflowRunCancelled: return "core:workflowRunCancelled";
				default: return null;
			}
		}

		/// <summary>
		/// Gets the individual values that comprise the enumeration.
		/// </summary>
		public static IEnumerable<WorkflowRunState_Enumeration> GetEnumValues( WorkflowRunState_Enumeration value )
		{
			foreach ( object o in Enum.GetValues( typeof( WorkflowRunState_Enumeration ) ) )
			{
				if ( ( ( int ) o & ( int ) ( object ) value ) != 0 )
				{
					yield return ( WorkflowRunState_Enumeration ) o;
				}
			}
		}
		#endregion

	}

	/// <summary>
	/// WorkflowRunState enumeration type.
	/// </summary>
	public enum WorkflowRunState_Enumeration : ulong
	{
		/// <summary>
		/// 
		/// </summary>
		WorkflowRunQueued = 1,

		/// <summary>
		/// 
		/// </summary>
		WorkflowRunStarted = 2,

		/// <summary>
		/// 
		/// </summary>
		WorkflowRunPaused = 4,

		/// <summary>
		/// 
		/// </summary>
		WorkflowRunCompleted = 8,

		/// <summary>
		/// 
		/// </summary>
		WorkflowRunFailed = 16,

		/// <summary>
		/// 
		/// </summary>
		WorkflowRunCancelled = 32,

	}

	/// <summary>
	/// A log entry for recording user actions within a process.
	/// </summary>
	[Serializable]
	[DebuggerStepThrough]
	[ModelClass("core:workflowUserActionLogEntry")]
	public class WorkflowUserActionLogEntry : StrongEntity
	{
		/// <summary>
		/// Public constructor.
		/// </summary>
		public WorkflowUserActionLogEntry( )
			: base( typeof( WorkflowUserActionLogEntry ))
		{

		}

		/// <summary>
		/// Internal constructor.
		/// </summary>
		internal WorkflowUserActionLogEntry( IActivationData activationData )
			: base( activationData )
		{

		}

		#region WorkflowUserActionLogEntry Public Fields

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField WuleActionSummary_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:wuleActionSummary" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField WuleCompletedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:wuleCompletedDate" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static DateTimeField WuleDueDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<DateTimeField>( "core:wuleDueDate" );
			}
		}

		/// <summary>
		/// Public static accessor to the field.
		/// </summary>
		public static StringField WuleUserComment_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<StringField>( "core:wuleUserComment" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ActingPersonName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActingPersonLogEntry.ActingPersonName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static AliasField Alias_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Alias_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanDelete_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanDelete_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static BoolField CanModify_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CanModify_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField CreatedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Description_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Description_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField LogEventTime_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEventTime_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static DateTimeField ModifiedDate_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ModifiedDate_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField Name_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Name_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField ReferencedObjectName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ManagedObjectLogEntry.ReferencedObjectName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField WrleStepName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WrleStepName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited field.
		/// </summary>
		public static StringField WrleWorkflowName_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WrleWorkflowName_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ActingPersonReferencedInLog_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ActingPersonLogEntry.ActingPersonReferencedInLog_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity CreatedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.CreatedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity Flags_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.Flags_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IndirectInSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IndirectInSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InSolution_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InSolution_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity InStructureLevel_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.InStructureLevel_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsOfType_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsOfType_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity IsRootForStructureView_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.IsRootForStructureView_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LastModifiedBy_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.LastModifiedBy_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity LogEntrySeverity_Field
		{
			get
			{
				return EDC.ReadiNow.Model.TenantLogEntry.LogEntrySeverity_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ObjectReferencedInLog_Field
		{
			get
			{
				return EDC.ReadiNow.Model.ManagedObjectLogEntry.ObjectReferencedInLog_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceConsoleBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceConsoleBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceHasResourceKeyDataHashes_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceHasResourceKeyDataHashes_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ResourceInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ResourceInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SecurityOwner_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SecurityOwner_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity SelectionBehavior_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.SelectionBehavior_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity ShortcutInFolder_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Resource.ShortcutInFolder_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the direct forward relationship.
		/// </summary>
		public static IEntity UserActionBeingLogged_Field
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.GetFieldEntity<Entity>( "core:userActionBeingLogged" );
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  forward relationship.
		/// </summary>
		public static IEntity WorkflowRunBeingLogged_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WorkflowRunBeingLogged_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the inherited  reverse relationship.
		/// </summary>
		public static IEntity WorkflowRunInError_Field
		{
			get
			{
				return EDC.ReadiNow.Model.WorkflowRunLogEntry.WorkflowRunInError_Field;
			}
		}

		/// <summary>
		/// Public static accessor to the array of all fields registered against this type.
		/// </summary>
		public static IEntity [ ] AllFields
		{
			get
			{
				return new IEntity [ ] { WorkflowUserActionLogEntry.WuleActionSummary_Field, WorkflowUserActionLogEntry.WuleCompletedDate_Field, WorkflowUserActionLogEntry.WuleDueDate_Field, WorkflowUserActionLogEntry.WuleUserComment_Field, WorkflowUserActionLogEntry.ActingPersonName_Field, WorkflowUserActionLogEntry.Alias_Field, WorkflowUserActionLogEntry.CanDelete_Field, WorkflowUserActionLogEntry.CanModify_Field, WorkflowUserActionLogEntry.CreatedDate_Field, WorkflowUserActionLogEntry.Description_Field, WorkflowUserActionLogEntry.LogEventTime_Field, WorkflowUserActionLogEntry.ModifiedDate_Field, WorkflowUserActionLogEntry.Name_Field, WorkflowUserActionLogEntry.ReferencedObjectName_Field, WorkflowUserActionLogEntry.WrleStepName_Field, WorkflowUserActionLogEntry.WrleWorkflowName_Field, WorkflowUserActionLogEntry.ActingPersonReferencedInLog_Field, WorkflowUserActionLogEntry.CreatedBy_Field, WorkflowUserActionLogEntry.Flags_Field, WorkflowUserActionLogEntry.IndirectInSolution_Field, WorkflowUserActionLogEntry.InSolution_Field, WorkflowUserActionLogEntry.InStructureLevel_Field, WorkflowUserActionLogEntry.IsOfType_Field, WorkflowUserActionLogEntry.IsRootForStructureView_Field, WorkflowUserActionLogEntry.LastModifiedBy_Field, WorkflowUserActionLogEntry.LogEntrySeverity_Field, WorkflowUserActionLogEntry.ObjectReferencedInLog_Field, WorkflowUserActionLogEntry.ResourceConsoleBehavior_Field, WorkflowUserActionLogEntry.ResourceHasResourceKeyDataHashes_Field, WorkflowUserActionLogEntry.ResourceInFolder_Field, WorkflowUserActionLogEntry.SecurityOwner_Field, WorkflowUserActionLogEntry.SelectionBehavior_Field, WorkflowUserActionLogEntry.ShortcutInFolder_Field, WorkflowUserActionLogEntry.UserActionBeingLogged_Field, WorkflowUserActionLogEntry.WorkflowRunBeingLogged_Field, WorkflowUserActionLogEntry.WorkflowRunInError_Field };
			}
		}

		#endregion WorkflowUserActionLogEntry Public Fields

		#region WorkflowUserActionLogEntry Public Properties

		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string WuleActionSummary
		{
			get
			{
				return ( string ) this.GetField( "core:wuleActionSummary" );
			}
			set
			{
				this.SetField( "core:wuleActionSummary", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? WuleCompletedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:wuleCompletedDate" );
			}
			set
			{
				this.SetField( "core:wuleCompletedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public DateTime? WuleDueDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:wuleDueDate" );
			}
			set
			{
				this.SetField( "core:wuleDueDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the field.
		/// </summary>
		public string WuleUserComment
		{
			get
			{
				return ( string ) this.GetField( "core:wuleUserComment" );
			}
			set
			{
				this.SetField( "core:wuleUserComment", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ActingPersonName
		{
			get
			{
				return ( string ) this.GetField( "core:actingPersonName" );
			}
			set
			{
				this.SetField( "core:actingPersonName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Alias
		{
			get
			{
				return ( string ) this.GetField( "core:alias" );
			}
			set
			{
				this.SetField( "core:alias", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanDelete
		{
			get
			{
				return ( bool? ) this.GetField( "core:canDelete" );
			}
			set
			{
				this.SetField( "core:canDelete", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public bool? CanModify
		{
			get
			{
				return ( bool? ) this.GetField( "core:canModify" );
			}
			set
			{
				this.SetField( "core:canModify", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? CreatedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:createdDate" );
			}
			set
			{
				this.SetField( "core:createdDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Description
		{
			get
			{
				return ( string ) this.GetField( "core:description" );
			}
			set
			{
				this.SetField( "core:description", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? LogEventTime
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:logEventTime" );
			}
			set
			{
				this.SetField( "core:logEventTime", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public DateTime? ModifiedDate
		{
			get
			{
				return ( DateTime? ) this.GetField( "core:modifiedDate" );
			}
			set
			{
				this.SetField( "core:modifiedDate", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string Name
		{
			get
			{
				return ( string ) this.GetField( "core:name" );
			}
			set
			{
				this.SetField( "core:name", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string ReferencedObjectName
		{
			get
			{
				return ( string ) this.GetField( "core:referencedObjectName" );
			}
			set
			{
				this.SetField( "core:referencedObjectName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string WrleStepName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleStepName" );
			}
			set
			{
				this.SetField( "core:wrleStepName", value);
			}
		}
		/// <summary>
		/// Public accessor for the inherited field.
		/// </summary>
		public string WrleWorkflowName
		{
			get
			{
				return ( string ) this.GetField( "core:wrleWorkflowName" );
			}
			set
			{
				this.SetField( "core:wrleWorkflowName", value);
			}
		}

		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Person ActingPersonReferencedInLog
		{
			get
			{
				return this.GetLookup<Person>( "core:actingPersonReferencedInLog", Direction.Forward );
			}
			set
			{
				this.SetLookup<Person>( "core:actingPersonReferencedInLog", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount CreatedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:createdBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:createdBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceFlagsEnum> Flags
		{
			get
			{
				return this.GetRelationships<ResourceFlagsEnum>( "core:flags", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceFlagsEnum>( "core:flags", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public ResourceFlagsEnum_Enumeration? Flags_Enum
		{
			get
			{
				return GetMultiEnum<ResourceFlagsEnum, ResourceFlagsEnum_Enumeration>( "core:flags", Direction.Forward, ResourceFlagsEnum.ConvertAliasToEnum, (enum1, enum2) => enum1 | enum2 );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:flags", null, Direction.Forward );
					return;
				}
				var relationships = new List<ResourceFlagsEnum>( );

				foreach ( ResourceFlagsEnum_Enumeration enumValue in ResourceFlagsEnum.GetEnumValues( value.Value ) )
				{
				    relationships.Add( EDC.ReadiNow.Model.Entity.Get<ResourceFlagsEnum>( EntityRefHelper.ConvertAliasWithNamespace( ResourceFlagsEnum.ConvertEnumToAlias( enumValue ) ) ) );
				}

				this.SetRelationships( "core:flags", new EntityRelationshipCollection<ResourceFlagsEnum>( relationships ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution IndirectInSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:indirectInSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:indirectInSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public Solution InSolution
		{
			get
			{
				return this.GetLookup<Solution>( "core:inSolution", Direction.Forward );
			}
			set
			{
				this.SetLookup<Solution>( "core:inSolution", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureLevel> InStructureLevel
		{
			get
			{
				return this.GetRelationships<StructureLevel>( "core:inStructureLevel", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureLevel>( "core:inStructureLevel", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<EntityType> IsOfType
		{
			get
			{
				return this.GetRelationships<EntityType>( "core:isOfType", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<EntityType>( "core:isOfType", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<StructureView> IsRootForStructureView
		{
			get
			{
				return this.GetRelationships<StructureView>( "core:isRootForStructureView", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<StructureView>( "core:isRootForStructureView", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount LastModifiedBy
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:lastModifiedBy", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:lastModifiedBy", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public LogSeverityEnum LogEntrySeverity
		{
			get
			{
				return this.GetLookup<LogSeverityEnum>( "core:logEntrySeverity", Direction.Forward );
			}
			set
			{
				this.SetLookup<LogSeverityEnum>( "core:logEntrySeverity", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the enumeration value.
		/// </summary>
		public LogSeverityEnum_Enumeration? LogEntrySeverity_Enum
		{
			get
			{
				return GetEnum<LogSeverityEnum, LogSeverityEnum_Enumeration>( "core:logEntrySeverity", Direction.Forward, LogSeverityEnum.ConvertAliasToEnum );
			}
			set
			{
				if ( value == null )
				{
					this.SetRelationships( "core:logEntrySeverity", null, Direction.Forward );
					return;
				}
				this.SetRelationships( "core:logEntrySeverity", new EntityRelationship<LogSeverityEnum>( EDC.ReadiNow.Model.Entity.Get<LogSeverityEnum>( EntityRefHelper.ConvertAliasWithNamespace( LogSeverityEnum.ConvertEnumToAlias( value.Value ) ) ) ).ToEntityRelationshipCollection( ), Direction.Forward );
			}
		}		
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserResource ObjectReferencedInLog
		{
			get
			{
				return this.GetLookup<UserResource>( "core:objectReferencedInLog", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserResource>( "core:objectReferencedInLog", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior ResourceConsoleBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:resourceConsoleBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<ResourceKeyDataHash> ResourceHasResourceKeyDataHashes
		{
			get
			{
				return this.GetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<ResourceKeyDataHash>( "core:resourceHasResourceKeyDataHashes", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ResourceInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:resourceInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:resourceInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public UserAccount SecurityOwner
		{
			get
			{
				return this.GetLookup<UserAccount>( "core:securityOwner", Direction.Forward );
			}
			set
			{
				this.SetLookup<UserAccount>( "core:securityOwner", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public ConsoleBehavior SelectionBehavior
		{
			get
			{
				return this.GetLookup<ConsoleBehavior>( "console:selectionBehavior", Direction.Forward );
			}
			set
			{
				this.SetLookup<ConsoleBehavior>( "console:selectionBehavior", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public IEntityCollection<NavContainer> ShortcutInFolder
		{
			get
			{
				return this.GetRelationships<NavContainer>( "console:shortcutInFolder", Direction.Forward ).Entities;
			}
			set
			{
				this.SetRelationships<NavContainer>( "console:shortcutInFolder", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the directforward relationship.
		/// </summary>
		public DisplayFormUserTask UserActionBeingLogged
		{
			get
			{
				return this.GetLookup<DisplayFormUserTask>( "core:userActionBeingLogged", Direction.Forward );
			}
			set
			{
				this.SetLookup<DisplayFormUserTask>( "core:userActionBeingLogged", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited forward relationship.
		/// </summary>
		public WorkflowRun WorkflowRunBeingLogged
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunBeingLogged", Direction.Forward );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunBeingLogged", value, Direction.Forward );
			}
		}
		/// <summary>
		/// Public accessor for the inherited reverse relationship.
		/// </summary>
		public WorkflowRun WorkflowRunInError
		{
			get
			{
				return this.GetLookup<WorkflowRun>( "core:workflowRunInError", Direction.Reverse );
			}
			set
			{
				this.SetLookup<WorkflowRun>( "core:workflowRunInError", value, Direction.Reverse );
			}
		}



		#endregion WorkflowUserActionLogEntry Public Properties

		#region Additional Static Content

		/// <summary>
        /// Returns all instances of the WorkflowUserActionLogEntry type
        /// </summary>
        /// <returns>An enumeration of instances of this type.</returns>
        public static EntityType WorkflowUserActionLogEntry_Type
		{
			get
			{
				return EDC.ReadiNow.Model.Entity.Get<EntityType>("core:workflowUserActionLogEntry");
			}
		}
		
		#endregion Additional Static Content

	}

}