// Copyright 2011-2016 Global Software Innovation Pty Ltd
extern alias EdcReadinowCommon;
using EntityType = EdcReadinowCommon::EDC.ReadiNow.Model.EntityType;
using Resource = EdcReadinowCommon::EDC.ReadiNow.Model.Resource;

using System.Collections.Generic;
using System.Linq;
using EDC.ReadiNow.Model;

namespace ReadiNow.DocGen
{
    /// <summary>
    /// This class is for testing purposes.    
    /// </summary>
    class TestSource : DataSource
    {
        /// <summary>
        /// Return the entities for this data source.
        /// </summary>
        /// <param name="context">Unused.</param>
        /// <returns>
        /// Some dummy 'Resource' entities, with position indexes.
        /// </returns>
        public override IEnumerable<DataElement> GetData(WriterContext context)
        {
            return Enumerable.Range(0, 3)
                .Select(pos => new DataElement(TestEntity, pos));
        }


        /// <summary>
        /// Determine the type of entity that would be found in the context generated by this instruction.
        /// </summary>
        /// <param name="owner">The instruction that owns this data source.</param>
        /// <returns>An EntityType</returns>
        public override EntityType GetContextEntityType(Instruction owner)
        {
            return null;
        }


        /// <summary>
        /// Placeholder singleton to represent a test entity
        /// </summary>
        public static IEntity TestEntity = new Resource();

    }
}
